{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/pay/alipay.jpg","path":"pay/alipay.jpg","modified":1,"renderable":0},{"_id":"source/pay/wechatpay.jpg","path":"pay/wechatpay.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"bdc0d8798e2ac627e5da30c4e829cdecc83b4a54","modified":1539162023686},{"_id":"source/CNAME","hash":"bf7c8d0102a665e91900d8b09183817685118919","modified":1539151573184},{"_id":"themes/next/.DS_Store","hash":"b88b36a1f9320d8475cd85d9009990cdb55e4234","modified":1539164238878},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1539161927866},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1539161927867},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1539161927867},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1539161927867},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1539161927869},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1539161927869},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1539161927869},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1539161927869},{"_id":"themes/next/README.md","hash":"140f4ece6670327a7d33b293947d958de80b44da","modified":1539161927869},{"_id":"themes/next/bower.json","hash":"23379fec9b4f70bc2611433ac3770445a8ca18d9","modified":1539161927870},{"_id":"themes/next/_config.yml","hash":"b8a7cb8418b83e59957ab04b1dddacb465654676","modified":1539162845216},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1539161927871},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1539161927878},{"_id":"themes/next/package.json","hash":"42186cf60771f5547b3a68cf3865f102011930d0","modified":1539161927899},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信.md","hash":"6700b1bf97131acf3b082db93252e093ebdce72b","modified":1472635073000},{"_id":"source/_posts/.DS_Store","hash":"a4e37b62cefbf8b7d16c51501ab23e935c6b936a","modified":1539143467160},{"_id":"source/_posts/这个时代没有怀才不遇.md","hash":"84550bdd579d0ea9db6c0a1d909dc88de838f442","modified":1539162972011},{"_id":"source/categories/index.md","hash":"5bb3df64d56486ab71ad601e51e2b8647be5015a","modified":1472547811000},{"_id":"source/pay/alipay.jpg","hash":"3194c0c212848e1394ad78bea67e668baf751650","modified":1472527542000},{"_id":"source/pay/wechatpay.jpg","hash":"a464c289949960765319e180c62105a463d6d880","modified":1472527560000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1539161927856},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1539161927861},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1539161918771},{"_id":"themes/next/.git/index","hash":"201279a5555da2e0c6db0f97a513518c8eb90cd5","modified":1539161927942},{"_id":"themes/next/.git/packed-refs","hash":"2d6258f7b72468130c95028fc862443d36002bcf","modified":1539161927851},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1539161927867},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1539161927868},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1539161927868},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1539161927868},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1539161927868},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1539161927868},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1539161927871},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1539161927871},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1539161927872},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1539161927872},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1539161927872},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1539161927872},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1539161927873},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1539161927873},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1539161927874},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1539161927878},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1539161927878},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1539161927878},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1539161927879},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1539161927879},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1539161927879},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1539161927879},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1539161927879},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1539161927880},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1539161927880},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1539161927880},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1539161927880},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1539161927880},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1539161927880},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1539161927881},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1539161927881},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1539161927881},{"_id":"themes/next/layout/_layout.swig","hash":"1b59036ccb2ad571503b94587f458fad46775642","modified":1539161927882},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1539161927898},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1539161927898},{"_id":"themes/next/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1539161927899},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1539161927898},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1539161927899},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1539161927899},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1539161927899},{"_id":"themes/next/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1539161927900},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1539161927900},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1539161927900},{"_id":"themes/next/source/.DS_Store","hash":"d19fec38b82325b53698484026ea3e8b36d650dd","modified":1539164240248},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1539161927940},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1539161927941},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1539161927941},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927924},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1472617496000},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_Client_File.png","hash":"aef2d1914ee74b3b05e8fada538fd61d3e4bfba3","modified":1472628937000},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/SYNC.png","hash":"67e671e81d6878bfd7004a91d0c3badb93d63564","modified":1472624021000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1539161918778},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1539161918772},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1539161918780},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1539161918783},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1539161918784},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1539161918777},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1539161918786},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1539161918781},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1539161918775},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1539161918782},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1539161918769},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1539161918787},{"_id":"themes/next/.git/logs/HEAD","hash":"e6dc6d6907e37a8cac5a8def465e77be0809358a","modified":1539161927858},{"_id":"themes/next/docs/ru/README.md","hash":"c54e256ed11a84ee38f755d6f35a3e6e29a91dbc","modified":1539161927875},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1539161927874},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1539161927874},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1539161927875},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1539161927875},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1539161927876},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1539161927876},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1539161927876},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1539161927876},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1539161927877},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1539161927877},{"_id":"themes/next/docs/zh-CN/README.md","hash":"aa6808f4f587c1a97205fa9427ba96a366bcb288","modified":1539161927877},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1539161927878},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1539161927881},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1539161927882},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1539161927882},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1539161927884},{"_id":"themes/next/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1539161927884},{"_id":"themes/next/layout/_partials/footer.swig","hash":"05cdaf9b6cb32afd442b228cd247aaf9468a31ed","modified":1539161927885},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1539161927886},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1539161927886},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1539161927888},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1539161927889},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1539161927889},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1539161927893},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1539161927890},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1539161927895},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1539161927894},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1539161927895},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1539161927896},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1539161927896},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1539161927896},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1539161927896},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1539161927896},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1539161927883},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1539161927883},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1539161927883},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1539161927884},{"_id":"themes/next/layout/_macro/post.swig","hash":"27922af64ecb9db9a28bcf1c98fb68b26bf0b67a","modified":1539161927883},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1539161927884},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1539161927884},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1539161927901},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1539161927901},{"_id":"themes/next/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1539161927901},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"981e01aaf45a1f0f23ce0796d03134f9e437aaca","modified":1539161927902},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1539161927901},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1539161927902},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1539161927902},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1539161927902},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1539161927902},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1539161927924},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1539161927924},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"4cf4afd7db7c17e24542ca66aae6dcd730b7b6f9","modified":1539164137182},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1539162098352},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1539161927926},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1539161927925},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1539161927926},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1539161927926},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1539161927926},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1539161927926},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1539161927927},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"6ee59b23bec45e56941494a0a076b943cd7b82cc","modified":1539164228383},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539161927927},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"040a9c7aecb0320d57688b0d0d49ba7841ad5363","modified":1539163993588},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1539161927927},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539161927928},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1539161927928},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1539161927928},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_File.png","hash":"67e6c2394316e3aed47f7d1c595b82d90dec074c","modified":1472623755000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1539161927928},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927889},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927890},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927923},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927924},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927917},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927917},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927918},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/Create_AIDL_File.png","hash":"17aeefc970b71657183ec62bfd346feb61016e4f","modified":1472198957000},{"_id":"themes/next/.git/refs/heads/master","hash":"25cdb1e360fb6a4249b5b0d841a2065c45ea784c","modified":1539161927858},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1539161927885},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1539161927885},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1539161927885},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1539161927885},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1539161927886},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1539161927886},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1539161927886},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1539161927887},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1539161927887},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1539161927887},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1539161927887},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1539161927888},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1539161927888},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1539161927888},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1539161927889},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1539161927889},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1539161927890},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1539161927890},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1539161927890},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1539161927891},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"07307f1f0e0e9858f2c7143cbdfcb2a9a92149ab","modified":1539161927891},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1539161927891},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1539161927891},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1539161927893},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1539161927893},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1539161927893},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"03ef008bc95e8e83232e5464a6c63d6157d33a5e","modified":1539161927893},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1539161927894},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1539161927894},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1539161927894},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1539161927894},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1539161927895},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1539161927896},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1539161927895},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1539161927897},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1539161927897},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1539161927898},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1539161927898},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1539161927882},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1539161927882},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1539161927917},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1539161927923},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1539161927923},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1539161927924},{"_id":"themes/next/source/css/_variables/base.styl","hash":"f9b83d0385529e52ce7ba95ed5ed6b3d4e2419bb","modified":1539161927924},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1539161927917},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1539161927918},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"59961fb806a39c367fd19ad37268eee112be6729","modified":1539161927918},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1539161927929},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1539161927929},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1539161927929},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1539161927929},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1539161927929},{"_id":"themes/next/source/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1539161927930},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1539161927930},{"_id":"themes/next/source/images/avatar.png","hash":"da43d4f92e3a5ee989499e5ff2f78b750448bf22","modified":1539155833727},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1539161927931},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1539161927930},{"_id":"themes/next/source/js/src/utils.js","hash":"66f2ac658d6110f70a86f784d0c5d891a97c14bd","modified":1539161927931},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1539161927931},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1539161927931},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1539161927931},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1539161927932},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1539161927932},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1539161927940},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1539161927939},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1539161927940},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_JAVA_File.png","hash":"2382cdde4d1094ee07a3b45b2f745df7c071107c","modified":1472624144000},{"_id":"themes/next/.git/objects/pack/pack-cec6631013c2b3b1932112f26b2ad5062b15b617.idx","hash":"3be24e7b88992a045f3f5be4f67f689ec6fe0f49","modified":1539161927837},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1539161927937},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"e6dc6d6907e37a8cac5a8def465e77be0809358a","modified":1539161927858},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1539161927855},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1539161927897},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1539161927897},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1539161927916},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b4a2f1d031fe44452cf55ded8211cf018235073a","modified":1539161927903},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1539161927903},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1539161927903},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1539161927907},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1539161927912},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"b75256fe3768b1a37b6ff6dd7f9f0ff135a42067","modified":1539161927916},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1539161927916},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"efc40a32487e0ac7b94b1ca81bdbdcc4ec8f2924","modified":1539161927916},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1539161927916},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1539161927917},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"02d138ed65060e98f20bc5b1dd59a791222b7156","modified":1539161927917},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"665b1813a1d6fbc3c5549a76e4f26cd62a804dde","modified":1539161927918},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1539161927920},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1539161927920},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1539161927922},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1539161927922},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1539161927922},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1539161927922},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1539161927923},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1539161927923},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"89267bd16ecbedd1958af7f0fb3f4f654d24fffa","modified":1539161927930},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1539161927933},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1539161927932},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1539161927933},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1539161927937},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1539161927937},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1539161927936},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1539161927935},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1539161927939},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"e6dc6d6907e37a8cac5a8def465e77be0809358a","modified":1539161927855},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"a6dc3c7eb81ef5117c28fa2245fff1adc02d0292","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1539161927907},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1539161927907},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1539161927907},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1539161927907},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"fcbbf06b546c366d70b7d2ba5880b0be3ca1e8ea","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"6089cbf4c907fe198b6501e40dc937480d0be175","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e18b90c97aaff027e795f5a0cb10476a71bf1c3a","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1539161927912},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1539161927912},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1539161927912},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1539161927912},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"5e340ee2407a4e39cd708794cfcc718a5f398d7b","modified":1539161927914},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1539161927914},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1539161927914},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1539161927915},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1539161927914},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1539161927915},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1539161927915},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1539161927915},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1539161927920},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1539161927915},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1539161927935},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1539161927920},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/Result.gif","hash":"6e05ca7e781a44a7ccba0d170be0a0c6b326b9e0","modified":1472635421000},{"_id":"themes/next/.git/objects/pack/pack-cec6631013c2b3b1932112f26b2ad5062b15b617.pack","hash":"a3e23b4be1aba1cd04d14e30d79532feae2683bb","modified":1539161927836}],"Category":[{"name":"Android Development","_id":"cjn2yp4ob00037u2vdujjssox"},{"name":"财经","_id":"cjn2yp4od00057u2vl17fpe5m"}],"Data":[],"Page":[{"title":"categories","date":"2016-08-30T09:01:22.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-08-30 17:01:22\ntype: \"categories\"\ncomments: \"false\"\n---\n","updated":"2016-08-30T09:03:31.000Z","path":"categories/index.html","layout":"page","_id":"cjn2yp4vb000a7u2vopd3hmsv","content":"","excerpt":"","more":""}],"Post":[{"title":"详解Android利用AIDL实现进程间通信","date":"2016-08-30T09:11:53.000Z","_content":"\n## 什么是AIDL？\nAIDL是 Android Interface definition language的缩写，是Android的一种接口定义语言。通过它我们可以定义在Android上实现进程间通信的接口,在ADT和AS中会自动为我们写好的AIDL文件生成JAVA代码。\n在Android中，为了实现进程间访问需要把复杂对象分解成操作系统可以理解的基本数据类型，在跨过进程边界后再组合成对象，实现组合成对象的代码单调又难于开发，好在Android为我们提供了AIDL处理这些功能。\n\n## 什么场合下用AIDL？\n直接看官方指南:https://developer.android.com/guide/components/aidl.html的这段话：\n\n```\nNote: Using AIDL is necessary only if you allow clients from different applications \nto access your service for IPC and want to handle multithreading in your service. \nIf you do not need to perform concurrent IPC across different applications, you \nshould create your interface by implementing a Binder or, if you want to perform \nIPC, but do not need to handle multithreading, implement your interface using a \nMessenger.\n```\n只有在你允许多个应用程序访问你提供的服务进行进程间通信，并且在提供的服务中涉及到多线程处理的时候才需要使用到AIDL。如果你无需处理多应用并发通信，你应该采用Binder进行进程间通信。如果你实现的进程间通信未涉及多线程处理，你需要采用Messenger进行进程间通信。\n一般适用于为其它应用程序提供公共服务的Service，这种Service即为系统常驻的Service(如：天气服务，日历服务等)。\n\n## 选择AIDL进行进程间通信有什么优缺点?\n优点:\n1.AIDL有自己的独立进程，不会受到其它进程的影响；\n2.可以被其它进程复用，提供公共服务；\n3.具有很高的灵活性。\n4.相比Messenger,可以传输的数据量大。\n缺点:\n1.相对普通服务，占用系统资源较多，使用AIDL进行IPC也相对麻烦。\n\n## AIDL如何使用？\n既然用AIDL的最终目标是进行不同进程间通信，那这里咱们搞两个APP，一个Server,提供一个Service，用来对传入的参数做加法运算，另外一个Client,调用Server提供的Service。\n\n### Server端实现\n1.建立一个工程，命名:AIDLServer\n2.新建AIDL文件,命名:IMyAidlInterface\n{% asset_img Create_AIDL_File.png [图1] %}\n3.生成后如图2，可以看到自动帮我们生成了一个函数basicTypes，示范了我们可以在AIDL里面使用的基本数据类型，这些类型可以当做参数或者函数返回值，这个函数我们没用到，不用理会，我们新增一个自己的函数add,AIDL文件创建到此结束。\n{% asset_img AIDL_File.png [图2] %}\n4.我们前面提到过，ADT和AS会自动为我们写的AIDL文件生成JAVA代码，这篇文章里面我用的AS，我们点击{% asset_img SYNC.png %}，然后在app/build/generated/source/aidl/debug/包名下可以看到自动生成的IMyAidlInterface.java,不过实际上这个文件我们不会去动它。如图3：\n{% asset_img AIDL_JAVA_File.png [图3] %}\n5.创建Service提供服务，AIDL涉及到IPC通信，所以需要使用绑定服务,在这里我们创建了一个内部类MyAidlImpl继承我们前面写的IMyAidlInterface，并实现了add函数，然后在onBind函数里面返回匿名MyAidlImpl实例。\n\n{% codeblock %}\npackage jackleeforce.aidlserver;\nimport android.app.Service;\nimport android.content.Intent;\nimport android.os.IBinder;\nimport android.os.RemoteException;\nimport android.support.annotation.Nullable;\n\npublic class AIDLService extends Service\n{\n\n    public class MyAidlImpl extends IMyAidlInterface.Stub\n    {\n        @Override\n        public int add(int value1, int value2) throws RemoteException {\n            return value1 + value2;\n        }\n\n        @Override\n        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException {\n\n        }\n    }\n\n    @Nullable\n    @Override\n    public IBinder onBind(Intent intent) {\n        return new MyAidlImpl();\n    }\n}\n{% endcodeblock %}\n\n6.注册AIDLService,在AndroidManifest里面加入\n{% codeblock %}\n<service android:name=\"jackleeforce.aidlserver.AIDLService\"\n            android:exported=\"true\">\n</service>\n{% endcodeblock %}\n\nServer端口开发到此结束，实际上就三步，新增AIDL文件，然后创建绑定服务，在服务内实现我们要对外暴露的接口，然后注册服务，大家注意注册服务时我们写的name值，后面要用到，android:exported=\"true\"表示导出这个服务接口。接下来我们实现客户端。\n\n### Client端实现\n1.建立一个工程，命名:AIDLClient\n2.把刚才在AIDLServer工程里面建的IMyAidlInterface.aidl文件拷贝过来，这里注意包名，一定要跟Server端的一致，可以直接从AIDLServer文件夹里面连同AIDL目录一起拷过来，然后在AS里面刷新一下文件就出现了,如图4:\n{% asset_img AIDL_Client_File.png [图4] %}\n3.我们刚才在服务端定义了一个add计算两个数字和的接口，现在在客户端要使用这个接口，为了演示，这里做个简单计算器好了，MainActivity布局文件如下：\n\n{% codeblock %}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:padding=\"16dp\"\n    tools:context=\".MainActivity\">\n\n    <EditText\n        android:id=\"@+id/et_a\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:inputType=\"number\"\n        android:gravity=\"center_horizontal\" />\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"+\" />\n\n    <EditText\n        android:id=\"@+id/et_b\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:inputType=\"number\"\n        android:gravity=\"center_horizontal\" />\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"=\" />\n\n    <EditText\n        android:id=\"@+id/et_result\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:enabled=\"false\"\n        android:gravity=\"center_horizontal\" />\n\n    <Button\n        android:id=\"@+id/calculate\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:onClick=\"onCalculate\"\n        android:text=\"计算\" />\n</LinearLayout>\n{% endcodeblock%}\n\nMainActivity.java代码如下：\n\n{% codeblock %}\npackage jackleeforce.aidlclient;\n\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.ServiceConnection;\nimport android.os.IBinder;\nimport android.os.RemoteException;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\nimport jackleeforce.aidlserver.IMyAidlInterface;\n\n\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener {\n\n    private EditText et_a;\n    private EditText et_b;\n    private EditText et_result;\n    private Button btn_calc;\n    private IMyAidlInterface mService;\n    private AddServiceConnect mServiceConnect;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        initUI();\n\n        connectService();\n\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n\n        releaseService();\n    }\n\n    private void initUI()\n    {\n        et_a = (EditText)findViewById(R.id.et_a);\n        et_b = (EditText)findViewById(R.id.et_b);\n        et_result = (EditText)findViewById(R.id.et_result);\n        btn_calc = (Button)findViewById(R.id.calculate);\n\n        btn_calc.setOnClickListener(this);\n    }\n\n    @Override\n    public void onClick(View v) {\n        switch (v.getId())\n        {\n            case R.id.calculate:\n                calc();\n                break;\n            default:\n                break;\n\n        }\n    }\n\n    private void calc()\n    {\n        int a = Integer.parseInt(et_a.getText().toString());\n        int b = Integer.parseInt(et_b.getText().toString());\n\n        try\n        {\n            int result = mService.add(a, b);\n\n            et_result.setText(String.valueOf(result));\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }\n\n    class AddServiceConnect implements ServiceConnection\n    {\n        @Override\n        public void onServiceConnected(ComponentName name, IBinder service) {\n            mService = IMyAidlInterface.Stub.asInterface(service);\n\n            Toast.makeText(MainActivity.this,\"onServiceConnected\",Toast.LENGTH_LONG).show();\n        }\n\n        @Override\n        public void onServiceDisconnected(ComponentName name) {\n            mService = null;\n\n            Toast.makeText(MainActivity.this,\"onServiceDisconnected\",Toast.LENGTH_LONG).show();\n        }\n    }\n\n    public void connectService()\n    {\n        mServiceConnect = new AddServiceConnect();\n        Intent i = new Intent();\n\n        i.setComponent(new ComponentName(\"jackleeforce.aidlserver\",\"jackleeforce.aidlserver.AIDLService\"));\n        i.setPackage(getPackageName());\n\n        boolean result = getApplicationContext().bindService(i,mServiceConnect, Context.BIND_AUTO_CREATE);\n        if (!result)\n        {\n            Toast.makeText(MainActivity.this,\"bindService failed\",Toast.LENGTH_LONG).show();\n        }\n    }\n\n    public void releaseService()\n    {\n        unbindService(mServiceConnect);\n        mServiceConnect = null;\n    }\n}\n{% endcodeblock %}\n\n可以看到MainActivity起来的时候调用我们实现的connectService去连接服务端提供的服务，咱们看一下上面的connectService函数，第104行创建一个AddServiceConnect对象，从85行可以看到AddServiceConnect是一个内部类，实现了ServiceConnection接口，一看重载的两个方法名字就能明白，这是一个回调接口，当服务成功连接上了会调用onServiceConnected方法，89行我在onServiceConnected方法中，将返回的Binder对象转换成AIDL接口，以后就可以通过这个AIDL接口去调用服务端暴露出来的Service（在服务端实现的add）。当服务端因异常或者主动断开后，会执行onServiceDisConnected方法，表示已经断开连接。\n接下来再回到connectService函数，第105行创建了一个Intent对象，接下来107和108两行代码非常关键，可以说是一个大坑，照着网络上大部分博文学习AIDL，最后无法成功绑定服务就是因为写错，107行设置Intent对象的ComponentName，第一个参数服务端的包名，第二个参数服务端暴露的Service名字,也就是前面实现服务端代码时在AndroidManifest里面注册的Service Name，这里是jackleeforce.aidlserver.AIDLService，由于Andorid 5.0以后不允许使用匿名Intent对象，这里在108行通过setPackage方法设置包名。然后在110行通过bindService函数去绑定服务。\n\n到这里我们Server端与Client端代码都实现完成了，这里总结一下：\n服务端\n1.定义AIDL文件。\n2.定义要暴露的的Service，并在里面实现AIDL文件中声明的方法。\n3.注册Service，明确Service Name，并将Service声明成Export。\n\n客户端\n1.引入AIDL文件。\n2.通过bindService函数去绑定服务端暴露的Service,系统会通过我们指定的Service Name找到这个Service，成功连接了以后会返回一个Binder对象，我们要用Stub.asInterface将这个Binder对象转换成我们需要的AIDL对象，这个AIDL对象的类实现代码就是系统自动为我们引入的AIDL文件生成的JAVA文件。\n3.有了AIDL对象，我们就可以调用里面暴露的接口了。\n\n分别编译运行AIDLServer与AIDLClient,我这里实现的例子中要先运行AIDLServer与AIDLClient，效果如图：\n{% asset_img Result.gif [最终效果] %}\n\n以上就是AIDL的基本使用知识，接下来我将专门写一篇文章讲诉如何通过AIDL传递复杂对象，并通过AIDL模拟实现QQ社交登陆SDK。\n\n本文中的两个工程例子在此：https://github.com/lijiahua/AIDL_Test\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/详解Android利用AIDL实现进程间通信.md","raw":"---\ntitle: 详解Android利用AIDL实现进程间通信\ndate: 2016-08-30 17:11:53\ncategories: Android Development\ntags: Android,AIDL,进程间通信\n\n---\n\n## 什么是AIDL？\nAIDL是 Android Interface definition language的缩写，是Android的一种接口定义语言。通过它我们可以定义在Android上实现进程间通信的接口,在ADT和AS中会自动为我们写好的AIDL文件生成JAVA代码。\n在Android中，为了实现进程间访问需要把复杂对象分解成操作系统可以理解的基本数据类型，在跨过进程边界后再组合成对象，实现组合成对象的代码单调又难于开发，好在Android为我们提供了AIDL处理这些功能。\n\n## 什么场合下用AIDL？\n直接看官方指南:https://developer.android.com/guide/components/aidl.html的这段话：\n\n```\nNote: Using AIDL is necessary only if you allow clients from different applications \nto access your service for IPC and want to handle multithreading in your service. \nIf you do not need to perform concurrent IPC across different applications, you \nshould create your interface by implementing a Binder or, if you want to perform \nIPC, but do not need to handle multithreading, implement your interface using a \nMessenger.\n```\n只有在你允许多个应用程序访问你提供的服务进行进程间通信，并且在提供的服务中涉及到多线程处理的时候才需要使用到AIDL。如果你无需处理多应用并发通信，你应该采用Binder进行进程间通信。如果你实现的进程间通信未涉及多线程处理，你需要采用Messenger进行进程间通信。\n一般适用于为其它应用程序提供公共服务的Service，这种Service即为系统常驻的Service(如：天气服务，日历服务等)。\n\n## 选择AIDL进行进程间通信有什么优缺点?\n优点:\n1.AIDL有自己的独立进程，不会受到其它进程的影响；\n2.可以被其它进程复用，提供公共服务；\n3.具有很高的灵活性。\n4.相比Messenger,可以传输的数据量大。\n缺点:\n1.相对普通服务，占用系统资源较多，使用AIDL进行IPC也相对麻烦。\n\n## AIDL如何使用？\n既然用AIDL的最终目标是进行不同进程间通信，那这里咱们搞两个APP，一个Server,提供一个Service，用来对传入的参数做加法运算，另外一个Client,调用Server提供的Service。\n\n### Server端实现\n1.建立一个工程，命名:AIDLServer\n2.新建AIDL文件,命名:IMyAidlInterface\n{% asset_img Create_AIDL_File.png [图1] %}\n3.生成后如图2，可以看到自动帮我们生成了一个函数basicTypes，示范了我们可以在AIDL里面使用的基本数据类型，这些类型可以当做参数或者函数返回值，这个函数我们没用到，不用理会，我们新增一个自己的函数add,AIDL文件创建到此结束。\n{% asset_img AIDL_File.png [图2] %}\n4.我们前面提到过，ADT和AS会自动为我们写的AIDL文件生成JAVA代码，这篇文章里面我用的AS，我们点击{% asset_img SYNC.png %}，然后在app/build/generated/source/aidl/debug/包名下可以看到自动生成的IMyAidlInterface.java,不过实际上这个文件我们不会去动它。如图3：\n{% asset_img AIDL_JAVA_File.png [图3] %}\n5.创建Service提供服务，AIDL涉及到IPC通信，所以需要使用绑定服务,在这里我们创建了一个内部类MyAidlImpl继承我们前面写的IMyAidlInterface，并实现了add函数，然后在onBind函数里面返回匿名MyAidlImpl实例。\n\n{% codeblock %}\npackage jackleeforce.aidlserver;\nimport android.app.Service;\nimport android.content.Intent;\nimport android.os.IBinder;\nimport android.os.RemoteException;\nimport android.support.annotation.Nullable;\n\npublic class AIDLService extends Service\n{\n\n    public class MyAidlImpl extends IMyAidlInterface.Stub\n    {\n        @Override\n        public int add(int value1, int value2) throws RemoteException {\n            return value1 + value2;\n        }\n\n        @Override\n        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException {\n\n        }\n    }\n\n    @Nullable\n    @Override\n    public IBinder onBind(Intent intent) {\n        return new MyAidlImpl();\n    }\n}\n{% endcodeblock %}\n\n6.注册AIDLService,在AndroidManifest里面加入\n{% codeblock %}\n<service android:name=\"jackleeforce.aidlserver.AIDLService\"\n            android:exported=\"true\">\n</service>\n{% endcodeblock %}\n\nServer端口开发到此结束，实际上就三步，新增AIDL文件，然后创建绑定服务，在服务内实现我们要对外暴露的接口，然后注册服务，大家注意注册服务时我们写的name值，后面要用到，android:exported=\"true\"表示导出这个服务接口。接下来我们实现客户端。\n\n### Client端实现\n1.建立一个工程，命名:AIDLClient\n2.把刚才在AIDLServer工程里面建的IMyAidlInterface.aidl文件拷贝过来，这里注意包名，一定要跟Server端的一致，可以直接从AIDLServer文件夹里面连同AIDL目录一起拷过来，然后在AS里面刷新一下文件就出现了,如图4:\n{% asset_img AIDL_Client_File.png [图4] %}\n3.我们刚才在服务端定义了一个add计算两个数字和的接口，现在在客户端要使用这个接口，为了演示，这里做个简单计算器好了，MainActivity布局文件如下：\n\n{% codeblock %}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:padding=\"16dp\"\n    tools:context=\".MainActivity\">\n\n    <EditText\n        android:id=\"@+id/et_a\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:inputType=\"number\"\n        android:gravity=\"center_horizontal\" />\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"+\" />\n\n    <EditText\n        android:id=\"@+id/et_b\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:inputType=\"number\"\n        android:gravity=\"center_horizontal\" />\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"=\" />\n\n    <EditText\n        android:id=\"@+id/et_result\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:enabled=\"false\"\n        android:gravity=\"center_horizontal\" />\n\n    <Button\n        android:id=\"@+id/calculate\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:onClick=\"onCalculate\"\n        android:text=\"计算\" />\n</LinearLayout>\n{% endcodeblock%}\n\nMainActivity.java代码如下：\n\n{% codeblock %}\npackage jackleeforce.aidlclient;\n\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.ServiceConnection;\nimport android.os.IBinder;\nimport android.os.RemoteException;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\nimport jackleeforce.aidlserver.IMyAidlInterface;\n\n\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener {\n\n    private EditText et_a;\n    private EditText et_b;\n    private EditText et_result;\n    private Button btn_calc;\n    private IMyAidlInterface mService;\n    private AddServiceConnect mServiceConnect;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        initUI();\n\n        connectService();\n\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n\n        releaseService();\n    }\n\n    private void initUI()\n    {\n        et_a = (EditText)findViewById(R.id.et_a);\n        et_b = (EditText)findViewById(R.id.et_b);\n        et_result = (EditText)findViewById(R.id.et_result);\n        btn_calc = (Button)findViewById(R.id.calculate);\n\n        btn_calc.setOnClickListener(this);\n    }\n\n    @Override\n    public void onClick(View v) {\n        switch (v.getId())\n        {\n            case R.id.calculate:\n                calc();\n                break;\n            default:\n                break;\n\n        }\n    }\n\n    private void calc()\n    {\n        int a = Integer.parseInt(et_a.getText().toString());\n        int b = Integer.parseInt(et_b.getText().toString());\n\n        try\n        {\n            int result = mService.add(a, b);\n\n            et_result.setText(String.valueOf(result));\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }\n\n    class AddServiceConnect implements ServiceConnection\n    {\n        @Override\n        public void onServiceConnected(ComponentName name, IBinder service) {\n            mService = IMyAidlInterface.Stub.asInterface(service);\n\n            Toast.makeText(MainActivity.this,\"onServiceConnected\",Toast.LENGTH_LONG).show();\n        }\n\n        @Override\n        public void onServiceDisconnected(ComponentName name) {\n            mService = null;\n\n            Toast.makeText(MainActivity.this,\"onServiceDisconnected\",Toast.LENGTH_LONG).show();\n        }\n    }\n\n    public void connectService()\n    {\n        mServiceConnect = new AddServiceConnect();\n        Intent i = new Intent();\n\n        i.setComponent(new ComponentName(\"jackleeforce.aidlserver\",\"jackleeforce.aidlserver.AIDLService\"));\n        i.setPackage(getPackageName());\n\n        boolean result = getApplicationContext().bindService(i,mServiceConnect, Context.BIND_AUTO_CREATE);\n        if (!result)\n        {\n            Toast.makeText(MainActivity.this,\"bindService failed\",Toast.LENGTH_LONG).show();\n        }\n    }\n\n    public void releaseService()\n    {\n        unbindService(mServiceConnect);\n        mServiceConnect = null;\n    }\n}\n{% endcodeblock %}\n\n可以看到MainActivity起来的时候调用我们实现的connectService去连接服务端提供的服务，咱们看一下上面的connectService函数，第104行创建一个AddServiceConnect对象，从85行可以看到AddServiceConnect是一个内部类，实现了ServiceConnection接口，一看重载的两个方法名字就能明白，这是一个回调接口，当服务成功连接上了会调用onServiceConnected方法，89行我在onServiceConnected方法中，将返回的Binder对象转换成AIDL接口，以后就可以通过这个AIDL接口去调用服务端暴露出来的Service（在服务端实现的add）。当服务端因异常或者主动断开后，会执行onServiceDisConnected方法，表示已经断开连接。\n接下来再回到connectService函数，第105行创建了一个Intent对象，接下来107和108两行代码非常关键，可以说是一个大坑，照着网络上大部分博文学习AIDL，最后无法成功绑定服务就是因为写错，107行设置Intent对象的ComponentName，第一个参数服务端的包名，第二个参数服务端暴露的Service名字,也就是前面实现服务端代码时在AndroidManifest里面注册的Service Name，这里是jackleeforce.aidlserver.AIDLService，由于Andorid 5.0以后不允许使用匿名Intent对象，这里在108行通过setPackage方法设置包名。然后在110行通过bindService函数去绑定服务。\n\n到这里我们Server端与Client端代码都实现完成了，这里总结一下：\n服务端\n1.定义AIDL文件。\n2.定义要暴露的的Service，并在里面实现AIDL文件中声明的方法。\n3.注册Service，明确Service Name，并将Service声明成Export。\n\n客户端\n1.引入AIDL文件。\n2.通过bindService函数去绑定服务端暴露的Service,系统会通过我们指定的Service Name找到这个Service，成功连接了以后会返回一个Binder对象，我们要用Stub.asInterface将这个Binder对象转换成我们需要的AIDL对象，这个AIDL对象的类实现代码就是系统自动为我们引入的AIDL文件生成的JAVA文件。\n3.有了AIDL对象，我们就可以调用里面暴露的接口了。\n\n分别编译运行AIDLServer与AIDLClient,我这里实现的例子中要先运行AIDLServer与AIDLClient，效果如图：\n{% asset_img Result.gif [最终效果] %}\n\n以上就是AIDL的基本使用知识，接下来我将专门写一篇文章讲诉如何通过AIDL传递复杂对象，并通过AIDL模拟实现QQ社交登陆SDK。\n\n本文中的两个工程例子在此：https://github.com/lijiahua/AIDL_Test\n\n\n\n\n\n\n\n\n\n\n\n","slug":"详解Android利用AIDL实现进程间通信","published":1,"updated":"2016-08-31T09:17:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2yp4o200007u2vhhvxdkef","content":"<h2 id=\"什么是AIDL？\"><a href=\"#什么是AIDL？\" class=\"headerlink\" title=\"什么是AIDL？\"></a>什么是AIDL？</h2><p>AIDL是 Android Interface definition language的缩写，是Android的一种接口定义语言。通过它我们可以定义在Android上实现进程间通信的接口,在ADT和AS中会自动为我们写好的AIDL文件生成JAVA代码。<br>在Android中，为了实现进程间访问需要把复杂对象分解成操作系统可以理解的基本数据类型，在跨过进程边界后再组合成对象，实现组合成对象的代码单调又难于开发，好在Android为我们提供了AIDL处理这些功能。</p>\n<h2 id=\"什么场合下用AIDL？\"><a href=\"#什么场合下用AIDL？\" class=\"headerlink\" title=\"什么场合下用AIDL？\"></a>什么场合下用AIDL？</h2><p>直接看官方指南:<a href=\"https://developer.android.com/guide/components/aidl.html的这段话：\" target=\"_blank\" rel=\"external\">https://developer.android.com/guide/components/aidl.html的这段话：</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Note: Using AIDL is necessary only if you allow clients from different applications </div><div class=\"line\">to access your service for IPC and want to handle multithreading in your service. </div><div class=\"line\">If you do not need to perform concurrent IPC across different applications, you </div><div class=\"line\">should create your interface by implementing a Binder or, if you want to perform </div><div class=\"line\">IPC, but do not need to handle multithreading, implement your interface using a </div><div class=\"line\">Messenger.</div></pre></td></tr></table></figure>\n<p>只有在你允许多个应用程序访问你提供的服务进行进程间通信，并且在提供的服务中涉及到多线程处理的时候才需要使用到AIDL。如果你无需处理多应用并发通信，你应该采用Binder进行进程间通信。如果你实现的进程间通信未涉及多线程处理，你需要采用Messenger进行进程间通信。<br>一般适用于为其它应用程序提供公共服务的Service，这种Service即为系统常驻的Service(如：天气服务，日历服务等)。</p>\n<h2 id=\"选择AIDL进行进程间通信有什么优缺点\"><a href=\"#选择AIDL进行进程间通信有什么优缺点\" class=\"headerlink\" title=\"选择AIDL进行进程间通信有什么优缺点?\"></a>选择AIDL进行进程间通信有什么优缺点?</h2><p>优点:<br>1.AIDL有自己的独立进程，不会受到其它进程的影响；<br>2.可以被其它进程复用，提供公共服务；<br>3.具有很高的灵活性。<br>4.相比Messenger,可以传输的数据量大。<br>缺点:<br>1.相对普通服务，占用系统资源较多，使用AIDL进行IPC也相对麻烦。</p>\n<h2 id=\"AIDL如何使用？\"><a href=\"#AIDL如何使用？\" class=\"headerlink\" title=\"AIDL如何使用？\"></a>AIDL如何使用？</h2><p>既然用AIDL的最终目标是进行不同进程间通信，那这里咱们搞两个APP，一个Server,提供一个Service，用来对传入的参数做加法运算，另外一个Client,调用Server提供的Service。</p>\n<h3 id=\"Server端实现\"><a href=\"#Server端实现\" class=\"headerlink\" title=\"Server端实现\"></a>Server端实现</h3><p>1.建立一个工程，命名:AIDLServer<br>2.新建AIDL文件,命名:IMyAidlInterface<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/Create_AIDL_File.png\" alt=\"[图1]\" title=\"[图1]\"><br>3.生成后如图2，可以看到自动帮我们生成了一个函数basicTypes，示范了我们可以在AIDL里面使用的基本数据类型，这些类型可以当做参数或者函数返回值，这个函数我们没用到，不用理会，我们新增一个自己的函数add,AIDL文件创建到此结束。<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_File.png\" alt=\"[图2]\" title=\"[图2]\"><br>4.我们前面提到过，ADT和AS会自动为我们写的AIDL文件生成JAVA代码，这篇文章里面我用的AS，我们点击<img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/SYNC.png\" alt=\"SYNC.png\" title=\"\">，然后在app/build/generated/source/aidl/debug/包名下可以看到自动生成的IMyAidlInterface.java,不过实际上这个文件我们不会去动它。如图3：<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_JAVA_File.png\" alt=\"[图3]\" title=\"[图3]\"><br>5.创建Service提供服务，AIDL涉及到IPC通信，所以需要使用绑定服务,在这里我们创建了一个内部类MyAidlImpl继承我们前面写的IMyAidlInterface，并实现了add函数，然后在onBind函数里面返回匿名MyAidlImpl实例。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">package jackleeforce.aidlserver;</div><div class=\"line\">import android.app.Service;</div><div class=\"line\">import android.content.Intent;</div><div class=\"line\">import android.os.IBinder;</div><div class=\"line\">import android.os.RemoteException;</div><div class=\"line\">import android.support.annotation.Nullable;</div><div class=\"line\"></div><div class=\"line\">public class AIDLService extends Service</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">    public class MyAidlImpl extends IMyAidlInterface.Stub</div><div class=\"line\">    &#123;</div><div class=\"line\">        @Override</div><div class=\"line\">        public int add(int value1, int value2) throws RemoteException &#123;</div><div class=\"line\">            return value1 + value2;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        @Override</div><div class=\"line\">        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Nullable</div><div class=\"line\">    @Override</div><div class=\"line\">    public IBinder onBind(Intent intent) &#123;</div><div class=\"line\">        return new MyAidlImpl();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>6.注册AIDLService,在AndroidManifest里面加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;service android:name=&quot;jackleeforce.aidlserver.AIDLService&quot;</div><div class=\"line\">            android:exported=&quot;true&quot;&gt;</div><div class=\"line\">&lt;/service&gt;</div></pre></td></tr></table></figure></p>\n<p>Server端口开发到此结束，实际上就三步，新增AIDL文件，然后创建绑定服务，在服务内实现我们要对外暴露的接口，然后注册服务，大家注意注册服务时我们写的name值，后面要用到，android:exported=”true”表示导出这个服务接口。接下来我们实现客户端。</p>\n<h3 id=\"Client端实现\"><a href=\"#Client端实现\" class=\"headerlink\" title=\"Client端实现\"></a>Client端实现</h3><p>1.建立一个工程，命名:AIDLClient<br>2.把刚才在AIDLServer工程里面建的IMyAidlInterface.aidl文件拷贝过来，这里注意包名，一定要跟Server端的一致，可以直接从AIDLServer文件夹里面连同AIDL目录一起拷过来，然后在AS里面刷新一下文件就出现了,如图4:<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_Client_File.png\" alt=\"[图4]\" title=\"[图4]\"><br>3.我们刚才在服务端定义了一个add计算两个数字和的接口，现在在客户端要使用这个接口，为了演示，这里做个简单计算器好了，MainActivity布局文件如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;match_parent&quot;</div><div class=\"line\">    android:padding=&quot;16dp&quot;</div><div class=\"line\">    tools:context=&quot;.MainActivity&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;EditText</div><div class=\"line\">        android:id=&quot;@+id/et_a&quot;</div><div class=\"line\">        android:layout_width=&quot;0dp&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_weight=&quot;1&quot;</div><div class=\"line\">        android:inputType=&quot;number&quot;</div><div class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;TextView</div><div class=\"line\">        android:layout_width=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:text=&quot;+&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;EditText</div><div class=\"line\">        android:id=&quot;@+id/et_b&quot;</div><div class=\"line\">        android:layout_width=&quot;0dp&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_weight=&quot;1&quot;</div><div class=\"line\">        android:inputType=&quot;number&quot;</div><div class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;TextView</div><div class=\"line\">        android:layout_width=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:text=&quot;=&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;EditText</div><div class=\"line\">        android:id=&quot;@+id/et_result&quot;</div><div class=\"line\">        android:layout_width=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_weight=&quot;1&quot;</div><div class=\"line\">        android:enabled=&quot;false&quot;</div><div class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;Button</div><div class=\"line\">        android:id=&quot;@+id/calculate&quot;</div><div class=\"line\">        android:layout_width=&quot;0dp&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_weight=&quot;1&quot;</div><div class=\"line\">        android:onClick=&quot;onCalculate&quot;</div><div class=\"line\">        android:text=&quot;计算&quot; /&gt;</div><div class=\"line\">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure>\n<p>MainActivity.java代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div></pre></td><td class=\"code\"><pre><div class=\"line\">package jackleeforce.aidlclient;</div><div class=\"line\"></div><div class=\"line\">import android.content.ComponentName;</div><div class=\"line\">import android.content.Context;</div><div class=\"line\">import android.content.Intent;</div><div class=\"line\">import android.content.ServiceConnection;</div><div class=\"line\">import android.os.IBinder;</div><div class=\"line\">import android.os.RemoteException;</div><div class=\"line\">import android.support.v7.app.AppCompatActivity;</div><div class=\"line\">import android.os.Bundle;</div><div class=\"line\">import android.view.View;</div><div class=\"line\">import android.widget.Button;</div><div class=\"line\">import android.widget.EditText;</div><div class=\"line\">import android.widget.Toast;</div><div class=\"line\">import jackleeforce.aidlserver.IMyAidlInterface;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123;</div><div class=\"line\"></div><div class=\"line\">    private EditText et_a;</div><div class=\"line\">    private EditText et_b;</div><div class=\"line\">    private EditText et_result;</div><div class=\"line\">    private Button btn_calc;</div><div class=\"line\">    private IMyAidlInterface mService;</div><div class=\"line\">    private AddServiceConnect mServiceConnect;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class=\"line\">        super.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\"></div><div class=\"line\">        initUI();</div><div class=\"line\"></div><div class=\"line\">        connectService();</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    protected void onDestroy() &#123;</div><div class=\"line\">        super.onDestroy();</div><div class=\"line\"></div><div class=\"line\">        releaseService();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    private void initUI()</div><div class=\"line\">    &#123;</div><div class=\"line\">        et_a = (EditText)findViewById(R.id.et_a);</div><div class=\"line\">        et_b = (EditText)findViewById(R.id.et_b);</div><div class=\"line\">        et_result = (EditText)findViewById(R.id.et_result);</div><div class=\"line\">        btn_calc = (Button)findViewById(R.id.calculate);</div><div class=\"line\"></div><div class=\"line\">        btn_calc.setOnClickListener(this);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public void onClick(View v) &#123;</div><div class=\"line\">        switch (v.getId())</div><div class=\"line\">        &#123;</div><div class=\"line\">            case R.id.calculate:</div><div class=\"line\">                calc();</div><div class=\"line\">                break;</div><div class=\"line\">            default:</div><div class=\"line\">                break;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    private void calc()</div><div class=\"line\">    &#123;</div><div class=\"line\">        int a = Integer.parseInt(et_a.getText().toString());</div><div class=\"line\">        int b = Integer.parseInt(et_b.getText().toString());</div><div class=\"line\"></div><div class=\"line\">        try</div><div class=\"line\">        &#123;</div><div class=\"line\">            int result = mService.add(a, b);</div><div class=\"line\"></div><div class=\"line\">            et_result.setText(String.valueOf(result));</div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (Exception e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    class AddServiceConnect implements ServiceConnection</div><div class=\"line\">    &#123;</div><div class=\"line\">        @Override</div><div class=\"line\">        public void onServiceConnected(ComponentName name, IBinder service) &#123;</div><div class=\"line\">            mService = IMyAidlInterface.Stub.asInterface(service);</div><div class=\"line\"></div><div class=\"line\">            Toast.makeText(MainActivity.this,&quot;onServiceConnected&quot;,Toast.LENGTH_LONG).show();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        @Override</div><div class=\"line\">        public void onServiceDisconnected(ComponentName name) &#123;</div><div class=\"line\">            mService = null;</div><div class=\"line\"></div><div class=\"line\">            Toast.makeText(MainActivity.this,&quot;onServiceDisconnected&quot;,Toast.LENGTH_LONG).show();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void connectService()</div><div class=\"line\">    &#123;</div><div class=\"line\">        mServiceConnect = new AddServiceConnect();</div><div class=\"line\">        Intent i = new Intent();</div><div class=\"line\"></div><div class=\"line\">        i.setComponent(new ComponentName(&quot;jackleeforce.aidlserver&quot;,&quot;jackleeforce.aidlserver.AIDLService&quot;));</div><div class=\"line\">        i.setPackage(getPackageName());</div><div class=\"line\"></div><div class=\"line\">        boolean result = getApplicationContext().bindService(i,mServiceConnect, Context.BIND_AUTO_CREATE);</div><div class=\"line\">        if (!result)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Toast.makeText(MainActivity.this,&quot;bindService failed&quot;,Toast.LENGTH_LONG).show();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void releaseService()</div><div class=\"line\">    &#123;</div><div class=\"line\">        unbindService(mServiceConnect);</div><div class=\"line\">        mServiceConnect = null;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>可以看到MainActivity起来的时候调用我们实现的connectService去连接服务端提供的服务，咱们看一下上面的connectService函数，第104行创建一个AddServiceConnect对象，从85行可以看到AddServiceConnect是一个内部类，实现了ServiceConnection接口，一看重载的两个方法名字就能明白，这是一个回调接口，当服务成功连接上了会调用onServiceConnected方法，89行我在onServiceConnected方法中，将返回的Binder对象转换成AIDL接口，以后就可以通过这个AIDL接口去调用服务端暴露出来的Service（在服务端实现的add）。当服务端因异常或者主动断开后，会执行onServiceDisConnected方法，表示已经断开连接。<br>接下来再回到connectService函数，第105行创建了一个Intent对象，接下来107和108两行代码非常关键，可以说是一个大坑，照着网络上大部分博文学习AIDL，最后无法成功绑定服务就是因为写错，107行设置Intent对象的ComponentName，第一个参数服务端的包名，第二个参数服务端暴露的Service名字,也就是前面实现服务端代码时在AndroidManifest里面注册的Service Name，这里是jackleeforce.aidlserver.AIDLService，由于Andorid 5.0以后不允许使用匿名Intent对象，这里在108行通过setPackage方法设置包名。然后在110行通过bindService函数去绑定服务。</p>\n<p>到这里我们Server端与Client端代码都实现完成了，这里总结一下：<br>服务端<br>1.定义AIDL文件。<br>2.定义要暴露的的Service，并在里面实现AIDL文件中声明的方法。<br>3.注册Service，明确Service Name，并将Service声明成Export。</p>\n<p>客户端<br>1.引入AIDL文件。<br>2.通过bindService函数去绑定服务端暴露的Service,系统会通过我们指定的Service Name找到这个Service，成功连接了以后会返回一个Binder对象，我们要用Stub.asInterface将这个Binder对象转换成我们需要的AIDL对象，这个AIDL对象的类实现代码就是系统自动为我们引入的AIDL文件生成的JAVA文件。<br>3.有了AIDL对象，我们就可以调用里面暴露的接口了。</p>\n<p>分别编译运行AIDLServer与AIDLClient,我这里实现的例子中要先运行AIDLServer与AIDLClient，效果如图：<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/Result.gif\" alt=\"[最终效果]\" title=\"[最终效果]\"></p>\n<p>以上就是AIDL的基本使用知识，接下来我将专门写一篇文章讲诉如何通过AIDL传递复杂对象，并通过AIDL模拟实现QQ社交登陆SDK。</p>\n<p>本文中的两个工程例子在此：<a href=\"https://github.com/lijiahua/AIDL_Test\" target=\"_blank\" rel=\"external\">https://github.com/lijiahua/AIDL_Test</a></p>\n","excerpt":"","more":"<h2 id=\"什么是AIDL？\"><a href=\"#什么是AIDL？\" class=\"headerlink\" title=\"什么是AIDL？\"></a>什么是AIDL？</h2><p>AIDL是 Android Interface definition language的缩写，是Android的一种接口定义语言。通过它我们可以定义在Android上实现进程间通信的接口,在ADT和AS中会自动为我们写好的AIDL文件生成JAVA代码。<br>在Android中，为了实现进程间访问需要把复杂对象分解成操作系统可以理解的基本数据类型，在跨过进程边界后再组合成对象，实现组合成对象的代码单调又难于开发，好在Android为我们提供了AIDL处理这些功能。</p>\n<h2 id=\"什么场合下用AIDL？\"><a href=\"#什么场合下用AIDL？\" class=\"headerlink\" title=\"什么场合下用AIDL？\"></a>什么场合下用AIDL？</h2><p>直接看官方指南:<a href=\"https://developer.android.com/guide/components/aidl.html的这段话：\">https://developer.android.com/guide/components/aidl.html的这段话：</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Note: Using AIDL is necessary only if you allow clients from different applications </div><div class=\"line\">to access your service for IPC and want to handle multithreading in your service. </div><div class=\"line\">If you do not need to perform concurrent IPC across different applications, you </div><div class=\"line\">should create your interface by implementing a Binder or, if you want to perform </div><div class=\"line\">IPC, but do not need to handle multithreading, implement your interface using a </div><div class=\"line\">Messenger.</div></pre></td></tr></table></figure>\n<p>只有在你允许多个应用程序访问你提供的服务进行进程间通信，并且在提供的服务中涉及到多线程处理的时候才需要使用到AIDL。如果你无需处理多应用并发通信，你应该采用Binder进行进程间通信。如果你实现的进程间通信未涉及多线程处理，你需要采用Messenger进行进程间通信。<br>一般适用于为其它应用程序提供公共服务的Service，这种Service即为系统常驻的Service(如：天气服务，日历服务等)。</p>\n<h2 id=\"选择AIDL进行进程间通信有什么优缺点\"><a href=\"#选择AIDL进行进程间通信有什么优缺点\" class=\"headerlink\" title=\"选择AIDL进行进程间通信有什么优缺点?\"></a>选择AIDL进行进程间通信有什么优缺点?</h2><p>优点:<br>1.AIDL有自己的独立进程，不会受到其它进程的影响；<br>2.可以被其它进程复用，提供公共服务；<br>3.具有很高的灵活性。<br>4.相比Messenger,可以传输的数据量大。<br>缺点:<br>1.相对普通服务，占用系统资源较多，使用AIDL进行IPC也相对麻烦。</p>\n<h2 id=\"AIDL如何使用？\"><a href=\"#AIDL如何使用？\" class=\"headerlink\" title=\"AIDL如何使用？\"></a>AIDL如何使用？</h2><p>既然用AIDL的最终目标是进行不同进程间通信，那这里咱们搞两个APP，一个Server,提供一个Service，用来对传入的参数做加法运算，另外一个Client,调用Server提供的Service。</p>\n<h3 id=\"Server端实现\"><a href=\"#Server端实现\" class=\"headerlink\" title=\"Server端实现\"></a>Server端实现</h3><p>1.建立一个工程，命名:AIDLServer<br>2.新建AIDL文件,命名:IMyAidlInterface<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/Create_AIDL_File.png\" alt=\"[图1]\" title=\"[图1]\"><br>3.生成后如图2，可以看到自动帮我们生成了一个函数basicTypes，示范了我们可以在AIDL里面使用的基本数据类型，这些类型可以当做参数或者函数返回值，这个函数我们没用到，不用理会，我们新增一个自己的函数add,AIDL文件创建到此结束。<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_File.png\" alt=\"[图2]\" title=\"[图2]\"><br>4.我们前面提到过，ADT和AS会自动为我们写的AIDL文件生成JAVA代码，这篇文章里面我用的AS，我们点击<img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/SYNC.png\" alt=\"SYNC.png\" title=\"\">，然后在app/build/generated/source/aidl/debug/包名下可以看到自动生成的IMyAidlInterface.java,不过实际上这个文件我们不会去动它。如图3：<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_JAVA_File.png\" alt=\"[图3]\" title=\"[图3]\"><br>5.创建Service提供服务，AIDL涉及到IPC通信，所以需要使用绑定服务,在这里我们创建了一个内部类MyAidlImpl继承我们前面写的IMyAidlInterface，并实现了add函数，然后在onBind函数里面返回匿名MyAidlImpl实例。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">package jackleeforce.aidlserver;</div><div class=\"line\">import android.app.Service;</div><div class=\"line\">import android.content.Intent;</div><div class=\"line\">import android.os.IBinder;</div><div class=\"line\">import android.os.RemoteException;</div><div class=\"line\">import android.support.annotation.Nullable;</div><div class=\"line\"></div><div class=\"line\">public class AIDLService extends Service</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">    public class MyAidlImpl extends IMyAidlInterface.Stub</div><div class=\"line\">    &#123;</div><div class=\"line\">        @Override</div><div class=\"line\">        public int add(int value1, int value2) throws RemoteException &#123;</div><div class=\"line\">            return value1 + value2;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        @Override</div><div class=\"line\">        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Nullable</div><div class=\"line\">    @Override</div><div class=\"line\">    public IBinder onBind(Intent intent) &#123;</div><div class=\"line\">        return new MyAidlImpl();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>6.注册AIDLService,在AndroidManifest里面加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;service android:name=&quot;jackleeforce.aidlserver.AIDLService&quot;</div><div class=\"line\">            android:exported=&quot;true&quot;&gt;</div><div class=\"line\">&lt;/service&gt;</div></pre></td></tr></table></figure></p>\n<p>Server端口开发到此结束，实际上就三步，新增AIDL文件，然后创建绑定服务，在服务内实现我们要对外暴露的接口，然后注册服务，大家注意注册服务时我们写的name值，后面要用到，android:exported=”true”表示导出这个服务接口。接下来我们实现客户端。</p>\n<h3 id=\"Client端实现\"><a href=\"#Client端实现\" class=\"headerlink\" title=\"Client端实现\"></a>Client端实现</h3><p>1.建立一个工程，命名:AIDLClient<br>2.把刚才在AIDLServer工程里面建的IMyAidlInterface.aidl文件拷贝过来，这里注意包名，一定要跟Server端的一致，可以直接从AIDLServer文件夹里面连同AIDL目录一起拷过来，然后在AS里面刷新一下文件就出现了,如图4:<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_Client_File.png\" alt=\"[图4]\" title=\"[图4]\"><br>3.我们刚才在服务端定义了一个add计算两个数字和的接口，现在在客户端要使用这个接口，为了演示，这里做个简单计算器好了，MainActivity布局文件如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class=\"line\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class=\"line\">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class=\"line\">    android:layout_width=&quot;match_parent&quot;</div><div class=\"line\">    android:layout_height=&quot;match_parent&quot;</div><div class=\"line\">    android:padding=&quot;16dp&quot;</div><div class=\"line\">    tools:context=&quot;.MainActivity&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;EditText</div><div class=\"line\">        android:id=&quot;@+id/et_a&quot;</div><div class=\"line\">        android:layout_width=&quot;0dp&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_weight=&quot;1&quot;</div><div class=\"line\">        android:inputType=&quot;number&quot;</div><div class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;TextView</div><div class=\"line\">        android:layout_width=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:text=&quot;+&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;EditText</div><div class=\"line\">        android:id=&quot;@+id/et_b&quot;</div><div class=\"line\">        android:layout_width=&quot;0dp&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_weight=&quot;1&quot;</div><div class=\"line\">        android:inputType=&quot;number&quot;</div><div class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;TextView</div><div class=\"line\">        android:layout_width=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:text=&quot;=&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;EditText</div><div class=\"line\">        android:id=&quot;@+id/et_result&quot;</div><div class=\"line\">        android:layout_width=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_weight=&quot;1&quot;</div><div class=\"line\">        android:enabled=&quot;false&quot;</div><div class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;Button</div><div class=\"line\">        android:id=&quot;@+id/calculate&quot;</div><div class=\"line\">        android:layout_width=&quot;0dp&quot;</div><div class=\"line\">        android:layout_height=&quot;wrap_content&quot;</div><div class=\"line\">        android:layout_weight=&quot;1&quot;</div><div class=\"line\">        android:onClick=&quot;onCalculate&quot;</div><div class=\"line\">        android:text=&quot;计算&quot; /&gt;</div><div class=\"line\">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure>\n<p>MainActivity.java代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div></pre></td><td class=\"code\"><pre><div class=\"line\">package jackleeforce.aidlclient;</div><div class=\"line\"></div><div class=\"line\">import android.content.ComponentName;</div><div class=\"line\">import android.content.Context;</div><div class=\"line\">import android.content.Intent;</div><div class=\"line\">import android.content.ServiceConnection;</div><div class=\"line\">import android.os.IBinder;</div><div class=\"line\">import android.os.RemoteException;</div><div class=\"line\">import android.support.v7.app.AppCompatActivity;</div><div class=\"line\">import android.os.Bundle;</div><div class=\"line\">import android.view.View;</div><div class=\"line\">import android.widget.Button;</div><div class=\"line\">import android.widget.EditText;</div><div class=\"line\">import android.widget.Toast;</div><div class=\"line\">import jackleeforce.aidlserver.IMyAidlInterface;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123;</div><div class=\"line\"></div><div class=\"line\">    private EditText et_a;</div><div class=\"line\">    private EditText et_b;</div><div class=\"line\">    private EditText et_result;</div><div class=\"line\">    private Button btn_calc;</div><div class=\"line\">    private IMyAidlInterface mService;</div><div class=\"line\">    private AddServiceConnect mServiceConnect;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class=\"line\">        super.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\"></div><div class=\"line\">        initUI();</div><div class=\"line\"></div><div class=\"line\">        connectService();</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    protected void onDestroy() &#123;</div><div class=\"line\">        super.onDestroy();</div><div class=\"line\"></div><div class=\"line\">        releaseService();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    private void initUI()</div><div class=\"line\">    &#123;</div><div class=\"line\">        et_a = (EditText)findViewById(R.id.et_a);</div><div class=\"line\">        et_b = (EditText)findViewById(R.id.et_b);</div><div class=\"line\">        et_result = (EditText)findViewById(R.id.et_result);</div><div class=\"line\">        btn_calc = (Button)findViewById(R.id.calculate);</div><div class=\"line\"></div><div class=\"line\">        btn_calc.setOnClickListener(this);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Override</div><div class=\"line\">    public void onClick(View v) &#123;</div><div class=\"line\">        switch (v.getId())</div><div class=\"line\">        &#123;</div><div class=\"line\">            case R.id.calculate:</div><div class=\"line\">                calc();</div><div class=\"line\">                break;</div><div class=\"line\">            default:</div><div class=\"line\">                break;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    private void calc()</div><div class=\"line\">    &#123;</div><div class=\"line\">        int a = Integer.parseInt(et_a.getText().toString());</div><div class=\"line\">        int b = Integer.parseInt(et_b.getText().toString());</div><div class=\"line\"></div><div class=\"line\">        try</div><div class=\"line\">        &#123;</div><div class=\"line\">            int result = mService.add(a, b);</div><div class=\"line\"></div><div class=\"line\">            et_result.setText(String.valueOf(result));</div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (Exception e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    class AddServiceConnect implements ServiceConnection</div><div class=\"line\">    &#123;</div><div class=\"line\">        @Override</div><div class=\"line\">        public void onServiceConnected(ComponentName name, IBinder service) &#123;</div><div class=\"line\">            mService = IMyAidlInterface.Stub.asInterface(service);</div><div class=\"line\"></div><div class=\"line\">            Toast.makeText(MainActivity.this,&quot;onServiceConnected&quot;,Toast.LENGTH_LONG).show();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        @Override</div><div class=\"line\">        public void onServiceDisconnected(ComponentName name) &#123;</div><div class=\"line\">            mService = null;</div><div class=\"line\"></div><div class=\"line\">            Toast.makeText(MainActivity.this,&quot;onServiceDisconnected&quot;,Toast.LENGTH_LONG).show();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void connectService()</div><div class=\"line\">    &#123;</div><div class=\"line\">        mServiceConnect = new AddServiceConnect();</div><div class=\"line\">        Intent i = new Intent();</div><div class=\"line\"></div><div class=\"line\">        i.setComponent(new ComponentName(&quot;jackleeforce.aidlserver&quot;,&quot;jackleeforce.aidlserver.AIDLService&quot;));</div><div class=\"line\">        i.setPackage(getPackageName());</div><div class=\"line\"></div><div class=\"line\">        boolean result = getApplicationContext().bindService(i,mServiceConnect, Context.BIND_AUTO_CREATE);</div><div class=\"line\">        if (!result)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Toast.makeText(MainActivity.this,&quot;bindService failed&quot;,Toast.LENGTH_LONG).show();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public void releaseService()</div><div class=\"line\">    &#123;</div><div class=\"line\">        unbindService(mServiceConnect);</div><div class=\"line\">        mServiceConnect = null;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>可以看到MainActivity起来的时候调用我们实现的connectService去连接服务端提供的服务，咱们看一下上面的connectService函数，第104行创建一个AddServiceConnect对象，从85行可以看到AddServiceConnect是一个内部类，实现了ServiceConnection接口，一看重载的两个方法名字就能明白，这是一个回调接口，当服务成功连接上了会调用onServiceConnected方法，89行我在onServiceConnected方法中，将返回的Binder对象转换成AIDL接口，以后就可以通过这个AIDL接口去调用服务端暴露出来的Service（在服务端实现的add）。当服务端因异常或者主动断开后，会执行onServiceDisConnected方法，表示已经断开连接。<br>接下来再回到connectService函数，第105行创建了一个Intent对象，接下来107和108两行代码非常关键，可以说是一个大坑，照着网络上大部分博文学习AIDL，最后无法成功绑定服务就是因为写错，107行设置Intent对象的ComponentName，第一个参数服务端的包名，第二个参数服务端暴露的Service名字,也就是前面实现服务端代码时在AndroidManifest里面注册的Service Name，这里是jackleeforce.aidlserver.AIDLService，由于Andorid 5.0以后不允许使用匿名Intent对象，这里在108行通过setPackage方法设置包名。然后在110行通过bindService函数去绑定服务。</p>\n<p>到这里我们Server端与Client端代码都实现完成了，这里总结一下：<br>服务端<br>1.定义AIDL文件。<br>2.定义要暴露的的Service，并在里面实现AIDL文件中声明的方法。<br>3.注册Service，明确Service Name，并将Service声明成Export。</p>\n<p>客户端<br>1.引入AIDL文件。<br>2.通过bindService函数去绑定服务端暴露的Service,系统会通过我们指定的Service Name找到这个Service，成功连接了以后会返回一个Binder对象，我们要用Stub.asInterface将这个Binder对象转换成我们需要的AIDL对象，这个AIDL对象的类实现代码就是系统自动为我们引入的AIDL文件生成的JAVA文件。<br>3.有了AIDL对象，我们就可以调用里面暴露的接口了。</p>\n<p>分别编译运行AIDLServer与AIDLClient,我这里实现的例子中要先运行AIDLServer与AIDLClient，效果如图：<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/Result.gif\" alt=\"[最终效果]\" title=\"[最终效果]\"></p>\n<p>以上就是AIDL的基本使用知识，接下来我将专门写一篇文章讲诉如何通过AIDL传递复杂对象，并通过AIDL模拟实现QQ社交登陆SDK。</p>\n<p>本文中的两个工程例子在此：<a href=\"https://github.com/lijiahua/AIDL_Test\">https://github.com/lijiahua/AIDL_Test</a></p>\n"},{"title":"这个时代没有怀才不遇","date":"2018-10-10T06:37:08.000Z","_content":"\n![](https://xqimg.imedao.com/16658d38d02be83fdbe00cf7.jpg)\n\n假期里Boy 的微信读者群好不热闹，大家每天都在讨论各种职场成长的深度问题。前几天有人问道：\n\n总是觉得自己怀才不遇，没人赏识自己，每天只能埋头苦干的人想要飞黄腾达出路在哪里？\n\n今天的文章，我就来聊聊这个话题。在正式开始之前，我先抛出观点：\n\n这个时代已经没有什么怀才不遇。所谓的怀才不遇，只是你的才能还不够罢了。\n\n为了清晰说明这个问题，下面我从三点来分别解释。\n\n**01**\n\n**时代大趋势**\n\n世界正变得越来越扁平。\n\n如果你留意了最近的商业经济新闻，你会发现越来越多的公司都开始强调“无边界组织”。\n\n这个概念最初来源于通用电气的CEO杰克韦尔奇，后来经过互联网时代的发展，逐渐升级变成许多大公司内部推行的一种组织架构革命。\n\n什么叫无边界组织呢？\n\n简单来说，就是企业不再按照传统的职能属性来划分部门，而是将它们糅合在一起，每个员工都可以和拥有不同技能的人在一个单元组织里共同协作，彼此之间没有边界，无障碍交流。\n\n比如产品研发，销售，传播，公关甚至是财务都被放在一起，组成一个团队，共同攻克一个项目目标。等到目标达成，这些人又被打散到其他的单元组织里，为新的项目工作。\n\n像谷歌、亚马逊、阿里巴巴、腾讯等许多互联网公司已经开始推行这种工作模式，并由此延伸出一套内部竞争机制。\n\n他们让公司内部不同的团队共同PK一个项目，然后选出一个最佳方案，最后集中公司资源来帮助它迅速成长。团队里的每个人都对项目的最终结果负责，各自的才能被尽善其用，不存在谁职位高谁就能一言九鼎的情况。\n\n许多我们熟知的互联网产品，例如微信、王者荣耀等就是腾讯内部竞争的产物。而它们的最初构想，都来源于最普通的员工。\n\n这么做的好处，是能够迅速应对外界环境的变化，一旦出现新的竞争对手或市场风向改变，可以灵活迅速地制定对策并执行。你不需要拿着一份计划书从地区汇报到中央，再从中央汇报到全球总部。等到兜一圈下来终于决定做了，黄花菜都凉了。\n\n无边界组织以目标为导向，强调“快、准、狠”。即：快速嗅到风向变化，准确把握市场需求，狠下手来全力以赴。\n\n它并不遵循传统企业的金字塔式结构，不需要层层上报给大老板，也没有诸如总监、经理、主管的层级壁垒，更不会受制于庞大人员规模所带来的效率递减。无边界组织更像是企业内部一个个小的作战单元，可以随时组装，随时打散。\n\n在这种扁平化的管理模式下，作为员工的每一个个体，不用担心自己的才能被埋没。因为这种组织的目的，就是让最有价值的想法能够最快地被接受和执行。\n\n用大白话来说，这是一种“你行你上”的工作模式。它让最优秀的人才，在最短的时间里完成最有挑战的事情。\n\n传统企业是存量思维，一个萝卜一个坑，越往金字塔顶端，机会越少；而扁平化组织是增量思维，它每时每刻都在创造新的机会。\n\n比如现在很流行的众包工作模式，就是扁平化组织的一种应用。客户将项目需求发布在网上，全世界各地拥有相应技能的人聚集在一起，利用网络进行项目沟通与协作。\n\n而每一次众包机会你都可以尝试不同的角色。例如今天你在这个项目做的是营销公关，下次可以去另一个项目做商务拓展，再过段时间去做产品经理也没问题。\n\n只要你的能力足够强，机会总是源源不断。\n\n![](https://xqimg.imedao.com/16658d3c58dbef3fe15020e8.jpg)\n\n**02**\n\n**展示才能的出口越来越多**\n\n我们身边你能展示才能的出口越来越多。\n\n如今除了写微信公众号，还有各种各样的职业社交网站，专业技能论坛等供你展现自己的才能。\n\n比如Linkedin 领英或者脉脉。这些地方每天聚集着各行各业的职场精英人士，你可以花时间去研究一下如何在上面优化自己的职业档案，加入某些主题讨论或者发布职业需求。\n\n比如GitHub, 这里是程序员的天堂。每天都有各路好手在GitHub上交流技术经验，发布项目心得，你在这里能认识许多顶级互联网公司的大牛。\n\n再比如像36Kr、知乎等这种商业科技泛知识类平台，现在也能开通个人专栏。你对某个领域有什么见解，就坚持不懈写下去，只要内容够好就一定能吸引与你志同道合的人。\n\n总之，只要用心去找，你一定能找到可以展现自己才能的出口。\n\n那些只会埋头苦干却不懂展示自己的人，是一定要被淘汰的。因为你需要花更久的时间，被动地让别人去了解你，接受你，赏识你。\n\n但这个世界已经没有那么多时间去等你。\n\n得益于互联网的飞速发展，怀才不再像怀孕，非得时间久了才能看得出来。一个人有没有才能，他说几句话，写几篇文章，发表几个观点就能看得出来。\n\n刘备三顾茅庐的故事，现在基本不可能。除非你真有诸葛亮一般经天纬地之才，值得有人为你苦苦等待。否则，还是主动一点。\n\n我有个朋友，在简历上就会放自己的作品集网站和公众号链接。每次面试的时候，面试官都会问他这是什么。这就打开了场面，接下来他能滔滔不绝和对方聊好久。\n\n你看，主动一点，机会就能多一点。\n\n以上两点，都是外面的变化，给你带来的机遇。这些近在眼前的机会如果还抓不住，那就真的不是怀才不遇的问题了。\n\n![](https://xqimg.imedao.com/16658d3d8f4a7f3feaef1439.jpg)\n\n**03**\n\n**如何让自己脱颖而出**\n\n大家说几个小建议。没有花里胡哨的办法，只有最淳朴的七个字：\n\n会写，会说，敢表现。\n\n之所以说淳朴，是因为每个人都知道，但并不是每个人都能做到。下面我分别来讲。\n\n**a）会写：勤于记录，积少成多**\n\n能够把你的所思所想用逻辑清晰、精炼的文字准确表达出来，这就叫会写。\n\n写作是成本最低的才能展示方法，也是未来每个人都要具备的底层核心能力。写作能力提高了，你的思维和表达能力也能够提升。\n\n那么如何训练呢？最简单的办法，就是写“日志”。\n\n注意，这个日志可不是朋友圈里的美食打卡或心情分享，而是你对时事热点的观察与思考。\n\n比如，为什么范冰冰补缴了8亿罚款就可以不被追究刑事责任？这背后的法律考量是怎样的？税法这么规定对以后的行业发展有什么指导意义？\n\n再比如，特斯拉的CEO 马斯克被迫退出董事会，这会对特斯拉未来的发展产生什么影响？为什么马斯克对特斯拉如此重要？他的接任者该如何处理接下来的烂摊子？\n\n这些问题都是很好的思维锻炼与写作的素材。大家可以把自己的思考从50字100字写起，然后逐渐扩充篇幅，从写几句话，变成慢慢写几段话，最后再扩充成文章。\n\n你写的篇幅越多，经验才会越足，对文字的驾驭能力也会越强。\n\n可能这时有些朋友会问：我很想写，但是文笔不好写不出来怎么办呢？\n\n这时你要去阅读。去找那些你认为写得好的作者的文章，耳濡目染地去感受他的写作思路和手法。时间久了，你写出来的东西就会带有这些人的印记。\n\n打个不恰当的比方，这就好像你看郭敬明的文章多了，你写出来的文字也会“悲伤逆流成河”。参照物的力量都是潜移默化地影响着你。\n\n当积累写到10万字的时候，你的写作能力会有一个质的飞跃。这时，你就拥有了展示自我才能的第一件武器。\n\n**b）会说：放大声量，刻意练习**\n\n能够把自己的观点声情并茂地讲出来，吸引听众的注意，这就是会说。\n\n你有没有发现，口才好的人在职场上往往占尽先机。即使你脑子里有一大套东西，可是讲不出来，一样是白搭。\n\n而那些会说的人，哪怕观点待斟酌，逻辑有问题，可在他的舌灿莲花下，这些瑕疵都能被掩饰过去。听众如果不仔细分析，很容易就被他这么带过去了。\n\n也许你会认为这是忽悠，但会忽悠的人，同样有本事。你可以学其精华，去其糟粕。\n\n怎么去做呢？最简单的方法，就是大声朗读。\n\n你可以把你喜欢的书籍或文章，在家对着镜子大声朗读出来，提高自己的演讲临场感。\n\n这个方法，来源于美国教授斯蒂夫卢卡斯写的《演讲的艺术》。在书中，他用这个简单的办法帮助了超过1000名“演讲恐惧者”克服障碍，流利演说。\n\n![](https://xqimg.imedao.com/16658d3ec4d9fd3fe2d749d3.jpg)\n\n这里的秘诀在于，当你在大声朗读的时候，才能找到属于自己的说话节奏、习惯甚至毛病，这是除你之外其他人不可能知道的。只有通过亲身实践，你才可以找到最适合自己的演讲风格。\n\n更进一步，你还可以大声朗读自己写的作品。这时你会发现，文字写出来和说出来，是完全不同的感觉。这个就留待大家去实践琢磨，你会发现许多意外惊喜。\n\n除此之外，在日常生活中，你可以抓住任何交谈的机会，来锻炼自己的口才。比如拿奇葩说里的议题和朋友讨论，或者就某个新闻话题展开一番“小辩论”。这里并不用得出什么结论，而是在过程中不断练习说话的技巧。\n\n最后完毕了，再做一番简单的复盘，总结一下自己讲话的语气、动作、声量、节奏都有哪些特点，通过朋友的反馈来帮助你更好了解自己，提升讲话的能力。\n\n总之，用刻意练习的方法给自己创造机会多去说，它和写作一样都没有捷径，唯手熟尔。\n\n**c）敢表现：放下脸面，不怕冒头**\n\n上面两点说的都是技巧，最后这一点说的是心态。\n\n这个时代比的不再是谁更有才，而是谁更有胆。如今许多人即使有才也不表现出来，他这不是怀才不遇，而是怀才不敢。\n\n中国人都说枪打出头鸟，可看看我们周围那些闯出一番成绩的人，有哪个不是出头鸟？那些拼了命打压、嘲讽你的人，要么是自己也不敢，要么是害怕你比他还敢。而只有那些做不到的人，才会怂恿其他人也不要做到。\n\n《权力的游戏》里，狮家的主人泰温兰尼斯特有句话说的很对：\n\n“狮子从来不会去问羊的意见。”\n\n![](https://xqimg.imedao.com/16658d40708bf63f7941eb6f.jpg)\n\n你如果真有一身才干，就不要去考虑那些懦弱胆小者的看法，而是去想如何利用大环境、渠道和资源来让自己的才能得到充分展现。\n\n还记得文章最开头说的无边界组织吗？这就是一个很好的征兆。未来社会给予人才的平台只会越来越多，竞争也会越来越激烈，再也不会有“酒香不怕巷子深”。\n\n所以请主动一点，不要像羊群一样永远呆在一个区域。而是运用互联网络、社交媒体等这些时代赋予你的武器，去开拓自己的视野与出口，像狮子一样去找寻猎物。\n\n以上就是今天的内容，最后简单总结一下：\n\n这个时代已经没有什么怀才不遇。\n\n世界正变得越来越扁平，身边能够展示才能的出口也越来越多。想要脱颖而出，最简单的办法就是培养自己写作和说话的能力，最后再加上充分的胆量，不要偏安一隅。\n\n记住，绵羊永远不可能成为狮子。\n\n各位共勉。\n\n作者：张良计\n\n本文来源：张良计（ID:zhang_liangj）\n","source":"_posts/这个时代没有怀才不遇.md","raw":"---\ntitle: 这个时代没有怀才不遇\ndate: 2018-10-10 14:37:08\ncategories: 财经\ntags: 转载,职业,鸡汤\n---\n\n![](https://xqimg.imedao.com/16658d38d02be83fdbe00cf7.jpg)\n\n假期里Boy 的微信读者群好不热闹，大家每天都在讨论各种职场成长的深度问题。前几天有人问道：\n\n总是觉得自己怀才不遇，没人赏识自己，每天只能埋头苦干的人想要飞黄腾达出路在哪里？\n\n今天的文章，我就来聊聊这个话题。在正式开始之前，我先抛出观点：\n\n这个时代已经没有什么怀才不遇。所谓的怀才不遇，只是你的才能还不够罢了。\n\n为了清晰说明这个问题，下面我从三点来分别解释。\n\n**01**\n\n**时代大趋势**\n\n世界正变得越来越扁平。\n\n如果你留意了最近的商业经济新闻，你会发现越来越多的公司都开始强调“无边界组织”。\n\n这个概念最初来源于通用电气的CEO杰克韦尔奇，后来经过互联网时代的发展，逐渐升级变成许多大公司内部推行的一种组织架构革命。\n\n什么叫无边界组织呢？\n\n简单来说，就是企业不再按照传统的职能属性来划分部门，而是将它们糅合在一起，每个员工都可以和拥有不同技能的人在一个单元组织里共同协作，彼此之间没有边界，无障碍交流。\n\n比如产品研发，销售，传播，公关甚至是财务都被放在一起，组成一个团队，共同攻克一个项目目标。等到目标达成，这些人又被打散到其他的单元组织里，为新的项目工作。\n\n像谷歌、亚马逊、阿里巴巴、腾讯等许多互联网公司已经开始推行这种工作模式，并由此延伸出一套内部竞争机制。\n\n他们让公司内部不同的团队共同PK一个项目，然后选出一个最佳方案，最后集中公司资源来帮助它迅速成长。团队里的每个人都对项目的最终结果负责，各自的才能被尽善其用，不存在谁职位高谁就能一言九鼎的情况。\n\n许多我们熟知的互联网产品，例如微信、王者荣耀等就是腾讯内部竞争的产物。而它们的最初构想，都来源于最普通的员工。\n\n这么做的好处，是能够迅速应对外界环境的变化，一旦出现新的竞争对手或市场风向改变，可以灵活迅速地制定对策并执行。你不需要拿着一份计划书从地区汇报到中央，再从中央汇报到全球总部。等到兜一圈下来终于决定做了，黄花菜都凉了。\n\n无边界组织以目标为导向，强调“快、准、狠”。即：快速嗅到风向变化，准确把握市场需求，狠下手来全力以赴。\n\n它并不遵循传统企业的金字塔式结构，不需要层层上报给大老板，也没有诸如总监、经理、主管的层级壁垒，更不会受制于庞大人员规模所带来的效率递减。无边界组织更像是企业内部一个个小的作战单元，可以随时组装，随时打散。\n\n在这种扁平化的管理模式下，作为员工的每一个个体，不用担心自己的才能被埋没。因为这种组织的目的，就是让最有价值的想法能够最快地被接受和执行。\n\n用大白话来说，这是一种“你行你上”的工作模式。它让最优秀的人才，在最短的时间里完成最有挑战的事情。\n\n传统企业是存量思维，一个萝卜一个坑，越往金字塔顶端，机会越少；而扁平化组织是增量思维，它每时每刻都在创造新的机会。\n\n比如现在很流行的众包工作模式，就是扁平化组织的一种应用。客户将项目需求发布在网上，全世界各地拥有相应技能的人聚集在一起，利用网络进行项目沟通与协作。\n\n而每一次众包机会你都可以尝试不同的角色。例如今天你在这个项目做的是营销公关，下次可以去另一个项目做商务拓展，再过段时间去做产品经理也没问题。\n\n只要你的能力足够强，机会总是源源不断。\n\n![](https://xqimg.imedao.com/16658d3c58dbef3fe15020e8.jpg)\n\n**02**\n\n**展示才能的出口越来越多**\n\n我们身边你能展示才能的出口越来越多。\n\n如今除了写微信公众号，还有各种各样的职业社交网站，专业技能论坛等供你展现自己的才能。\n\n比如Linkedin 领英或者脉脉。这些地方每天聚集着各行各业的职场精英人士，你可以花时间去研究一下如何在上面优化自己的职业档案，加入某些主题讨论或者发布职业需求。\n\n比如GitHub, 这里是程序员的天堂。每天都有各路好手在GitHub上交流技术经验，发布项目心得，你在这里能认识许多顶级互联网公司的大牛。\n\n再比如像36Kr、知乎等这种商业科技泛知识类平台，现在也能开通个人专栏。你对某个领域有什么见解，就坚持不懈写下去，只要内容够好就一定能吸引与你志同道合的人。\n\n总之，只要用心去找，你一定能找到可以展现自己才能的出口。\n\n那些只会埋头苦干却不懂展示自己的人，是一定要被淘汰的。因为你需要花更久的时间，被动地让别人去了解你，接受你，赏识你。\n\n但这个世界已经没有那么多时间去等你。\n\n得益于互联网的飞速发展，怀才不再像怀孕，非得时间久了才能看得出来。一个人有没有才能，他说几句话，写几篇文章，发表几个观点就能看得出来。\n\n刘备三顾茅庐的故事，现在基本不可能。除非你真有诸葛亮一般经天纬地之才，值得有人为你苦苦等待。否则，还是主动一点。\n\n我有个朋友，在简历上就会放自己的作品集网站和公众号链接。每次面试的时候，面试官都会问他这是什么。这就打开了场面，接下来他能滔滔不绝和对方聊好久。\n\n你看，主动一点，机会就能多一点。\n\n以上两点，都是外面的变化，给你带来的机遇。这些近在眼前的机会如果还抓不住，那就真的不是怀才不遇的问题了。\n\n![](https://xqimg.imedao.com/16658d3d8f4a7f3feaef1439.jpg)\n\n**03**\n\n**如何让自己脱颖而出**\n\n大家说几个小建议。没有花里胡哨的办法，只有最淳朴的七个字：\n\n会写，会说，敢表现。\n\n之所以说淳朴，是因为每个人都知道，但并不是每个人都能做到。下面我分别来讲。\n\n**a）会写：勤于记录，积少成多**\n\n能够把你的所思所想用逻辑清晰、精炼的文字准确表达出来，这就叫会写。\n\n写作是成本最低的才能展示方法，也是未来每个人都要具备的底层核心能力。写作能力提高了，你的思维和表达能力也能够提升。\n\n那么如何训练呢？最简单的办法，就是写“日志”。\n\n注意，这个日志可不是朋友圈里的美食打卡或心情分享，而是你对时事热点的观察与思考。\n\n比如，为什么范冰冰补缴了8亿罚款就可以不被追究刑事责任？这背后的法律考量是怎样的？税法这么规定对以后的行业发展有什么指导意义？\n\n再比如，特斯拉的CEO 马斯克被迫退出董事会，这会对特斯拉未来的发展产生什么影响？为什么马斯克对特斯拉如此重要？他的接任者该如何处理接下来的烂摊子？\n\n这些问题都是很好的思维锻炼与写作的素材。大家可以把自己的思考从50字100字写起，然后逐渐扩充篇幅，从写几句话，变成慢慢写几段话，最后再扩充成文章。\n\n你写的篇幅越多，经验才会越足，对文字的驾驭能力也会越强。\n\n可能这时有些朋友会问：我很想写，但是文笔不好写不出来怎么办呢？\n\n这时你要去阅读。去找那些你认为写得好的作者的文章，耳濡目染地去感受他的写作思路和手法。时间久了，你写出来的东西就会带有这些人的印记。\n\n打个不恰当的比方，这就好像你看郭敬明的文章多了，你写出来的文字也会“悲伤逆流成河”。参照物的力量都是潜移默化地影响着你。\n\n当积累写到10万字的时候，你的写作能力会有一个质的飞跃。这时，你就拥有了展示自我才能的第一件武器。\n\n**b）会说：放大声量，刻意练习**\n\n能够把自己的观点声情并茂地讲出来，吸引听众的注意，这就是会说。\n\n你有没有发现，口才好的人在职场上往往占尽先机。即使你脑子里有一大套东西，可是讲不出来，一样是白搭。\n\n而那些会说的人，哪怕观点待斟酌，逻辑有问题，可在他的舌灿莲花下，这些瑕疵都能被掩饰过去。听众如果不仔细分析，很容易就被他这么带过去了。\n\n也许你会认为这是忽悠，但会忽悠的人，同样有本事。你可以学其精华，去其糟粕。\n\n怎么去做呢？最简单的方法，就是大声朗读。\n\n你可以把你喜欢的书籍或文章，在家对着镜子大声朗读出来，提高自己的演讲临场感。\n\n这个方法，来源于美国教授斯蒂夫卢卡斯写的《演讲的艺术》。在书中，他用这个简单的办法帮助了超过1000名“演讲恐惧者”克服障碍，流利演说。\n\n![](https://xqimg.imedao.com/16658d3ec4d9fd3fe2d749d3.jpg)\n\n这里的秘诀在于，当你在大声朗读的时候，才能找到属于自己的说话节奏、习惯甚至毛病，这是除你之外其他人不可能知道的。只有通过亲身实践，你才可以找到最适合自己的演讲风格。\n\n更进一步，你还可以大声朗读自己写的作品。这时你会发现，文字写出来和说出来，是完全不同的感觉。这个就留待大家去实践琢磨，你会发现许多意外惊喜。\n\n除此之外，在日常生活中，你可以抓住任何交谈的机会，来锻炼自己的口才。比如拿奇葩说里的议题和朋友讨论，或者就某个新闻话题展开一番“小辩论”。这里并不用得出什么结论，而是在过程中不断练习说话的技巧。\n\n最后完毕了，再做一番简单的复盘，总结一下自己讲话的语气、动作、声量、节奏都有哪些特点，通过朋友的反馈来帮助你更好了解自己，提升讲话的能力。\n\n总之，用刻意练习的方法给自己创造机会多去说，它和写作一样都没有捷径，唯手熟尔。\n\n**c）敢表现：放下脸面，不怕冒头**\n\n上面两点说的都是技巧，最后这一点说的是心态。\n\n这个时代比的不再是谁更有才，而是谁更有胆。如今许多人即使有才也不表现出来，他这不是怀才不遇，而是怀才不敢。\n\n中国人都说枪打出头鸟，可看看我们周围那些闯出一番成绩的人，有哪个不是出头鸟？那些拼了命打压、嘲讽你的人，要么是自己也不敢，要么是害怕你比他还敢。而只有那些做不到的人，才会怂恿其他人也不要做到。\n\n《权力的游戏》里，狮家的主人泰温兰尼斯特有句话说的很对：\n\n“狮子从来不会去问羊的意见。”\n\n![](https://xqimg.imedao.com/16658d40708bf63f7941eb6f.jpg)\n\n你如果真有一身才干，就不要去考虑那些懦弱胆小者的看法，而是去想如何利用大环境、渠道和资源来让自己的才能得到充分展现。\n\n还记得文章最开头说的无边界组织吗？这就是一个很好的征兆。未来社会给予人才的平台只会越来越多，竞争也会越来越激烈，再也不会有“酒香不怕巷子深”。\n\n所以请主动一点，不要像羊群一样永远呆在一个区域。而是运用互联网络、社交媒体等这些时代赋予你的武器，去开拓自己的视野与出口，像狮子一样去找寻猎物。\n\n以上就是今天的内容，最后简单总结一下：\n\n这个时代已经没有什么怀才不遇。\n\n世界正变得越来越扁平，身边能够展示才能的出口也越来越多。想要脱颖而出，最简单的办法就是培养自己写作和说话的能力，最后再加上充分的胆量，不要偏安一隅。\n\n记住，绵羊永远不可能成为狮子。\n\n各位共勉。\n\n作者：张良计\n\n本文来源：张良计（ID:zhang_liangj）\n","slug":"这个时代没有怀才不遇","published":1,"updated":"2018-10-10T09:16:12.011Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2yp4o700017u2vf32qlypp","content":"<p><img src=\"https://xqimg.imedao.com/16658d38d02be83fdbe00cf7.jpg\" alt=\"\"></p>\n<p>假期里Boy 的微信读者群好不热闹，大家每天都在讨论各种职场成长的深度问题。前几天有人问道：</p>\n<p>总是觉得自己怀才不遇，没人赏识自己，每天只能埋头苦干的人想要飞黄腾达出路在哪里？</p>\n<p>今天的文章，我就来聊聊这个话题。在正式开始之前，我先抛出观点：</p>\n<p>这个时代已经没有什么怀才不遇。所谓的怀才不遇，只是你的才能还不够罢了。</p>\n<p>为了清晰说明这个问题，下面我从三点来分别解释。</p>\n<p><strong>01</strong></p>\n<p><strong>时代大趋势</strong></p>\n<p>世界正变得越来越扁平。</p>\n<p>如果你留意了最近的商业经济新闻，你会发现越来越多的公司都开始强调“无边界组织”。</p>\n<p>这个概念最初来源于通用电气的CEO杰克韦尔奇，后来经过互联网时代的发展，逐渐升级变成许多大公司内部推行的一种组织架构革命。</p>\n<p>什么叫无边界组织呢？</p>\n<p>简单来说，就是企业不再按照传统的职能属性来划分部门，而是将它们糅合在一起，每个员工都可以和拥有不同技能的人在一个单元组织里共同协作，彼此之间没有边界，无障碍交流。</p>\n<p>比如产品研发，销售，传播，公关甚至是财务都被放在一起，组成一个团队，共同攻克一个项目目标。等到目标达成，这些人又被打散到其他的单元组织里，为新的项目工作。</p>\n<p>像谷歌、亚马逊、阿里巴巴、腾讯等许多互联网公司已经开始推行这种工作模式，并由此延伸出一套内部竞争机制。</p>\n<p>他们让公司内部不同的团队共同PK一个项目，然后选出一个最佳方案，最后集中公司资源来帮助它迅速成长。团队里的每个人都对项目的最终结果负责，各自的才能被尽善其用，不存在谁职位高谁就能一言九鼎的情况。</p>\n<p>许多我们熟知的互联网产品，例如微信、王者荣耀等就是腾讯内部竞争的产物。而它们的最初构想，都来源于最普通的员工。</p>\n<p>这么做的好处，是能够迅速应对外界环境的变化，一旦出现新的竞争对手或市场风向改变，可以灵活迅速地制定对策并执行。你不需要拿着一份计划书从地区汇报到中央，再从中央汇报到全球总部。等到兜一圈下来终于决定做了，黄花菜都凉了。</p>\n<p>无边界组织以目标为导向，强调“快、准、狠”。即：快速嗅到风向变化，准确把握市场需求，狠下手来全力以赴。</p>\n<p>它并不遵循传统企业的金字塔式结构，不需要层层上报给大老板，也没有诸如总监、经理、主管的层级壁垒，更不会受制于庞大人员规模所带来的效率递减。无边界组织更像是企业内部一个个小的作战单元，可以随时组装，随时打散。</p>\n<p>在这种扁平化的管理模式下，作为员工的每一个个体，不用担心自己的才能被埋没。因为这种组织的目的，就是让最有价值的想法能够最快地被接受和执行。</p>\n<p>用大白话来说，这是一种“你行你上”的工作模式。它让最优秀的人才，在最短的时间里完成最有挑战的事情。</p>\n<p>传统企业是存量思维，一个萝卜一个坑，越往金字塔顶端，机会越少；而扁平化组织是增量思维，它每时每刻都在创造新的机会。</p>\n<p>比如现在很流行的众包工作模式，就是扁平化组织的一种应用。客户将项目需求发布在网上，全世界各地拥有相应技能的人聚集在一起，利用网络进行项目沟通与协作。</p>\n<p>而每一次众包机会你都可以尝试不同的角色。例如今天你在这个项目做的是营销公关，下次可以去另一个项目做商务拓展，再过段时间去做产品经理也没问题。</p>\n<p>只要你的能力足够强，机会总是源源不断。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3c58dbef3fe15020e8.jpg\" alt=\"\"></p>\n<p><strong>02</strong></p>\n<p><strong>展示才能的出口越来越多</strong></p>\n<p>我们身边你能展示才能的出口越来越多。</p>\n<p>如今除了写微信公众号，还有各种各样的职业社交网站，专业技能论坛等供你展现自己的才能。</p>\n<p>比如Linkedin 领英或者脉脉。这些地方每天聚集着各行各业的职场精英人士，你可以花时间去研究一下如何在上面优化自己的职业档案，加入某些主题讨论或者发布职业需求。</p>\n<p>比如GitHub, 这里是程序员的天堂。每天都有各路好手在GitHub上交流技术经验，发布项目心得，你在这里能认识许多顶级互联网公司的大牛。</p>\n<p>再比如像36Kr、知乎等这种商业科技泛知识类平台，现在也能开通个人专栏。你对某个领域有什么见解，就坚持不懈写下去，只要内容够好就一定能吸引与你志同道合的人。</p>\n<p>总之，只要用心去找，你一定能找到可以展现自己才能的出口。</p>\n<p>那些只会埋头苦干却不懂展示自己的人，是一定要被淘汰的。因为你需要花更久的时间，被动地让别人去了解你，接受你，赏识你。</p>\n<p>但这个世界已经没有那么多时间去等你。</p>\n<p>得益于互联网的飞速发展，怀才不再像怀孕，非得时间久了才能看得出来。一个人有没有才能，他说几句话，写几篇文章，发表几个观点就能看得出来。</p>\n<p>刘备三顾茅庐的故事，现在基本不可能。除非你真有诸葛亮一般经天纬地之才，值得有人为你苦苦等待。否则，还是主动一点。</p>\n<p>我有个朋友，在简历上就会放自己的作品集网站和公众号链接。每次面试的时候，面试官都会问他这是什么。这就打开了场面，接下来他能滔滔不绝和对方聊好久。</p>\n<p>你看，主动一点，机会就能多一点。</p>\n<p>以上两点，都是外面的变化，给你带来的机遇。这些近在眼前的机会如果还抓不住，那就真的不是怀才不遇的问题了。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3d8f4a7f3feaef1439.jpg\" alt=\"\"></p>\n<p><strong>03</strong></p>\n<p><strong>如何让自己脱颖而出</strong></p>\n<p>大家说几个小建议。没有花里胡哨的办法，只有最淳朴的七个字：</p>\n<p>会写，会说，敢表现。</p>\n<p>之所以说淳朴，是因为每个人都知道，但并不是每个人都能做到。下面我分别来讲。</p>\n<p><strong>a）会写：勤于记录，积少成多</strong></p>\n<p>能够把你的所思所想用逻辑清晰、精炼的文字准确表达出来，这就叫会写。</p>\n<p>写作是成本最低的才能展示方法，也是未来每个人都要具备的底层核心能力。写作能力提高了，你的思维和表达能力也能够提升。</p>\n<p>那么如何训练呢？最简单的办法，就是写“日志”。</p>\n<p>注意，这个日志可不是朋友圈里的美食打卡或心情分享，而是你对时事热点的观察与思考。</p>\n<p>比如，为什么范冰冰补缴了8亿罚款就可以不被追究刑事责任？这背后的法律考量是怎样的？税法这么规定对以后的行业发展有什么指导意义？</p>\n<p>再比如，特斯拉的CEO 马斯克被迫退出董事会，这会对特斯拉未来的发展产生什么影响？为什么马斯克对特斯拉如此重要？他的接任者该如何处理接下来的烂摊子？</p>\n<p>这些问题都是很好的思维锻炼与写作的素材。大家可以把自己的思考从50字100字写起，然后逐渐扩充篇幅，从写几句话，变成慢慢写几段话，最后再扩充成文章。</p>\n<p>你写的篇幅越多，经验才会越足，对文字的驾驭能力也会越强。</p>\n<p>可能这时有些朋友会问：我很想写，但是文笔不好写不出来怎么办呢？</p>\n<p>这时你要去阅读。去找那些你认为写得好的作者的文章，耳濡目染地去感受他的写作思路和手法。时间久了，你写出来的东西就会带有这些人的印记。</p>\n<p>打个不恰当的比方，这就好像你看郭敬明的文章多了，你写出来的文字也会“悲伤逆流成河”。参照物的力量都是潜移默化地影响着你。</p>\n<p>当积累写到10万字的时候，你的写作能力会有一个质的飞跃。这时，你就拥有了展示自我才能的第一件武器。</p>\n<p><strong>b）会说：放大声量，刻意练习</strong></p>\n<p>能够把自己的观点声情并茂地讲出来，吸引听众的注意，这就是会说。</p>\n<p>你有没有发现，口才好的人在职场上往往占尽先机。即使你脑子里有一大套东西，可是讲不出来，一样是白搭。</p>\n<p>而那些会说的人，哪怕观点待斟酌，逻辑有问题，可在他的舌灿莲花下，这些瑕疵都能被掩饰过去。听众如果不仔细分析，很容易就被他这么带过去了。</p>\n<p>也许你会认为这是忽悠，但会忽悠的人，同样有本事。你可以学其精华，去其糟粕。</p>\n<p>怎么去做呢？最简单的方法，就是大声朗读。</p>\n<p>你可以把你喜欢的书籍或文章，在家对着镜子大声朗读出来，提高自己的演讲临场感。</p>\n<p>这个方法，来源于美国教授斯蒂夫卢卡斯写的《演讲的艺术》。在书中，他用这个简单的办法帮助了超过1000名“演讲恐惧者”克服障碍，流利演说。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3ec4d9fd3fe2d749d3.jpg\" alt=\"\"></p>\n<p>这里的秘诀在于，当你在大声朗读的时候，才能找到属于自己的说话节奏、习惯甚至毛病，这是除你之外其他人不可能知道的。只有通过亲身实践，你才可以找到最适合自己的演讲风格。</p>\n<p>更进一步，你还可以大声朗读自己写的作品。这时你会发现，文字写出来和说出来，是完全不同的感觉。这个就留待大家去实践琢磨，你会发现许多意外惊喜。</p>\n<p>除此之外，在日常生活中，你可以抓住任何交谈的机会，来锻炼自己的口才。比如拿奇葩说里的议题和朋友讨论，或者就某个新闻话题展开一番“小辩论”。这里并不用得出什么结论，而是在过程中不断练习说话的技巧。</p>\n<p>最后完毕了，再做一番简单的复盘，总结一下自己讲话的语气、动作、声量、节奏都有哪些特点，通过朋友的反馈来帮助你更好了解自己，提升讲话的能力。</p>\n<p>总之，用刻意练习的方法给自己创造机会多去说，它和写作一样都没有捷径，唯手熟尔。</p>\n<p><strong>c）敢表现：放下脸面，不怕冒头</strong></p>\n<p>上面两点说的都是技巧，最后这一点说的是心态。</p>\n<p>这个时代比的不再是谁更有才，而是谁更有胆。如今许多人即使有才也不表现出来，他这不是怀才不遇，而是怀才不敢。</p>\n<p>中国人都说枪打出头鸟，可看看我们周围那些闯出一番成绩的人，有哪个不是出头鸟？那些拼了命打压、嘲讽你的人，要么是自己也不敢，要么是害怕你比他还敢。而只有那些做不到的人，才会怂恿其他人也不要做到。</p>\n<p>《权力的游戏》里，狮家的主人泰温兰尼斯特有句话说的很对：</p>\n<p>“狮子从来不会去问羊的意见。”</p>\n<p><img src=\"https://xqimg.imedao.com/16658d40708bf63f7941eb6f.jpg\" alt=\"\"></p>\n<p>你如果真有一身才干，就不要去考虑那些懦弱胆小者的看法，而是去想如何利用大环境、渠道和资源来让自己的才能得到充分展现。</p>\n<p>还记得文章最开头说的无边界组织吗？这就是一个很好的征兆。未来社会给予人才的平台只会越来越多，竞争也会越来越激烈，再也不会有“酒香不怕巷子深”。</p>\n<p>所以请主动一点，不要像羊群一样永远呆在一个区域。而是运用互联网络、社交媒体等这些时代赋予你的武器，去开拓自己的视野与出口，像狮子一样去找寻猎物。</p>\n<p>以上就是今天的内容，最后简单总结一下：</p>\n<p>这个时代已经没有什么怀才不遇。</p>\n<p>世界正变得越来越扁平，身边能够展示才能的出口也越来越多。想要脱颖而出，最简单的办法就是培养自己写作和说话的能力，最后再加上充分的胆量，不要偏安一隅。</p>\n<p>记住，绵羊永远不可能成为狮子。</p>\n<p>各位共勉。</p>\n<p>作者：张良计</p>\n<p>本文来源：张良计（ID:zhang_liangj）</p>\n","excerpt":"","more":"<p><img src=\"https://xqimg.imedao.com/16658d38d02be83fdbe00cf7.jpg\" alt=\"\"></p>\n<p>假期里Boy 的微信读者群好不热闹，大家每天都在讨论各种职场成长的深度问题。前几天有人问道：</p>\n<p>总是觉得自己怀才不遇，没人赏识自己，每天只能埋头苦干的人想要飞黄腾达出路在哪里？</p>\n<p>今天的文章，我就来聊聊这个话题。在正式开始之前，我先抛出观点：</p>\n<p>这个时代已经没有什么怀才不遇。所谓的怀才不遇，只是你的才能还不够罢了。</p>\n<p>为了清晰说明这个问题，下面我从三点来分别解释。</p>\n<p><strong>01</strong></p>\n<p><strong>时代大趋势</strong></p>\n<p>世界正变得越来越扁平。</p>\n<p>如果你留意了最近的商业经济新闻，你会发现越来越多的公司都开始强调“无边界组织”。</p>\n<p>这个概念最初来源于通用电气的CEO杰克韦尔奇，后来经过互联网时代的发展，逐渐升级变成许多大公司内部推行的一种组织架构革命。</p>\n<p>什么叫无边界组织呢？</p>\n<p>简单来说，就是企业不再按照传统的职能属性来划分部门，而是将它们糅合在一起，每个员工都可以和拥有不同技能的人在一个单元组织里共同协作，彼此之间没有边界，无障碍交流。</p>\n<p>比如产品研发，销售，传播，公关甚至是财务都被放在一起，组成一个团队，共同攻克一个项目目标。等到目标达成，这些人又被打散到其他的单元组织里，为新的项目工作。</p>\n<p>像谷歌、亚马逊、阿里巴巴、腾讯等许多互联网公司已经开始推行这种工作模式，并由此延伸出一套内部竞争机制。</p>\n<p>他们让公司内部不同的团队共同PK一个项目，然后选出一个最佳方案，最后集中公司资源来帮助它迅速成长。团队里的每个人都对项目的最终结果负责，各自的才能被尽善其用，不存在谁职位高谁就能一言九鼎的情况。</p>\n<p>许多我们熟知的互联网产品，例如微信、王者荣耀等就是腾讯内部竞争的产物。而它们的最初构想，都来源于最普通的员工。</p>\n<p>这么做的好处，是能够迅速应对外界环境的变化，一旦出现新的竞争对手或市场风向改变，可以灵活迅速地制定对策并执行。你不需要拿着一份计划书从地区汇报到中央，再从中央汇报到全球总部。等到兜一圈下来终于决定做了，黄花菜都凉了。</p>\n<p>无边界组织以目标为导向，强调“快、准、狠”。即：快速嗅到风向变化，准确把握市场需求，狠下手来全力以赴。</p>\n<p>它并不遵循传统企业的金字塔式结构，不需要层层上报给大老板，也没有诸如总监、经理、主管的层级壁垒，更不会受制于庞大人员规模所带来的效率递减。无边界组织更像是企业内部一个个小的作战单元，可以随时组装，随时打散。</p>\n<p>在这种扁平化的管理模式下，作为员工的每一个个体，不用担心自己的才能被埋没。因为这种组织的目的，就是让最有价值的想法能够最快地被接受和执行。</p>\n<p>用大白话来说，这是一种“你行你上”的工作模式。它让最优秀的人才，在最短的时间里完成最有挑战的事情。</p>\n<p>传统企业是存量思维，一个萝卜一个坑，越往金字塔顶端，机会越少；而扁平化组织是增量思维，它每时每刻都在创造新的机会。</p>\n<p>比如现在很流行的众包工作模式，就是扁平化组织的一种应用。客户将项目需求发布在网上，全世界各地拥有相应技能的人聚集在一起，利用网络进行项目沟通与协作。</p>\n<p>而每一次众包机会你都可以尝试不同的角色。例如今天你在这个项目做的是营销公关，下次可以去另一个项目做商务拓展，再过段时间去做产品经理也没问题。</p>\n<p>只要你的能力足够强，机会总是源源不断。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3c58dbef3fe15020e8.jpg\" alt=\"\"></p>\n<p><strong>02</strong></p>\n<p><strong>展示才能的出口越来越多</strong></p>\n<p>我们身边你能展示才能的出口越来越多。</p>\n<p>如今除了写微信公众号，还有各种各样的职业社交网站，专业技能论坛等供你展现自己的才能。</p>\n<p>比如Linkedin 领英或者脉脉。这些地方每天聚集着各行各业的职场精英人士，你可以花时间去研究一下如何在上面优化自己的职业档案，加入某些主题讨论或者发布职业需求。</p>\n<p>比如GitHub, 这里是程序员的天堂。每天都有各路好手在GitHub上交流技术经验，发布项目心得，你在这里能认识许多顶级互联网公司的大牛。</p>\n<p>再比如像36Kr、知乎等这种商业科技泛知识类平台，现在也能开通个人专栏。你对某个领域有什么见解，就坚持不懈写下去，只要内容够好就一定能吸引与你志同道合的人。</p>\n<p>总之，只要用心去找，你一定能找到可以展现自己才能的出口。</p>\n<p>那些只会埋头苦干却不懂展示自己的人，是一定要被淘汰的。因为你需要花更久的时间，被动地让别人去了解你，接受你，赏识你。</p>\n<p>但这个世界已经没有那么多时间去等你。</p>\n<p>得益于互联网的飞速发展，怀才不再像怀孕，非得时间久了才能看得出来。一个人有没有才能，他说几句话，写几篇文章，发表几个观点就能看得出来。</p>\n<p>刘备三顾茅庐的故事，现在基本不可能。除非你真有诸葛亮一般经天纬地之才，值得有人为你苦苦等待。否则，还是主动一点。</p>\n<p>我有个朋友，在简历上就会放自己的作品集网站和公众号链接。每次面试的时候，面试官都会问他这是什么。这就打开了场面，接下来他能滔滔不绝和对方聊好久。</p>\n<p>你看，主动一点，机会就能多一点。</p>\n<p>以上两点，都是外面的变化，给你带来的机遇。这些近在眼前的机会如果还抓不住，那就真的不是怀才不遇的问题了。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3d8f4a7f3feaef1439.jpg\" alt=\"\"></p>\n<p><strong>03</strong></p>\n<p><strong>如何让自己脱颖而出</strong></p>\n<p>大家说几个小建议。没有花里胡哨的办法，只有最淳朴的七个字：</p>\n<p>会写，会说，敢表现。</p>\n<p>之所以说淳朴，是因为每个人都知道，但并不是每个人都能做到。下面我分别来讲。</p>\n<p><strong>a）会写：勤于记录，积少成多</strong></p>\n<p>能够把你的所思所想用逻辑清晰、精炼的文字准确表达出来，这就叫会写。</p>\n<p>写作是成本最低的才能展示方法，也是未来每个人都要具备的底层核心能力。写作能力提高了，你的思维和表达能力也能够提升。</p>\n<p>那么如何训练呢？最简单的办法，就是写“日志”。</p>\n<p>注意，这个日志可不是朋友圈里的美食打卡或心情分享，而是你对时事热点的观察与思考。</p>\n<p>比如，为什么范冰冰补缴了8亿罚款就可以不被追究刑事责任？这背后的法律考量是怎样的？税法这么规定对以后的行业发展有什么指导意义？</p>\n<p>再比如，特斯拉的CEO 马斯克被迫退出董事会，这会对特斯拉未来的发展产生什么影响？为什么马斯克对特斯拉如此重要？他的接任者该如何处理接下来的烂摊子？</p>\n<p>这些问题都是很好的思维锻炼与写作的素材。大家可以把自己的思考从50字100字写起，然后逐渐扩充篇幅，从写几句话，变成慢慢写几段话，最后再扩充成文章。</p>\n<p>你写的篇幅越多，经验才会越足，对文字的驾驭能力也会越强。</p>\n<p>可能这时有些朋友会问：我很想写，但是文笔不好写不出来怎么办呢？</p>\n<p>这时你要去阅读。去找那些你认为写得好的作者的文章，耳濡目染地去感受他的写作思路和手法。时间久了，你写出来的东西就会带有这些人的印记。</p>\n<p>打个不恰当的比方，这就好像你看郭敬明的文章多了，你写出来的文字也会“悲伤逆流成河”。参照物的力量都是潜移默化地影响着你。</p>\n<p>当积累写到10万字的时候，你的写作能力会有一个质的飞跃。这时，你就拥有了展示自我才能的第一件武器。</p>\n<p><strong>b）会说：放大声量，刻意练习</strong></p>\n<p>能够把自己的观点声情并茂地讲出来，吸引听众的注意，这就是会说。</p>\n<p>你有没有发现，口才好的人在职场上往往占尽先机。即使你脑子里有一大套东西，可是讲不出来，一样是白搭。</p>\n<p>而那些会说的人，哪怕观点待斟酌，逻辑有问题，可在他的舌灿莲花下，这些瑕疵都能被掩饰过去。听众如果不仔细分析，很容易就被他这么带过去了。</p>\n<p>也许你会认为这是忽悠，但会忽悠的人，同样有本事。你可以学其精华，去其糟粕。</p>\n<p>怎么去做呢？最简单的方法，就是大声朗读。</p>\n<p>你可以把你喜欢的书籍或文章，在家对着镜子大声朗读出来，提高自己的演讲临场感。</p>\n<p>这个方法，来源于美国教授斯蒂夫卢卡斯写的《演讲的艺术》。在书中，他用这个简单的办法帮助了超过1000名“演讲恐惧者”克服障碍，流利演说。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3ec4d9fd3fe2d749d3.jpg\" alt=\"\"></p>\n<p>这里的秘诀在于，当你在大声朗读的时候，才能找到属于自己的说话节奏、习惯甚至毛病，这是除你之外其他人不可能知道的。只有通过亲身实践，你才可以找到最适合自己的演讲风格。</p>\n<p>更进一步，你还可以大声朗读自己写的作品。这时你会发现，文字写出来和说出来，是完全不同的感觉。这个就留待大家去实践琢磨，你会发现许多意外惊喜。</p>\n<p>除此之外，在日常生活中，你可以抓住任何交谈的机会，来锻炼自己的口才。比如拿奇葩说里的议题和朋友讨论，或者就某个新闻话题展开一番“小辩论”。这里并不用得出什么结论，而是在过程中不断练习说话的技巧。</p>\n<p>最后完毕了，再做一番简单的复盘，总结一下自己讲话的语气、动作、声量、节奏都有哪些特点，通过朋友的反馈来帮助你更好了解自己，提升讲话的能力。</p>\n<p>总之，用刻意练习的方法给自己创造机会多去说，它和写作一样都没有捷径，唯手熟尔。</p>\n<p><strong>c）敢表现：放下脸面，不怕冒头</strong></p>\n<p>上面两点说的都是技巧，最后这一点说的是心态。</p>\n<p>这个时代比的不再是谁更有才，而是谁更有胆。如今许多人即使有才也不表现出来，他这不是怀才不遇，而是怀才不敢。</p>\n<p>中国人都说枪打出头鸟，可看看我们周围那些闯出一番成绩的人，有哪个不是出头鸟？那些拼了命打压、嘲讽你的人，要么是自己也不敢，要么是害怕你比他还敢。而只有那些做不到的人，才会怂恿其他人也不要做到。</p>\n<p>《权力的游戏》里，狮家的主人泰温兰尼斯特有句话说的很对：</p>\n<p>“狮子从来不会去问羊的意见。”</p>\n<p><img src=\"https://xqimg.imedao.com/16658d40708bf63f7941eb6f.jpg\" alt=\"\"></p>\n<p>你如果真有一身才干，就不要去考虑那些懦弱胆小者的看法，而是去想如何利用大环境、渠道和资源来让自己的才能得到充分展现。</p>\n<p>还记得文章最开头说的无边界组织吗？这就是一个很好的征兆。未来社会给予人才的平台只会越来越多，竞争也会越来越激烈，再也不会有“酒香不怕巷子深”。</p>\n<p>所以请主动一点，不要像羊群一样永远呆在一个区域。而是运用互联网络、社交媒体等这些时代赋予你的武器，去开拓自己的视野与出口，像狮子一样去找寻猎物。</p>\n<p>以上就是今天的内容，最后简单总结一下：</p>\n<p>这个时代已经没有什么怀才不遇。</p>\n<p>世界正变得越来越扁平，身边能够展示才能的出口也越来越多。想要脱颖而出，最简单的办法就是培养自己写作和说话的能力，最后再加上充分的胆量，不要偏安一隅。</p>\n<p>记住，绵羊永远不可能成为狮子。</p>\n<p>各位共勉。</p>\n<p>作者：张良计</p>\n<p>本文来源：张良计（ID:zhang_liangj）</p>\n"}],"PostAsset":[{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/Create_AIDL_File.png","slug":"Create_AIDL_File.png","post":"cjn2yp4o200007u2vhhvxdkef","modified":1,"renderable":0},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_JAVA_File.png","slug":"AIDL_JAVA_File.png","post":"cjn2yp4o200007u2vhhvxdkef","modified":1,"renderable":0},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_Client_File.png","post":"cjn2yp4o200007u2vhhvxdkef","slug":"AIDL_Client_File.png","modified":1,"renderable":1},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_File.png","post":"cjn2yp4o200007u2vhhvxdkef","slug":"AIDL_File.png","modified":1,"renderable":1},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/Result.gif","slug":"Result.gif","post":"cjn2yp4o200007u2vhhvxdkef","modified":1,"renderable":0},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/SYNC.png","post":"cjn2yp4o200007u2vhhvxdkef","slug":"SYNC.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjn2yp4o200007u2vhhvxdkef","category_id":"cjn2yp4ob00037u2vdujjssox","_id":"cjn2yp4oe00077u2vzhfy1l01"},{"post_id":"cjn2yp4o700017u2vf32qlypp","category_id":"cjn2yp4od00057u2vl17fpe5m","_id":"cjn2yp4oe00097u2vmz5p7h6e"}],"PostTag":[{"post_id":"cjn2yp4o200007u2vhhvxdkef","tag_id":"cjn2yp4o900027u2vcg4prqc6","_id":"cjn2yp4od00067u2vnf635rcf"},{"post_id":"cjn2yp4o700017u2vf32qlypp","tag_id":"cjn2yp4oc00047u2vxnmmhttd","_id":"cjn2yp4oe00087u2v1veg5h40"}],"Tag":[{"name":"Android,AIDL,进程间通信","_id":"cjn2yp4o900027u2vcg4prqc6"},{"name":"转载,职业,鸡汤","_id":"cjn2yp4oc00047u2vxnmmhttd"}]}}