{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/pay/alipay.jpg","path":"pay/alipay.jpg","modified":0,"renderable":0},{"_id":"source/pay/wechatpay.jpg","path":"pay/wechatpay.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/LICENSE","path":"lib/needsharebutton/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/README.md","path":"lib/needsharebutton/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"bf7c8d0102a665e91900d8b09183817685118919","modified":1539151573184},{"_id":"source/.DS_Store","hash":"6c0bc8e45023939a7602c7718de8d719bf12ffd3","modified":1548398742460},{"_id":"themes/next/.DS_Store","hash":"b88b36a1f9320d8475cd85d9009990cdb55e4234","modified":1539164238878},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1539161927866},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1539161927869},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1539161927867},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1539161927867},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1539161927867},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1539161927869},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1539161927869},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1539161927869},{"_id":"themes/next/bower.json","hash":"23379fec9b4f70bc2611433ac3770445a8ca18d9","modified":1539161927870},{"_id":"themes/next/README.md","hash":"140f4ece6670327a7d33b293947d958de80b44da","modified":1539161927869},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1539161927871},{"_id":"themes/next/package.json","hash":"42186cf60771f5547b3a68cf3865f102011930d0","modified":1539161927899},{"_id":"themes/next/_config.yml","hash":"15d631028b90547edea4b0a09a8d44ad6d37221c","modified":1539167340877},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1539161927878},{"_id":"source/_posts/.DS_Store","hash":"d23534861cfe91b6836eba37c8e409da21f4c39a","modified":1548398757281},{"_id":"source/_posts/极简机器学习入门-笔记.md","hash":"9bf79930abd265f41c18bb9af12d414f2a02235c","modified":1548398611862},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信.md","hash":"5bc39ef7abd50cef7d5766a09dede17021313490","modified":1539308034408},{"_id":"source/_posts/（转载）股民何苦为难股民，技术分析是用来骗我的吗？.md","hash":"d35e27c443f77de3acb77eba103e7576be4bc1b2","modified":1539307779136},{"_id":"source/_posts/（转载）这个时代没有怀才不遇.md","hash":"58cae78e9614ae42bf4b0453c46b624e855d5e53","modified":1539308013696},{"_id":"source/categories/index.md","hash":"5bb3df64d56486ab71ad601e51e2b8647be5015a","modified":1472547811000},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1539161927861},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1539161927856},{"_id":"source/pay/alipay.jpg","hash":"3194c0c212848e1394ad78bea67e668baf751650","modified":1472527542000},{"_id":"source/pay/wechatpay.jpg","hash":"a464c289949960765319e180c62105a463d6d880","modified":1472527560000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1539161918771},{"_id":"themes/next/.git/index","hash":"201279a5555da2e0c6db0f97a513518c8eb90cd5","modified":1539161927942},{"_id":"themes/next/.git/packed-refs","hash":"2d6258f7b72468130c95028fc862443d36002bcf","modified":1539161927851},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1539161927868},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1539161927868},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1539161927868},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1539161927868},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1539161927867},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1539161927868},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1539161927871},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1539161927872},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1539161927872},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1539161927871},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1539161927872},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1539161927872},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1539161927873},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1539161927873},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1539161927874},{"_id":"themes/next/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1539161927900},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1539161927900},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1539161927900},{"_id":"themes/next/source/.DS_Store","hash":"99ecc3146152ed5dc7b99a24b431d6059ab37f0e","modified":1539164677817},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1539161927940},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1539161927941},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1539161927941},{"_id":"themes/next/layout/_layout.swig","hash":"1b59036ccb2ad571503b94587f458fad46775642","modified":1539161927882},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1539161927898},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1539161927898},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1539161927898},{"_id":"themes/next/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1539161927899},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1539161927899},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1539161927899},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1539161927899},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1539161927878},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1539161927878},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1539161927878},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1539161927879},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1539161927879},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1539161927879},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1539161927879},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1539161927880},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1539161927880},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1539161927880},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1539161927880},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1539161927879},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1539161927880},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1539161927880},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1539161927881},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1539161927881},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1539161927881},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927924},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1472617496000},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/SYNC.png","hash":"67e671e81d6878bfd7004a91d0c3badb93d63564","modified":1472624021000},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_Client_File.png","hash":"aef2d1914ee74b3b05e8fada538fd61d3e4bfba3","modified":1472628937000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1539161918778},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1539161918772},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1539161918780},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1539161918783},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1539161918786},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1539161918784},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1539161918777},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1539161918775},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1539161918787},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1539161918781},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1539161918782},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1539161918769},{"_id":"themes/next/.git/logs/HEAD","hash":"e6dc6d6907e37a8cac5a8def465e77be0809358a","modified":1539161927858},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1539161927874},{"_id":"themes/next/docs/ru/README.md","hash":"c54e256ed11a84ee38f755d6f35a3e6e29a91dbc","modified":1539161927875},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1539161927874},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1539161927875},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1539161927876},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1539161927876},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1539161927876},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1539161927875},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1539161927877},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1539161927876},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1539161927877},{"_id":"themes/next/docs/zh-CN/README.md","hash":"aa6808f4f587c1a97205fa9427ba96a366bcb288","modified":1539161927877},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1539161927878},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1539161927901},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1539161927901},{"_id":"themes/next/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1539161927901},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1539161927901},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"981e01aaf45a1f0f23ce0796d03134f9e437aaca","modified":1539161927902},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1539161927902},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1539161927902},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1539161927902},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1539161927902},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1539161927924},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1539161927924},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1539162098352},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"4cf4afd7db7c17e24542ca66aae6dcd730b7b6f9","modified":1539164137182},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1539161927925},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1539161927926},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1539161927926},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1539161927926},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1539161927926},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1539161927926},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1539161927927},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539161927927},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1539161927927},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539161927928},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"040a9c7aecb0320d57688b0d0d49ba7841ad5363","modified":1539163993588},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1539161927928},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1539161927928},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1539161927928},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"6ee59b23bec45e56941494a0a076b943cd7b82cc","modified":1539164228383},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1539161927882},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1539161927881},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1539161927882},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1539161927883},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1539161927883},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1539161927884},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1539161927883},{"_id":"themes/next/layout/_macro/post.swig","hash":"27922af64ecb9db9a28bcf1c98fb68b26bf0b67a","modified":1539161927883},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1539161927884},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1539161927884},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1539161927889},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1539161927890},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1539161927889},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1539161927888},{"_id":"themes/next/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1539161927884},{"_id":"themes/next/layout/_partials/footer.swig","hash":"05cdaf9b6cb32afd442b228cd247aaf9468a31ed","modified":1539161927885},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1539161927884},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1539161927886},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1539161927886},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1539161927893},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1539161927894},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1539161927895},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1539161927895},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1539161927896},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1539161927896},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1539161927896},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1539161927896},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1539161927896},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_File.png","hash":"67e6c2394316e3aed47f7d1c595b82d90dec074c","modified":1472623755000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927923},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927924},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927917},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927917},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927918},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927889},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539161927890},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/Create_AIDL_File.png","hash":"17aeefc970b71657183ec62bfd346feb61016e4f","modified":1472198957000},{"_id":"themes/next/.git/refs/heads/master","hash":"25cdb1e360fb6a4249b5b0d841a2065c45ea784c","modified":1539161927858},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1539161927924},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1539161927923},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1539161927923},{"_id":"themes/next/source/css/_variables/base.styl","hash":"f9b83d0385529e52ce7ba95ed5ed6b3d4e2419bb","modified":1539161927924},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1539161927917},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1539161927918},{"_id":"themes/next/source/images/avatar.png","hash":"da43d4f92e3a5ee989499e5ff2f78b750448bf22","modified":1539155833727},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1539161927917},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"59961fb806a39c367fd19ad37268eee112be6729","modified":1539161927918},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1539161927931},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1539161927932},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1539161927931},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1539161927932},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1539161927931},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1539161927929},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1539161927929},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1539161927929},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1539161927929},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1539161927930},{"_id":"themes/next/source/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1539161927930},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1539161927930},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1539161927931},{"_id":"themes/next/source/js/src/utils.js","hash":"66f2ac658d6110f70a86f784d0c5d891a97c14bd","modified":1539161927931},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1539161927929},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1539161927939},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1539161927940},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1539161927940},{"_id":"themes/next/source/lib/needsharebutton/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1539167138897},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1539161927882},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"4e74d9b54ef66091fd23379e8a3f42ca50bd5a70","modified":1539167138901},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1539161927882},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3de20fa310cf852746e619cbbd1f79d42ca6e838","modified":1539167138899},{"_id":"themes/next/source/lib/needsharebutton/README.md","hash":"46bb223bdf714a47a1449666f4f70556447786d1","modified":1539167138898},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1539161927889},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1539161927889},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1539161927890},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1539161927885},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1539161927885},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1539161927886},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1539161927885},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1539161927886},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1539161927886},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1539161927885},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1539161927887},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1539161927887},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1539161927888},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1539161927887},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1539161927890},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1539161927888},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1539161927888},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1539161927890},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1539161927891},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1539161927887},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1539161927891},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"07307f1f0e0e9858f2c7143cbdfcb2a9a92149ab","modified":1539161927891},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1539161927891},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1539161927892},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1539161927893},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1539161927893},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1539161927893},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"03ef008bc95e8e83232e5464a6c63d6157d33a5e","modified":1539161927893},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1539161927894},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1539161927894},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1539161927894},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1539161927894},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1539161927895},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1539161927895},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1539161927896},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1539161927897},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1539161927898},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1539161927897},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1539161927898},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_JAVA_File.png","hash":"2382cdde4d1094ee07a3b45b2f745df7c071107c","modified":1472624144000},{"_id":"themes/next/.git/objects/pack/pack-cec6631013c2b3b1932112f26b2ad5062b15b617.idx","hash":"3be24e7b88992a045f3f5be4f67f689ec6fe0f49","modified":1539161927837},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1539161927937},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"e6dc6d6907e37a8cac5a8def465e77be0809358a","modified":1539161927858},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b4a2f1d031fe44452cf55ded8211cf018235073a","modified":1539161927903},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1539161927903},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1539161927855},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1539161927903},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1539161927907},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"b75256fe3768b1a37b6ff6dd7f9f0ff135a42067","modified":1539161927916},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1539161927916},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1539161927916},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"efc40a32487e0ac7b94b1ca81bdbdcc4ec8f2924","modified":1539161927916},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1539161927916},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1539161927912},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1539161927917},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"665b1813a1d6fbc3c5549a76e4f26cd62a804dde","modified":1539161927918},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"02d138ed65060e98f20bc5b1dd59a791222b7156","modified":1539161927917},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1539161927920},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1539161927919},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1539161927920},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1539161927921},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1539161927922},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1539161927922},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1539161927922},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1539161927922},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1539161927923},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1539161927923},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1539161927933},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1539161927933},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1539161927932},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1539161927937},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1539161927937},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"89267bd16ecbedd1958af7f0fb3f4f654d24fffa","modified":1539161927930},{"_id":"themes/next/source/lib/needsharebutton/.git/config","hash":"3bd2fc1363cc36b469c252931084daa7b046d52a","modified":1539167138889},{"_id":"themes/next/source/lib/needsharebutton/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1539167136654},{"_id":"themes/next/source/lib/needsharebutton/.git/packed-refs","hash":"b8257d6414531eacbf9c3d5203aed82a78416ae1","modified":1539167138880},{"_id":"themes/next/source/lib/needsharebutton/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1539167138884},{"_id":"themes/next/source/lib/needsharebutton/.git/index","hash":"370a0dea9f0cccbd3271c890e1089392e4a88214","modified":1539167138901},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1539161927897},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1539161927897},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1539161927935},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1539161927936},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1539161927939},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"e6dc6d6907e37a8cac5a8def465e77be0809358a","modified":1539161927855},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1539161927905},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"a6dc3c7eb81ef5117c28fa2245fff1adc02d0292","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1539161927904},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1539161927907},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1539161927909},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"fcbbf06b546c366d70b7d2ba5880b0be3ca1e8ea","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"6089cbf4c907fe198b6501e40dc937480d0be175","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1539161927910},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e18b90c97aaff027e795f5a0cb10476a71bf1c3a","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1539161927908},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1539161927911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1539161927912},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1539161927912},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1539161927912},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1539161927907},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1539161927906},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1539161927907},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1539161927907},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1539161927912},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1539161927913},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"5e340ee2407a4e39cd708794cfcc718a5f398d7b","modified":1539161927914},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1539161927914},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1539161927914},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1539161927914},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1539161927915},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1539161927915},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1539161927915},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1539161927915},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1539161927915},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1539161927920},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1539161927920},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1539161927921},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1539167136659},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1539167136655},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1539161927935},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1539167136665},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1539167136664},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1539167136660},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1539167136666},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1539167136657},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1539167136663},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1539167136662},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1539167136668},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1539167136658},{"_id":"themes/next/source/lib/needsharebutton/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1539167136653},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/HEAD","hash":"a43c3789cc5b8841429e4d85995275b5d32918cb","modified":1539167138886},{"_id":"themes/next/source/lib/needsharebutton/.git/refs/heads/master","hash":"ae6535e3616c38cb4f9e4f4fd033d9cd7366f4c8","modified":1539167138886},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/34/73a532c76c2ec7eaafc9bba9bc37851cb5a349","hash":"991d675a7982030fef4e8103ecdf717e2e153143","modified":1539167138557},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/0c/97d452adf1f9aa29468c10dc5aca581c40d35d","hash":"8247b73544627904f1c49b2d48e8a5ca24c49d94","modified":1539167138564},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/37/e84bbc9c853d9abc39b18361a67d09402a9fec","hash":"330ba4772d5feaf23bd85aa38be94a1b254cac8a","modified":1539167138850},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/35/b5765a89abcc57439ad0e7b60dc67225e76570","hash":"b020fa3885506f64651a4a63d42b32c7874a072a","modified":1539167138551},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/1f/9bfac8ac3b22f100c85bb82877c7af973f011a","hash":"74f0088767a48b5b8874bb5e8953604058233105","modified":1539167138549},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/10/7997cd9f09e787407d6a579bb0ead61ba0c44e","hash":"a7bb772e0f541b9f0c5e4682f88881faef7d2b87","modified":1539167138537},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/41/f2acffe002ce9fa94904bdbb105c62697c08bf","hash":"6aca807e726bf9bbffdab1b97cae1132dd3570c8","modified":1539167138851},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/46/66508d485306f48ac866f4a0eded896b01adb0","hash":"a37ee79e50b83b3a5a7f736cfc6b8eafc210ebca","modified":1539167138838},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/40/a8a2ab6075fb13a489aa2585f55518e03440cc","hash":"40a879b454bae72ba30ab918e7cbb3dee04c45c4","modified":1539167138852},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/63/ce5669cda10d9c600a65df1c509155a9dce354","hash":"e7eefb05c18a77c99c1044dc53cc0b33bc4bc723","modified":1539167138539},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/49/c5d2b0c8ded3a5465f659504d5654759b45ce9","hash":"133f2916c8dd706d9ea44203f671d42abed6d183","modified":1539167138555},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/51/e4a626dc726971ce48b9d29531ec4fa11ab93c","hash":"8bc98d2bd4f224fbba56e0339ba9e1abfbd0e676","modified":1539167138536},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/77/ad104add4d67baba615eccfcc7876bdf60256f","hash":"787497f0b2a074be846ae940ba58475a830690d4","modified":1539167138842},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/77/b1d62571d3374de0902fdf14c3fd925263c295","hash":"f0d087a62296e14072d250d0db5bfeb01e3e0f4c","modified":1539167138542},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/91/85a82ce05e0c4c6287e3ce6c31d79049a6c5de","hash":"d40af8a4f325b8b2d6eeb1f51497d2313aade46d","modified":1539167138846},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/80/8d63b637e30043e74f5150047c232028ffa3bf","hash":"c7cd9201316a2cf66b63cd0f520dc827912d8be8","modified":1539167138546},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/96/b1227c70e63f95b099993321043a2e05abdbea","hash":"d1f0885e3a68fdfc87e68e5ba6b60de116c3c7a5","modified":1539167138827},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/99/ac01b3cae78a765c45566d5540596f71f0f9ed","hash":"394e54788569a0aef47f5c1867b7a617d314b677","modified":1539167138532},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/9a/563a770314159840897f1852b05f183911ae71","hash":"0949c3c36849e955c84cc66f544fbeeca266ae19","modified":1539167138836},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/a1/5c0ab3f7ca37d06a7a3dc28f6375ac8fcaffe1","hash":"3aa24fa2254a71f9b408a01ad7154cc1cbf7cde6","modified":1539167138541},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/9f/e80d3fee719ad9953c0e8e8dec472bb727d17d","hash":"09516f8a3f62a9e286f3ac1985969d0913d53271","modified":1539167138552},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/72/38adfc9f0b65e7dd8e7eb39b53fd8dbd05728d","hash":"67f5fb35cbbb4625e049368c8ef7fef03e21315d","modified":1539167138841},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/b4/8a9ad41dbacf220607a3854e23f2136ced96fb","hash":"81ee83b48edb7df4f08573cdd14200be5f62128a","modified":1539167138530},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/aa/f4e31e1d4ea073ad9f6926e146fea3c6d8b423","hash":"7c412d2a2243907dff0a1940f13a539675d76428","modified":1539167138831},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/bf/839b1a2dfd79af314506907196f817d1d540b0","hash":"196a52782c02c03b787cca10ca172a6be6ddb8e0","modified":1539167138844},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/da/3a5548a43813122821bf626fdd51a15f89afe3","hash":"1d8c39585806e5c7b051eb58d566a399b0e77006","modified":1539167138534},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/eb/83c3470835cc056d65fbaec5ba59fc01a341c6","hash":"a48447a56db4dce3b2ce99fcfd4cbb5d5902877f","modified":1539167138561},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/e7/169e14c00f267f49acb69c1ba41dc9a3229d36","hash":"2b79081ef52aec5ca3896894e25e330aed84ac6f","modified":1539167138855},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/ec/fd49187c43c81ad64c250eac1d63893c073e38","hash":"0e6f432ab1ec9a413655267ad3f62205e2e71f99","modified":1539167138559},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/f5/a400ecc881307dc0faa24170ae0a9bcbba861c","hash":"4b82935622bd12041cf7665503ae8e060705e7fd","modified":1539167138527},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/9c/850e429959950cfd82a30843ad130dfd24331a","hash":"001c3423e8a4bf2ccd3e0ad3080d5cace613d42c","modified":1539167138848},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1539167138545},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/f5/fc2c417f7156d25437bbe069fa10645b4c3a63","hash":"377e0fce80cab14d6966371260926ee78da12b09","modified":1539167138543},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/b2/8efd888e853a00d7c8ba8fc827ddb0edb6668b","hash":"8c17e115b7c8a860650191fc1b74e7861ab0f7b9","modified":1539167138857},{"_id":"themes/next/source/lib/needsharebutton/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1539167138883},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/refs/heads/master","hash":"a43c3789cc5b8841429e4d85995275b5d32918cb","modified":1539167138887},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/refs/remotes/origin/HEAD","hash":"a43c3789cc5b8841429e4d85995275b5d32918cb","modified":1539167138883},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/Result.gif","hash":"6e05ca7e781a44a7ccba0d170be0a0c6b326b9e0","modified":1472635421000},{"_id":"themes/next/.git/objects/pack/pack-cec6631013c2b3b1932112f26b2ad5062b15b617.pack","hash":"a3e23b4be1aba1cd04d14e30d79532feae2683bb","modified":1539161927836},{"_id":"public/baidu_urls.txt","hash":"39736137666495851bcafda648c987a394184554","modified":1548398852982},{"_id":"public/search.xml","hash":"2eff98b19d82b82519af60cd60e9bb5222ce2aa4","modified":1548398852989},{"_id":"public/sitemap.xml","hash":"4f014cda334535748cf96dc7e764cd11f024c429","modified":1548398852989},{"_id":"public/categories/index.html","hash":"6fdcc54a0858dec061a26afe0e188ebc7f53454a","modified":1548398620194},{"_id":"public/2018/10/12/（转载）股民何苦为难股民，技术分析是用来骗我的吗？/index.html","hash":"d37fe389c8a3b8ab8366cc3b7996c686b2284627","modified":1548398853039},{"_id":"public/2018/10/10/（转载）这个时代没有怀才不遇/index.html","hash":"99ce422c5ddaebd660c0d4d623b982be003facb8","modified":1548398620194},{"_id":"public/2016/08/30/详解Android利用AIDL实现进程间通信/index.html","hash":"de177282cd96d899a1e2c91e07de0e0852cf92b6","modified":1548398620195},{"_id":"public/index.html","hash":"1b9a39ad882bd0a572ece9d8131e8a8ea08c9909","modified":1548398853039},{"_id":"public/categories/财经/index.html","hash":"cd48e3b2bbe78d76c6d5b5d4fcaac91503423097","modified":1548398620195},{"_id":"public/categories/Android-Development/index.html","hash":"c469fdc10e35c08d3debafc47f8badb438d5dd4a","modified":1548398620195},{"_id":"public/archives/index.html","hash":"2421d80c80419dda4d7996fa5249b96bc518fd39","modified":1548398853039},{"_id":"public/archives/2016/index.html","hash":"613fe03ad5b06ded46db19aa12475f8c070adf55","modified":1548398620195},{"_id":"public/archives/2016/08/index.html","hash":"0a732b4a5f896f2382a7ffec1d1470f4fa6b3042","modified":1548398620195},{"_id":"public/archives/2018/index.html","hash":"ce81cba16d0bbb093672105347d17321247c6b5e","modified":1548398620195},{"_id":"public/archives/2018/10/index.html","hash":"46e0eafcabbcb44e268c47da348a4078477ec7a8","modified":1548398620195},{"_id":"public/tags/转载-投资-技术-财经/index.html","hash":"ed9c82a3154437230c48e866716a4d8e53353091","modified":1548398620195},{"_id":"public/tags/Android-AIDL-进程间通信-技术/index.html","hash":"17ce7cb34c30ceded7ad51e86bcdf9bb78717f63","modified":1548398620195},{"_id":"public/tags/转载-职业-鸡汤-投资/index.html","hash":"d180c14de5778abbd05f4a6fe1dbd0a96685e4d5","modified":1548398620195},{"_id":"public/2019/01/25/极简机器学习入门-笔记/index.html","hash":"101f28ce56e0fd6853916b74fc6ddf88984d9fb5","modified":1548398620213},{"_id":"public/archives/2019/index.html","hash":"98d51680174fcf5d103816c9a29c6827d718c7d2","modified":1548398853039},{"_id":"public/archives/2019/01/index.html","hash":"706f733803e3b70c027a4ba8bdb3273a80fe90bc","modified":1548398853039},{"_id":"public/CNAME","hash":"bf7c8d0102a665e91900d8b09183817685118919","modified":1548398620222},{"_id":"public/pay/alipay.jpg","hash":"3194c0c212848e1394ad78bea67e668baf751650","modified":1548398620222},{"_id":"public/pay/wechatpay.jpg","hash":"a464c289949960765319e180c62105a463d6d880","modified":1548398620223},{"_id":"public/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_Client_File.png","hash":"aef2d1914ee74b3b05e8fada538fd61d3e4bfba3","modified":1548398620223},{"_id":"public/2016/08/30/详解Android利用AIDL实现进程间通信/SYNC.png","hash":"67e671e81d6878bfd7004a91d0c3badb93d63564","modified":1548398620223},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1548398620223},{"_id":"public/images/apple-touch-icon-next.png","hash":"4cf4afd7db7c17e24542ca66aae6dcd730b7b6f9","modified":1548398620223},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1548398620223},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1548398620223},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1548398620224},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1548398620224},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1548398620224},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1548398620224},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1548398620224},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548398620224},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1548398620224},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548398620224},{"_id":"public/images/favicon-32x32-next.png","hash":"040a9c7aecb0320d57688b0d0d49ba7841ad5363","modified":1548398620224},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1548398620224},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1548398620224},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1548398620224},{"_id":"public/images/favicon-16x16-next.png","hash":"6ee59b23bec45e56941494a0a076b943cd7b82cc","modified":1548398620224},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1548398620224},{"_id":"public/lib/needsharebutton/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1548398620224},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1548398620225},{"_id":"public/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_File.png","hash":"67e6c2394316e3aed47f7d1c595b82d90dec074c","modified":1548398620815},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1548398620815},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1548398620817},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1548398620823},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1548398620823},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1548398620823},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1548398620823},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1548398620823},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1548398620823},{"_id":"public/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1548398620823},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1548398620823},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1548398620823},{"_id":"public/js/src/utils.js","hash":"66f2ac658d6110f70a86f784d0c5d891a97c14bd","modified":1548398620823},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1548398620823},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1548398620823},{"_id":"public/lib/needsharebutton/README.html","hash":"16294954bab07c47f87edf3742ab2547c63d5193","modified":1548398620823},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1548398620823},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1548398620823},{"_id":"public/js/src/schemes/pisces.js","hash":"89267bd16ecbedd1958af7f0fb3f4f654d24fffa","modified":1548398620823},{"_id":"public/css/main.css","hash":"a2652ba67458077474818cca7f6b54062679cbe6","modified":1548398620823},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1548398620823},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1548398620823},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"4e74d9b54ef66091fd23379e8a3f42ca50bd5a70","modified":1548398620823},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3de20fa310cf852746e619cbbd1f79d42ca6e838","modified":1548398620823},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1548398620823},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1548398620823},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1548398620823},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1548398620823},{"_id":"public/2016/08/30/详解Android利用AIDL实现进程间通信/Create_AIDL_File.png","hash":"17aeefc970b71657183ec62bfd346feb61016e4f","modified":1548398620824},{"_id":"public/images/avatar.png","hash":"da43d4f92e3a5ee989499e5ff2f78b750448bf22","modified":1548398620824},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1548398620824},{"_id":"public/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_JAVA_File.png","hash":"2382cdde4d1094ee07a3b45b2f745df7c071107c","modified":1548398620828},{"_id":"public/2016/08/30/详解Android利用AIDL实现进程间通信/Result.gif","hash":"6e05ca7e781a44a7ccba0d170be0a0c6b326b9e0","modified":1548398620849},{"_id":"source/_posts/机器学习极简入门课-学习笔记.md","hash":"132a3a07005541eaf53b35da59e91df5ebee5957","modified":1548398841475},{"_id":"public/2019/01/25/机器学习极简入门课-学习笔记/index.html","hash":"b746f8ed418218fc7e394fde54c518439c46295f","modified":1548398853040}],"Category":[{"name":"财经","_id":"cjrbok4nc0003l32vy7jf9lra"},{"name":"Android Development","_id":"cjrbok4no0007l32v5x4jm8c2"}],"Data":[],"Page":[{"title":"categories","date":"2016-08-30T09:01:22.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-08-30 17:01:22\ntype: \"categories\"\ncomments: \"false\"\n---\n","updated":"2016-08-30T09:03:31.000Z","path":"categories/index.html","layout":"page","_id":"cjrbok4n50001l32vvu92n30g","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"（转载）股民何苦为难股民，技术分析是用来骗我的吗？","date":"2018-10-12T01:18:38.000Z","_content":"  \n转载自雪球\n\n今天的市场气氛到达了新的一轮冰点，买？卖？价值投资？技术分析？\n\n雪球量化投资大V@许哲 讲述了他在追求技术指标路上的思考，最终的结论有些振聋发聩，在此分享给大家！\n\n作者：许哲\n\n  \n我不知道诸位是如何接触到金融投机的。不知道你第一笔交易是如何完成的，第一个交易的品种是什么，第一次开仓的依据是何。  \n  \n但有一点是可以肯定的，每个没有放弃在市场里搏杀，坚持不懈的朋友，都经历过很痛苦的阶段。如果你还没经历，请做好心理准备。  \n  \n笔者并非金融专业出身，金融学知识和经济学知识都是大学毕业后才自学的。在学到这些非常必要的知识前，就因缘巧合接触到了金融投机。  \n  \n第一次被神秘复杂的K线图和各种眼花缭乱的技术分析捕获眼球，就犹如被一种魔法诅咒着，从此难以抽身。  \n  \n在了解了基本的常识后，用软件浏览了许多主流的技术指标们，回望过去，比比划划弄弄，似乎并不难。你瞧这里一个信号就很准，那里一个信号如果抓到那就发财了。每一次接触一种新的技术分析方法，就如同打开了一扇窗户，遥想着当年该交易体系的发明者如何叱诧风云，笑傲市场，壕取千金于万里之外，如探囊取物。  \n  \n当然，兴奋完不久后，就会发现这些信号并不是次次百发百中，偶有失手再所难免，总有些例外情况。用肉眼目测了过往的情况，测算测算如果信号准确时的利润，似乎有些瑕疵也是可以接受的。  \n  \n再多接触了几套交易系统之后，发现有两大派别，一种总是告诉你，快要粗大事了！准备好历史机遇。另外一派总是忧心忡忡，这涨得过头了吧，那个跌得已经离谱了，超买超卖好严重啊，赶快赶在市场修正错误前入场。到底谁说得对呢？  \n纸上得来终觉浅，绝知此事要躬行。开个实盘试试！  \n  \n神奇的是，刚刚入场的肥羊，哦，不，是新手们总是能赚到不少钱的。我也不例外，在做肥羊的最初阶段，几周能就获得了翻倍的利润。  \n  \n过了不久，咦？技术指标怎么接连失败。复盘的时候，明明很神奇，很威武的呀。\n\n  \n\n肉眼复盘的时候，总发现有些指标在有些特定的时候特别神勇，而恰恰另外的指标会提醒我们时机未到，就好像有许多大臣在给国王提建议，或许，兼听则明，偏听则暗？  \n  \n单个指标总是有缺陷的嘛，人无完人，指标也无万能的，我们要构建自己的交易系统，多个指标取长补短，认真复盘，认真思考，秘密一定就在细节里。  \n  \n艰苦卓越的复盘，指标组合，反复琢磨，反复咀嚼，我不知道有多少人花了多少个不眠夜，苦苦上下而求索。我反正是陷进去了。  \n  \n日复一日，有时间也不看美剧了，游戏也不打了，全世界最最神秘的，最有趣的事情，就是技术分析的有效性。盯住屏幕，反复掂量，反复推敲。  \n  \n推敲推敲再推敲，无数次似乎顿悟来临，无数次希望破灭，人如同着魔一般，偏不信唯独我，不能拥有属于自己的交易系统，独步江湖。天道酬勤，功夫不负有心人，学海无涯苦作舟，反复激励着自己，顽强得度过一个个不眠夜。  \n  \n市面上的交易系统，没有没学过的。  \n  \n  \n  \n什么线都画过，什么多周期共振分析，还买了多屏一起看。  \n  \n  \n  \n上图是网上找来的，不过绝非个案，这样做的交易员比比皆是。  \n  \n艰苦卓绝的奋斗并没有带来让我真正的收获，有的只是一次次希望化成泡影而已。如果说这条路，我因为不够努力，所以没有走通，我想我的生理极限已经不能支持我做下去了。  \n  \n到底有没有用？为什么看着总有效而用着用着总出问题？  \n  \n**昨夜西风凋碧树。独上高楼，望尽天涯路。欲寄彩笺兼尺素。山长水阔知何处。**  \n  \n后来我学习了心理学和神经科学的一些知识后，知道人拥有无法克服的自利偏差和后视偏差。自利偏差意味着你一定会朝自己有利的方向产生偏见，**一旦你对某技术指标产生信心后，你会强化它的优势，而忽视它的缺陷。**  \n  \n后视偏差，会造成大量的事后诸葛亮的情境，把未来的信息不自觉得带入进去。这些是人性，人性是客观存在的，和人性斗争是很艰难的事情。  \n  \n《海龟交易法则》还宣扬了一种理念，不是系统不OK，是你的心态不OK。学会冷酷机械得操作，把仓位资金管理做成机器人一般，就能获得成功，打败市场。  \n  \n一群毫无交易经验的年轻人，因为崇拜，言听计从，从而笑傲华尔街。  \n  \n**击败人性就击败了市场，战胜自己，就能赢得未来。听上去好有道理，但机械执行好难啊，心里好煎熬啊。**  \n  \n好在，我是码农出身，会写代码（大学期间还拿过全国性比赛的前三名，拿过风投，技术勉强还算靠谱），何不用计算机来克服人性呢？计算机不会有自利偏差和后视偏差（前提是你的程序不能使用未来信息）。况且，组合出来的技术指标组合浩瀚如海，如何能用人力去做这些事情呢？况且做得还不好。  \n  \n海龟交易法则那个时代，可没那么好的IT技术。  \n  \n想到这一点，再次扎入代码中，开始艰苦卓绝地架构，coding，debug，历史回测，分析效果，想办法提高计算效率，如何利用并行计算让能用得上的所有计算设备一起没日没夜得跑起来。如此循环往复，不知疲倦。  \n编程，真是现代人处理信息的必备技能，编程赋予人很大的自由，在处理信息的过程中，不再受制于许多软件的不称心，上限多半在于你的编程技能，而非他人。  \n  \n从满屏幕的技术指标，变回了满屏幕的各种代码，CPU 永远满转。没日没夜得比划果然不如没日没夜得coding来得高效。那我收获了“圣杯”吗？  \n  \n我曾经以为我收获了。此时的我，已经不是一个人在奋斗了，有一群志同道合的小伙伴们和我一起探索着这诱人的谜题，我们为了洞悉那牵扯着千万人的奥秘，无数人魂牵梦绕的圣杯，不知疲倦得做着工作。  \n  \n对几乎所有可行的，有确定性描述的技术体系，进行分析后，我们获得了很多有意思的统计结果。动用了大量的计算资源，弄废了若干可怜的硬盘后，对着统计数据，有些怪样的感受。  \n  \n比较知名的技术指标，MACD 能勉强超过50%的准确率，只是勉强超过而已，如果没有交易成本和流动性问题，冷血得执行该指标提示的方法，能不能赢钱还得靠运气。  \n  \nRSI 的表现极不稳定，胜率总算过半，而KDJ的表现糟糕得让人难以置信。  \n  \n胜率超过50%的技术分析策略虽然多，但出现的频次和分布都非常不均匀。曲线非常不平滑，或者说，夏普率非常低。我们在进行着技术指标的整合的时候，运用了统筹规划的一些数学技巧。  \n  \n在大量的统计结果和有序的规划后，我们获得了一个在回测上近乎完美的技术分析体系，曲线的平滑程度让人心醉，收益之高，让人惊鄂。200%的年化回报，是在有资金管理和风险控制的前提下可以预期的。  \n  \n将所有可得到技术指标进行到冷酷无情，毫无人性的计算机系统统计，毫无偏见的，赤裸裸的数据。加上数学上的统筹规划，无可置疑的客观性。\n\n  \n技术分析，简直是做绝了。系统上线运行，神勇一如预期，收益的速度和历史回测完全一致。似乎，熬到头了。  \n  \n系统有效了小半年，开始出现难熬的回撤，当然，对于回撤我们是有心理准备的。不久后系统又恢复了盈利，似乎又回归正常的状态中。  \n  \n然而，一次又一次不明原因偏离预期，让我信心产生了动摇。  \n  \n我相信，技术指标类体系，我们近乎一网打尽，在客观性和准确性方面已经做到极限。彼时，我无法再想象还能如何提高系统的有效性。  \n  \n问题出在哪里？到底哪里做得不够好？这问题为何如此难解？或许，这问题有答案吗？这个无数先辈反复琢磨的圣杯，存在吗？  \n  \n是鲁棒性不好吗？学习集和测试集反复互相倒腾，无时不刻担心过度学习的问题。到底是哪里没做好？\n\n  \n有人误会，认为不需要预测价格，其实只要一个正预期收益的系统就OK了。然而一个正预期收益的系统需要的是概率。而统计能给出的，只是频率而已。概率和历史出现频率，是两码事情。  \n  \n既然所有技术指标都是过去价格或者交易量的汇总分析，所有的技术指标都是对过去历史价格的一种解释。那么从信息的角度来说，技术分析的任意组合不可能突破价格所包含的信息。  \n  \n这里有篇科普文，解释为什么一种叫神经元网络的东西，能够拟合出任意函数：Neural networks and deep   learning。  \n  \n对，神经元网络，无论指标如何玩花活，都是历史价格的函数，他们到底能不能预示未来？或者一定程度上获得置信区间？  \n  \n神经元网络的灵感来自于人类大脑，这一技术已经拥有了非常丰富的技术积累和现成工具。动用自己的编程技能，开始捣鼓了起来。  \n  \n一遍遍调参数，看结果。已经习惯了打击。  \n  \n难道过去的价格，并不包含未来的价格走向吗？**光看这个论点，似乎不至于振聋发聩，然而，世面上几乎所有的技术分析，都是根据历史价格来敲定的。**  \n  \n这是一个多么不一样的世界，在我学习计算机科学技术的时候，书上告诉你的东西，或许不准确，但你实践后，按照书上的代码上机后多半是实践成功的。  \n  \n电视上，杂志上，网络上大家讨论的东西，都是确定的。上编译器确认一下，你就会发现，虽然有大量的偏见，至少不是在争吵着子虚乌有的东西。  \n  \n可如果过去的历史价格，并不是未来价格的一种预言。那所有的相关书籍，无数人讨论得热烈无比的技术，电视上专家的口若悬河，难道完全是扯淡？  \n  \n全世界都在瞎扯淡，就你聪明？我还不至于狂妄自大到这个程度，总觉得问题出在自己这里，神经元网络也不是万能的嘛，换一换它的强劲对手SVM，支持向量机。光听名字就高大上啊。  \n  \n支持向量机作为人工智能另外一个很有前途的领域，被广泛看好。当然深度学习的火热是后来的事情了，当年并没有听说过。  \n  \n感谢开源世界，让我得以方便得使用前人的智慧。  \n  \n一遍一遍又一遍，挑灯夜战已经习以为常，失望，也已经习以为常。  \n  \n模型的维度越来越高，复杂程度已经失控。不变的是，过去的历史价格作为输入。我是有多不愿意承认，过去的价格并不包含对未来的预言。  \n  \n否定这个，就是否定了自己过去那么多不眠夜，那么多废寝忘食，那么多心血，那么多努力，那么多那么多东西。  \n  \n难熬，真的难熬。  \n  \n短暂的逃避后，重新开始思考，在推翻一切之前，让我再回望一下我心血凝结的尸体，回眸一下那曾经妩媚的身影，究竟是倒毙于自身的缺陷，还是所有的一切，终究不过是黄粱一梦。  \n  \n我为何从这条路开始探索下去的？对，我是受了软件的暗示，似乎技术指标蕴藏着奥秘，只要解开，就能获得财务自由。从一开始，我就被引导着。  \n  \n不要听信任何人的指引，我会怎么做？如果我从来不知道技术分析这回事情，我会怎么办？我将如何面对市场？  \n  \n在放下所有，放空自己，摈除所有偏见后，开始思考最本初的一些疑问。  \n  \n下面大量内容引述自果壳网的多篇文章，我之前在知乎的交流中也大量使用。我们且放下市场，做个小小的旅行。  \n  \n说两个段子：  \n  \n“指导员做战前动员，称“只要冲锋足够快，就不会受伤”。你拼尽全力冲锋，可战后却浑身血淋淋地被抬了回来。  \n  \n你说指导员的话不对，指导员却说：“那是因为你冲得不够快，否则就不会受伤了，记着下次冲快点啊。”面对这么流氓的解释，你只能哑口无言。但你已经知道了他是个骗子，原因在于他根本就没有给出冲锋足够快的标准，无论你冲得有多快，只要你受伤了，他永远可以称原因是你不够快，他的说法“永远正确”。”  \n  \n李大娘相信黄大仙，她认为世上万事万物，包括你我的思想都是由一只超级黄鼠狼完全控制着，当然包括我这篇文章的写作。依托这只黄鼠狼，李大娘可以解释一切，下雨是它流鼻涕，打雷是它打喷嚏。你还别跟李大娘较劲，因为你永远都无法证明这个黄鼠狼是不存在的。  \n  \n指导员和李大娘的说法有一个共性，那就是说法本身根本就没有可以否定它的途径，用科学哲学的术语说，就是该说法本身不具有“可证伪性”。  \n  \n**如果你数了上五浪后做空失败了，是你对浪的界定出问题了，我们时间拉得更长点你就发现，果然可以解释得通。第三浪最强，可你发现突然转向了，其实你看的是最后一浪了。下三浪还没完怎么就结束了呢？其实三浪早结束了，你数错了。**  \n  \n各位知道我在说什么吗？这种理论永远不会错！怎么说都说得圆。  \n  \n我们再来假设一个场景：\n\n  \nA、B两人对于太阳升起分别提出了两种观点：  \nA：太阳从东边升起。  \nB：太阳从所有方向升起。\n\n  \n其中，A是可以被证明是假的，只要我们找到一次太阳不是从东边升起的情况，就可以证明A是错的了。  \n  \n但是B的理论可以说是完美，根本找不到任何方法证明他是错的。\n\n  \n实际上A和B都没有办法证明他们的理论是正确的。  \n  \nA的理论，完整看是这样的：从人类确立方向开始，太阳都是从东边升起的，从而推知太阳从地球形成到消亡，都会从东边升起。  \nB的完整理论是：从地球形成以来，太阳就可能从任意方向升起，从人类确立方向以来，太阳都是从东边升起的，并且会在未来的某个时间改变。  \n  \n如果A和B要证明自己正确，那么就需要有地球从形成到消亡，所有的太阳升起方位的证据，这是不可能的。  \n  \n大家都有的证据就只有从人类记录太阳升起以来的资料，也就是有限的证据，单靠这些证据，两人都无法证明自己的观点是正确的。  \n  \n都无法证明，两者的理论全部都是不可靠的。  \n  \n一万个例子都无法证明，只用一个真实的反例就足够证伪。前提是，该问题是可以证伪的。**如果一个理论，不可证伪，那压根就没有任何科学价值。  \n**  \n太多太多的技术分析流派，宣示的理论，连可证伪性都不具备。这和指导员和李大娘没有任何本质区别，拥有的，**不过是一大堆图形拼凑起来的迷信罢了。**  \n  \n某形态出现后，是庄家入场了，这里暗示着投资者情绪的发酵。这些言论听着都很有可能性。是的，有可能性而已，如何证明这条K线不是庄家买入的呢？如何证明不是情绪的躁动呢？我反正是没办法指出他们错在哪里的，永远有可能。  \n  \n每当他们的技术分析失效时，他们总是会告诉你忽略了什么东西，不管他之前有没有说明过，或许，是他的最新发现呢，系统终于得到修复，呵呵。  \n  \n那我们之前做的统计分析是可证伪的吗？是的，成不成，看多看空都是确定的，没法作弊的。要么盈利，要么亏损，不存在模棱两可。  \n  \n在了解了不可证伪就是耍流氓，就是迷信后，我们再回顾一下，人类的思维方法，  \n人类得出结论分两种方法：演绎法与归纳法。\n\n  \n我们熟悉的三段论是个好例子：\n\n  \nA 所有人都会死  \nB 苏格拉底是人  \nC 苏格拉底会死  \n  \n这个推论就是演绎法，我们通过已知的普遍规律和一个事实，能推断出一个确定的结论。这种方法叫做演绎。  \n  \n归纳法不一样\n\n  \nA 柏拉图最后死了  \nB 苏格拉底最后也死了  \nC 人最后都会死  \n  \n归纳法的出发点不是确定性的规律，而是观察到的现象，我们观察到现象并且从中总结出一些可能的规律。最后形成我们对规律的总结。  \n  \n关于这些哲学问题，推荐阅读 《科学哲学》。  \n  \n休谟的论断虽然古老，但至今仍然是个魔咒。演绎的法则是可靠的，而所有的归纳都是不可靠的。因为归纳法有个终极的缺陷，我们无法得到所有的样本。  \n  \n就算我们获取了历史上的所有样本，我们也无法避免未来太阳突然从西北方向升起，因为一个样本的例外就足够证伪，就算之前的一亿个成功样本，都没办法。  \n  \n之前人们看到的天鹅都是白色的，黑天鹅一词基本等同于“龟毛兔角”，意喻不存在的事情。直到大航海时代，人们在澳洲真的发现了黑色的天鹅。  \n  \n归纳法永远无法摆脱这个宿命，黑天鹅一词也从龟毛兔角的涵义变化为历史上从未发生过的事情的比喻。任何以归纳法作为根基的策略，都逃不出这个宿命。  \n  \n演绎法则是严格可靠的。  \n  \n在粗浅得学习了哲学后，猛然发现我大学里学习的数理逻辑学，原来是那么得有智慧。我忽略了太多东西。哲学，特别是科学哲学，应该是在学习任何技巧前都应该好好过一遍的东西，而之前的我，愚蠢得看到前人的经验就迫不及待得去了解，连对经验应该抱有什么样的态度都不知道，蠢死了。  \n  \n也怪我之前学习的是计算机科学，似乎知识都是可靠的，至少不会太不靠谱，甚至完全不着边际。  \n  \n而一切一切我看到的技术分析，都没有逃离归纳法的诅咒范围。且不论它们自身永世无法脱离归纳法永恒的缺陷，就归纳本身而言，它们都算不上好的归纳。\n\n  \n摆脱一切我以前相信的东西之后，学习真正的知识，见识到人类智慧的可悲局限的时候，我终于获得了释然，彻底的释放。  \n  \n**是的，就算是归纳，这些技术分析都谈不上上档次。  \n**  \n居然被骗那么久，只怪自己蠢，自己太心急，急于看出点什么东西。人类的大脑是个模式识别器，而且进化总要求你快速得识别模式。  \n  \n以至于当我看到花花绿绿的技术分析后，总是急于给出自己的模式识别。  \n  \n蠢即是恶，要为自己的愚昧付出代价，无数的日日夜夜就是代价。我一点都不冤枉。  \n  \n自此，脱胎换骨。  \n  \n恨自己没有早些学习哲学，恨自己急于获取可见的知识，而没有深入思考思考这东西。恨自己以为勤奋和刻苦就能有回报。  \n  \n没有眼睛，狂奔在走向毁灭的道路上，是不会有上帝来怜惜的。自己背负因果，没人可以代替。  \n  \n不再纠结于神经元网络或者SVM是不是冤枉了技术分析的能力，从可证伪性和演绎归纳的区别性质上，已经足够洞见差别。  \n  \n重新审视策略，原来多年牛角尖钻错了地方。外加在探索的过程中学习了大量的金融学知识，极大得拓宽了眼界。不再把自己困在单个市场上价格的猜涨猜跌中。事实上，我已经彻底放弃了价格的猜测，本来以为只有猜价格才是获利的唯一方法，这就是不学习的罪恶，无知就是罪恶。  \n  \n重新启程，摆脱思维习惯，以可证伪性为基本条件，严格的演绎作为推论方式，规避归纳法，重新制定策略。  \n  \n天可怜见，走了老大的弯路，总算踏上了正途。  \n  \n当初想要学习和了解哲学方面的知识，并没有带着强烈的目的性。谁曾料想，猛然触及到了那么多时间挣扎深陷的问题之症结所在。犹如在他乡的远足中，偶遇知音。  \n  ","source":"_posts/（转载）股民何苦为难股民，技术分析是用来骗我的吗？.md","raw":"---\ntitle: （转载）股民何苦为难股民，技术分析是用来骗我的吗？\ndate: 2018-10-12 09:18:38\ncategories: 财经\ntags: 转载,投资,技术,财经\n---\n  \n转载自雪球\n\n今天的市场气氛到达了新的一轮冰点，买？卖？价值投资？技术分析？\n\n雪球量化投资大V@许哲 讲述了他在追求技术指标路上的思考，最终的结论有些振聋发聩，在此分享给大家！\n\n作者：许哲\n\n  \n我不知道诸位是如何接触到金融投机的。不知道你第一笔交易是如何完成的，第一个交易的品种是什么，第一次开仓的依据是何。  \n  \n但有一点是可以肯定的，每个没有放弃在市场里搏杀，坚持不懈的朋友，都经历过很痛苦的阶段。如果你还没经历，请做好心理准备。  \n  \n笔者并非金融专业出身，金融学知识和经济学知识都是大学毕业后才自学的。在学到这些非常必要的知识前，就因缘巧合接触到了金融投机。  \n  \n第一次被神秘复杂的K线图和各种眼花缭乱的技术分析捕获眼球，就犹如被一种魔法诅咒着，从此难以抽身。  \n  \n在了解了基本的常识后，用软件浏览了许多主流的技术指标们，回望过去，比比划划弄弄，似乎并不难。你瞧这里一个信号就很准，那里一个信号如果抓到那就发财了。每一次接触一种新的技术分析方法，就如同打开了一扇窗户，遥想着当年该交易体系的发明者如何叱诧风云，笑傲市场，壕取千金于万里之外，如探囊取物。  \n  \n当然，兴奋完不久后，就会发现这些信号并不是次次百发百中，偶有失手再所难免，总有些例外情况。用肉眼目测了过往的情况，测算测算如果信号准确时的利润，似乎有些瑕疵也是可以接受的。  \n  \n再多接触了几套交易系统之后，发现有两大派别，一种总是告诉你，快要粗大事了！准备好历史机遇。另外一派总是忧心忡忡，这涨得过头了吧，那个跌得已经离谱了，超买超卖好严重啊，赶快赶在市场修正错误前入场。到底谁说得对呢？  \n纸上得来终觉浅，绝知此事要躬行。开个实盘试试！  \n  \n神奇的是，刚刚入场的肥羊，哦，不，是新手们总是能赚到不少钱的。我也不例外，在做肥羊的最初阶段，几周能就获得了翻倍的利润。  \n  \n过了不久，咦？技术指标怎么接连失败。复盘的时候，明明很神奇，很威武的呀。\n\n  \n\n肉眼复盘的时候，总发现有些指标在有些特定的时候特别神勇，而恰恰另外的指标会提醒我们时机未到，就好像有许多大臣在给国王提建议，或许，兼听则明，偏听则暗？  \n  \n单个指标总是有缺陷的嘛，人无完人，指标也无万能的，我们要构建自己的交易系统，多个指标取长补短，认真复盘，认真思考，秘密一定就在细节里。  \n  \n艰苦卓越的复盘，指标组合，反复琢磨，反复咀嚼，我不知道有多少人花了多少个不眠夜，苦苦上下而求索。我反正是陷进去了。  \n  \n日复一日，有时间也不看美剧了，游戏也不打了，全世界最最神秘的，最有趣的事情，就是技术分析的有效性。盯住屏幕，反复掂量，反复推敲。  \n  \n推敲推敲再推敲，无数次似乎顿悟来临，无数次希望破灭，人如同着魔一般，偏不信唯独我，不能拥有属于自己的交易系统，独步江湖。天道酬勤，功夫不负有心人，学海无涯苦作舟，反复激励着自己，顽强得度过一个个不眠夜。  \n  \n市面上的交易系统，没有没学过的。  \n  \n  \n  \n什么线都画过，什么多周期共振分析，还买了多屏一起看。  \n  \n  \n  \n上图是网上找来的，不过绝非个案，这样做的交易员比比皆是。  \n  \n艰苦卓绝的奋斗并没有带来让我真正的收获，有的只是一次次希望化成泡影而已。如果说这条路，我因为不够努力，所以没有走通，我想我的生理极限已经不能支持我做下去了。  \n  \n到底有没有用？为什么看着总有效而用着用着总出问题？  \n  \n**昨夜西风凋碧树。独上高楼，望尽天涯路。欲寄彩笺兼尺素。山长水阔知何处。**  \n  \n后来我学习了心理学和神经科学的一些知识后，知道人拥有无法克服的自利偏差和后视偏差。自利偏差意味着你一定会朝自己有利的方向产生偏见，**一旦你对某技术指标产生信心后，你会强化它的优势，而忽视它的缺陷。**  \n  \n后视偏差，会造成大量的事后诸葛亮的情境，把未来的信息不自觉得带入进去。这些是人性，人性是客观存在的，和人性斗争是很艰难的事情。  \n  \n《海龟交易法则》还宣扬了一种理念，不是系统不OK，是你的心态不OK。学会冷酷机械得操作，把仓位资金管理做成机器人一般，就能获得成功，打败市场。  \n  \n一群毫无交易经验的年轻人，因为崇拜，言听计从，从而笑傲华尔街。  \n  \n**击败人性就击败了市场，战胜自己，就能赢得未来。听上去好有道理，但机械执行好难啊，心里好煎熬啊。**  \n  \n好在，我是码农出身，会写代码（大学期间还拿过全国性比赛的前三名，拿过风投，技术勉强还算靠谱），何不用计算机来克服人性呢？计算机不会有自利偏差和后视偏差（前提是你的程序不能使用未来信息）。况且，组合出来的技术指标组合浩瀚如海，如何能用人力去做这些事情呢？况且做得还不好。  \n  \n海龟交易法则那个时代，可没那么好的IT技术。  \n  \n想到这一点，再次扎入代码中，开始艰苦卓绝地架构，coding，debug，历史回测，分析效果，想办法提高计算效率，如何利用并行计算让能用得上的所有计算设备一起没日没夜得跑起来。如此循环往复，不知疲倦。  \n编程，真是现代人处理信息的必备技能，编程赋予人很大的自由，在处理信息的过程中，不再受制于许多软件的不称心，上限多半在于你的编程技能，而非他人。  \n  \n从满屏幕的技术指标，变回了满屏幕的各种代码，CPU 永远满转。没日没夜得比划果然不如没日没夜得coding来得高效。那我收获了“圣杯”吗？  \n  \n我曾经以为我收获了。此时的我，已经不是一个人在奋斗了，有一群志同道合的小伙伴们和我一起探索着这诱人的谜题，我们为了洞悉那牵扯着千万人的奥秘，无数人魂牵梦绕的圣杯，不知疲倦得做着工作。  \n  \n对几乎所有可行的，有确定性描述的技术体系，进行分析后，我们获得了很多有意思的统计结果。动用了大量的计算资源，弄废了若干可怜的硬盘后，对着统计数据，有些怪样的感受。  \n  \n比较知名的技术指标，MACD 能勉强超过50%的准确率，只是勉强超过而已，如果没有交易成本和流动性问题，冷血得执行该指标提示的方法，能不能赢钱还得靠运气。  \n  \nRSI 的表现极不稳定，胜率总算过半，而KDJ的表现糟糕得让人难以置信。  \n  \n胜率超过50%的技术分析策略虽然多，但出现的频次和分布都非常不均匀。曲线非常不平滑，或者说，夏普率非常低。我们在进行着技术指标的整合的时候，运用了统筹规划的一些数学技巧。  \n  \n在大量的统计结果和有序的规划后，我们获得了一个在回测上近乎完美的技术分析体系，曲线的平滑程度让人心醉，收益之高，让人惊鄂。200%的年化回报，是在有资金管理和风险控制的前提下可以预期的。  \n  \n将所有可得到技术指标进行到冷酷无情，毫无人性的计算机系统统计，毫无偏见的，赤裸裸的数据。加上数学上的统筹规划，无可置疑的客观性。\n\n  \n技术分析，简直是做绝了。系统上线运行，神勇一如预期，收益的速度和历史回测完全一致。似乎，熬到头了。  \n  \n系统有效了小半年，开始出现难熬的回撤，当然，对于回撤我们是有心理准备的。不久后系统又恢复了盈利，似乎又回归正常的状态中。  \n  \n然而，一次又一次不明原因偏离预期，让我信心产生了动摇。  \n  \n我相信，技术指标类体系，我们近乎一网打尽，在客观性和准确性方面已经做到极限。彼时，我无法再想象还能如何提高系统的有效性。  \n  \n问题出在哪里？到底哪里做得不够好？这问题为何如此难解？或许，这问题有答案吗？这个无数先辈反复琢磨的圣杯，存在吗？  \n  \n是鲁棒性不好吗？学习集和测试集反复互相倒腾，无时不刻担心过度学习的问题。到底是哪里没做好？\n\n  \n有人误会，认为不需要预测价格，其实只要一个正预期收益的系统就OK了。然而一个正预期收益的系统需要的是概率。而统计能给出的，只是频率而已。概率和历史出现频率，是两码事情。  \n  \n既然所有技术指标都是过去价格或者交易量的汇总分析，所有的技术指标都是对过去历史价格的一种解释。那么从信息的角度来说，技术分析的任意组合不可能突破价格所包含的信息。  \n  \n这里有篇科普文，解释为什么一种叫神经元网络的东西，能够拟合出任意函数：Neural networks and deep   learning。  \n  \n对，神经元网络，无论指标如何玩花活，都是历史价格的函数，他们到底能不能预示未来？或者一定程度上获得置信区间？  \n  \n神经元网络的灵感来自于人类大脑，这一技术已经拥有了非常丰富的技术积累和现成工具。动用自己的编程技能，开始捣鼓了起来。  \n  \n一遍遍调参数，看结果。已经习惯了打击。  \n  \n难道过去的价格，并不包含未来的价格走向吗？**光看这个论点，似乎不至于振聋发聩，然而，世面上几乎所有的技术分析，都是根据历史价格来敲定的。**  \n  \n这是一个多么不一样的世界，在我学习计算机科学技术的时候，书上告诉你的东西，或许不准确，但你实践后，按照书上的代码上机后多半是实践成功的。  \n  \n电视上，杂志上，网络上大家讨论的东西，都是确定的。上编译器确认一下，你就会发现，虽然有大量的偏见，至少不是在争吵着子虚乌有的东西。  \n  \n可如果过去的历史价格，并不是未来价格的一种预言。那所有的相关书籍，无数人讨论得热烈无比的技术，电视上专家的口若悬河，难道完全是扯淡？  \n  \n全世界都在瞎扯淡，就你聪明？我还不至于狂妄自大到这个程度，总觉得问题出在自己这里，神经元网络也不是万能的嘛，换一换它的强劲对手SVM，支持向量机。光听名字就高大上啊。  \n  \n支持向量机作为人工智能另外一个很有前途的领域，被广泛看好。当然深度学习的火热是后来的事情了，当年并没有听说过。  \n  \n感谢开源世界，让我得以方便得使用前人的智慧。  \n  \n一遍一遍又一遍，挑灯夜战已经习以为常，失望，也已经习以为常。  \n  \n模型的维度越来越高，复杂程度已经失控。不变的是，过去的历史价格作为输入。我是有多不愿意承认，过去的价格并不包含对未来的预言。  \n  \n否定这个，就是否定了自己过去那么多不眠夜，那么多废寝忘食，那么多心血，那么多努力，那么多那么多东西。  \n  \n难熬，真的难熬。  \n  \n短暂的逃避后，重新开始思考，在推翻一切之前，让我再回望一下我心血凝结的尸体，回眸一下那曾经妩媚的身影，究竟是倒毙于自身的缺陷，还是所有的一切，终究不过是黄粱一梦。  \n  \n我为何从这条路开始探索下去的？对，我是受了软件的暗示，似乎技术指标蕴藏着奥秘，只要解开，就能获得财务自由。从一开始，我就被引导着。  \n  \n不要听信任何人的指引，我会怎么做？如果我从来不知道技术分析这回事情，我会怎么办？我将如何面对市场？  \n  \n在放下所有，放空自己，摈除所有偏见后，开始思考最本初的一些疑问。  \n  \n下面大量内容引述自果壳网的多篇文章，我之前在知乎的交流中也大量使用。我们且放下市场，做个小小的旅行。  \n  \n说两个段子：  \n  \n“指导员做战前动员，称“只要冲锋足够快，就不会受伤”。你拼尽全力冲锋，可战后却浑身血淋淋地被抬了回来。  \n  \n你说指导员的话不对，指导员却说：“那是因为你冲得不够快，否则就不会受伤了，记着下次冲快点啊。”面对这么流氓的解释，你只能哑口无言。但你已经知道了他是个骗子，原因在于他根本就没有给出冲锋足够快的标准，无论你冲得有多快，只要你受伤了，他永远可以称原因是你不够快，他的说法“永远正确”。”  \n  \n李大娘相信黄大仙，她认为世上万事万物，包括你我的思想都是由一只超级黄鼠狼完全控制着，当然包括我这篇文章的写作。依托这只黄鼠狼，李大娘可以解释一切，下雨是它流鼻涕，打雷是它打喷嚏。你还别跟李大娘较劲，因为你永远都无法证明这个黄鼠狼是不存在的。  \n  \n指导员和李大娘的说法有一个共性，那就是说法本身根本就没有可以否定它的途径，用科学哲学的术语说，就是该说法本身不具有“可证伪性”。  \n  \n**如果你数了上五浪后做空失败了，是你对浪的界定出问题了，我们时间拉得更长点你就发现，果然可以解释得通。第三浪最强，可你发现突然转向了，其实你看的是最后一浪了。下三浪还没完怎么就结束了呢？其实三浪早结束了，你数错了。**  \n  \n各位知道我在说什么吗？这种理论永远不会错！怎么说都说得圆。  \n  \n我们再来假设一个场景：\n\n  \nA、B两人对于太阳升起分别提出了两种观点：  \nA：太阳从东边升起。  \nB：太阳从所有方向升起。\n\n  \n其中，A是可以被证明是假的，只要我们找到一次太阳不是从东边升起的情况，就可以证明A是错的了。  \n  \n但是B的理论可以说是完美，根本找不到任何方法证明他是错的。\n\n  \n实际上A和B都没有办法证明他们的理论是正确的。  \n  \nA的理论，完整看是这样的：从人类确立方向开始，太阳都是从东边升起的，从而推知太阳从地球形成到消亡，都会从东边升起。  \nB的完整理论是：从地球形成以来，太阳就可能从任意方向升起，从人类确立方向以来，太阳都是从东边升起的，并且会在未来的某个时间改变。  \n  \n如果A和B要证明自己正确，那么就需要有地球从形成到消亡，所有的太阳升起方位的证据，这是不可能的。  \n  \n大家都有的证据就只有从人类记录太阳升起以来的资料，也就是有限的证据，单靠这些证据，两人都无法证明自己的观点是正确的。  \n  \n都无法证明，两者的理论全部都是不可靠的。  \n  \n一万个例子都无法证明，只用一个真实的反例就足够证伪。前提是，该问题是可以证伪的。**如果一个理论，不可证伪，那压根就没有任何科学价值。  \n**  \n太多太多的技术分析流派，宣示的理论，连可证伪性都不具备。这和指导员和李大娘没有任何本质区别，拥有的，**不过是一大堆图形拼凑起来的迷信罢了。**  \n  \n某形态出现后，是庄家入场了，这里暗示着投资者情绪的发酵。这些言论听着都很有可能性。是的，有可能性而已，如何证明这条K线不是庄家买入的呢？如何证明不是情绪的躁动呢？我反正是没办法指出他们错在哪里的，永远有可能。  \n  \n每当他们的技术分析失效时，他们总是会告诉你忽略了什么东西，不管他之前有没有说明过，或许，是他的最新发现呢，系统终于得到修复，呵呵。  \n  \n那我们之前做的统计分析是可证伪的吗？是的，成不成，看多看空都是确定的，没法作弊的。要么盈利，要么亏损，不存在模棱两可。  \n  \n在了解了不可证伪就是耍流氓，就是迷信后，我们再回顾一下，人类的思维方法，  \n人类得出结论分两种方法：演绎法与归纳法。\n\n  \n我们熟悉的三段论是个好例子：\n\n  \nA 所有人都会死  \nB 苏格拉底是人  \nC 苏格拉底会死  \n  \n这个推论就是演绎法，我们通过已知的普遍规律和一个事实，能推断出一个确定的结论。这种方法叫做演绎。  \n  \n归纳法不一样\n\n  \nA 柏拉图最后死了  \nB 苏格拉底最后也死了  \nC 人最后都会死  \n  \n归纳法的出发点不是确定性的规律，而是观察到的现象，我们观察到现象并且从中总结出一些可能的规律。最后形成我们对规律的总结。  \n  \n关于这些哲学问题，推荐阅读 《科学哲学》。  \n  \n休谟的论断虽然古老，但至今仍然是个魔咒。演绎的法则是可靠的，而所有的归纳都是不可靠的。因为归纳法有个终极的缺陷，我们无法得到所有的样本。  \n  \n就算我们获取了历史上的所有样本，我们也无法避免未来太阳突然从西北方向升起，因为一个样本的例外就足够证伪，就算之前的一亿个成功样本，都没办法。  \n  \n之前人们看到的天鹅都是白色的，黑天鹅一词基本等同于“龟毛兔角”，意喻不存在的事情。直到大航海时代，人们在澳洲真的发现了黑色的天鹅。  \n  \n归纳法永远无法摆脱这个宿命，黑天鹅一词也从龟毛兔角的涵义变化为历史上从未发生过的事情的比喻。任何以归纳法作为根基的策略，都逃不出这个宿命。  \n  \n演绎法则是严格可靠的。  \n  \n在粗浅得学习了哲学后，猛然发现我大学里学习的数理逻辑学，原来是那么得有智慧。我忽略了太多东西。哲学，特别是科学哲学，应该是在学习任何技巧前都应该好好过一遍的东西，而之前的我，愚蠢得看到前人的经验就迫不及待得去了解，连对经验应该抱有什么样的态度都不知道，蠢死了。  \n  \n也怪我之前学习的是计算机科学，似乎知识都是可靠的，至少不会太不靠谱，甚至完全不着边际。  \n  \n而一切一切我看到的技术分析，都没有逃离归纳法的诅咒范围。且不论它们自身永世无法脱离归纳法永恒的缺陷，就归纳本身而言，它们都算不上好的归纳。\n\n  \n摆脱一切我以前相信的东西之后，学习真正的知识，见识到人类智慧的可悲局限的时候，我终于获得了释然，彻底的释放。  \n  \n**是的，就算是归纳，这些技术分析都谈不上上档次。  \n**  \n居然被骗那么久，只怪自己蠢，自己太心急，急于看出点什么东西。人类的大脑是个模式识别器，而且进化总要求你快速得识别模式。  \n  \n以至于当我看到花花绿绿的技术分析后，总是急于给出自己的模式识别。  \n  \n蠢即是恶，要为自己的愚昧付出代价，无数的日日夜夜就是代价。我一点都不冤枉。  \n  \n自此，脱胎换骨。  \n  \n恨自己没有早些学习哲学，恨自己急于获取可见的知识，而没有深入思考思考这东西。恨自己以为勤奋和刻苦就能有回报。  \n  \n没有眼睛，狂奔在走向毁灭的道路上，是不会有上帝来怜惜的。自己背负因果，没人可以代替。  \n  \n不再纠结于神经元网络或者SVM是不是冤枉了技术分析的能力，从可证伪性和演绎归纳的区别性质上，已经足够洞见差别。  \n  \n重新审视策略，原来多年牛角尖钻错了地方。外加在探索的过程中学习了大量的金融学知识，极大得拓宽了眼界。不再把自己困在单个市场上价格的猜涨猜跌中。事实上，我已经彻底放弃了价格的猜测，本来以为只有猜价格才是获利的唯一方法，这就是不学习的罪恶，无知就是罪恶。  \n  \n重新启程，摆脱思维习惯，以可证伪性为基本条件，严格的演绎作为推论方式，规避归纳法，重新制定策略。  \n  \n天可怜见，走了老大的弯路，总算踏上了正途。  \n  \n当初想要学习和了解哲学方面的知识，并没有带着强烈的目的性。谁曾料想，猛然触及到了那么多时间挣扎深陷的问题之症结所在。犹如在他乡的远足中，偶遇知音。  \n  ","slug":"（转载）股民何苦为难股民，技术分析是用来骗我的吗？","published":1,"updated":"2018-10-12T01:29:39.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrbok4mx0000l32v62j4qe0t","content":"<p>转载自雪球</p>\n<p>今天的市场气氛到达了新的一轮冰点，买？卖？价值投资？技术分析？</p>\n<p>雪球量化投资大V@许哲 讲述了他在追求技术指标路上的思考，最终的结论有些振聋发聩，在此分享给大家！</p>\n<p>作者：许哲</p>\n<p>我不知道诸位是如何接触到金融投机的。不知道你第一笔交易是如何完成的，第一个交易的品种是什么，第一次开仓的依据是何。  </p>\n<p>但有一点是可以肯定的，每个没有放弃在市场里搏杀，坚持不懈的朋友，都经历过很痛苦的阶段。如果你还没经历，请做好心理准备。  </p>\n<p>笔者并非金融专业出身，金融学知识和经济学知识都是大学毕业后才自学的。在学到这些非常必要的知识前，就因缘巧合接触到了金融投机。  </p>\n<p>第一次被神秘复杂的K线图和各种眼花缭乱的技术分析捕获眼球，就犹如被一种魔法诅咒着，从此难以抽身。  </p>\n<p>在了解了基本的常识后，用软件浏览了许多主流的技术指标们，回望过去，比比划划弄弄，似乎并不难。你瞧这里一个信号就很准，那里一个信号如果抓到那就发财了。每一次接触一种新的技术分析方法，就如同打开了一扇窗户，遥想着当年该交易体系的发明者如何叱诧风云，笑傲市场，壕取千金于万里之外，如探囊取物。  </p>\n<p>当然，兴奋完不久后，就会发现这些信号并不是次次百发百中，偶有失手再所难免，总有些例外情况。用肉眼目测了过往的情况，测算测算如果信号准确时的利润，似乎有些瑕疵也是可以接受的。  </p>\n<p>再多接触了几套交易系统之后，发现有两大派别，一种总是告诉你，快要粗大事了！准备好历史机遇。另外一派总是忧心忡忡，这涨得过头了吧，那个跌得已经离谱了，超买超卖好严重啊，赶快赶在市场修正错误前入场。到底谁说得对呢？<br>纸上得来终觉浅，绝知此事要躬行。开个实盘试试！  </p>\n<p>神奇的是，刚刚入场的肥羊，哦，不，是新手们总是能赚到不少钱的。我也不例外，在做肥羊的最初阶段，几周能就获得了翻倍的利润。  </p>\n<p>过了不久，咦？技术指标怎么接连失败。复盘的时候，明明很神奇，很威武的呀。</p>\n<p>肉眼复盘的时候，总发现有些指标在有些特定的时候特别神勇，而恰恰另外的指标会提醒我们时机未到，就好像有许多大臣在给国王提建议，或许，兼听则明，偏听则暗？  </p>\n<p>单个指标总是有缺陷的嘛，人无完人，指标也无万能的，我们要构建自己的交易系统，多个指标取长补短，认真复盘，认真思考，秘密一定就在细节里。  </p>\n<p>艰苦卓越的复盘，指标组合，反复琢磨，反复咀嚼，我不知道有多少人花了多少个不眠夜，苦苦上下而求索。我反正是陷进去了。  </p>\n<p>日复一日，有时间也不看美剧了，游戏也不打了，全世界最最神秘的，最有趣的事情，就是技术分析的有效性。盯住屏幕，反复掂量，反复推敲。  </p>\n<p>推敲推敲再推敲，无数次似乎顿悟来临，无数次希望破灭，人如同着魔一般，偏不信唯独我，不能拥有属于自己的交易系统，独步江湖。天道酬勤，功夫不负有心人，学海无涯苦作舟，反复激励着自己，顽强得度过一个个不眠夜。  </p>\n<p>市面上的交易系统，没有没学过的。  </p>\n<p>什么线都画过，什么多周期共振分析，还买了多屏一起看。  </p>\n<p>上图是网上找来的，不过绝非个案，这样做的交易员比比皆是。  </p>\n<p>艰苦卓绝的奋斗并没有带来让我真正的收获，有的只是一次次希望化成泡影而已。如果说这条路，我因为不够努力，所以没有走通，我想我的生理极限已经不能支持我做下去了。  </p>\n<p>到底有没有用？为什么看着总有效而用着用着总出问题？  </p>\n<p><strong>昨夜西风凋碧树。独上高楼，望尽天涯路。欲寄彩笺兼尺素。山长水阔知何处。</strong>  </p>\n<p>后来我学习了心理学和神经科学的一些知识后，知道人拥有无法克服的自利偏差和后视偏差。自利偏差意味着你一定会朝自己有利的方向产生偏见，<strong>一旦你对某技术指标产生信心后，你会强化它的优势，而忽视它的缺陷。</strong>  </p>\n<p>后视偏差，会造成大量的事后诸葛亮的情境，把未来的信息不自觉得带入进去。这些是人性，人性是客观存在的，和人性斗争是很艰难的事情。  </p>\n<p>《海龟交易法则》还宣扬了一种理念，不是系统不OK，是你的心态不OK。学会冷酷机械得操作，把仓位资金管理做成机器人一般，就能获得成功，打败市场。  </p>\n<p>一群毫无交易经验的年轻人，因为崇拜，言听计从，从而笑傲华尔街。  </p>\n<p><strong>击败人性就击败了市场，战胜自己，就能赢得未来。听上去好有道理，但机械执行好难啊，心里好煎熬啊。</strong>  </p>\n<p>好在，我是码农出身，会写代码（大学期间还拿过全国性比赛的前三名，拿过风投，技术勉强还算靠谱），何不用计算机来克服人性呢？计算机不会有自利偏差和后视偏差（前提是你的程序不能使用未来信息）。况且，组合出来的技术指标组合浩瀚如海，如何能用人力去做这些事情呢？况且做得还不好。  </p>\n<p>海龟交易法则那个时代，可没那么好的IT技术。  </p>\n<p>想到这一点，再次扎入代码中，开始艰苦卓绝地架构，coding，debug，历史回测，分析效果，想办法提高计算效率，如何利用并行计算让能用得上的所有计算设备一起没日没夜得跑起来。如此循环往复，不知疲倦。<br>编程，真是现代人处理信息的必备技能，编程赋予人很大的自由，在处理信息的过程中，不再受制于许多软件的不称心，上限多半在于你的编程技能，而非他人。  </p>\n<p>从满屏幕的技术指标，变回了满屏幕的各种代码，CPU 永远满转。没日没夜得比划果然不如没日没夜得coding来得高效。那我收获了“圣杯”吗？  </p>\n<p>我曾经以为我收获了。此时的我，已经不是一个人在奋斗了，有一群志同道合的小伙伴们和我一起探索着这诱人的谜题，我们为了洞悉那牵扯着千万人的奥秘，无数人魂牵梦绕的圣杯，不知疲倦得做着工作。  </p>\n<p>对几乎所有可行的，有确定性描述的技术体系，进行分析后，我们获得了很多有意思的统计结果。动用了大量的计算资源，弄废了若干可怜的硬盘后，对着统计数据，有些怪样的感受。  </p>\n<p>比较知名的技术指标，MACD 能勉强超过50%的准确率，只是勉强超过而已，如果没有交易成本和流动性问题，冷血得执行该指标提示的方法，能不能赢钱还得靠运气。  </p>\n<p>RSI 的表现极不稳定，胜率总算过半，而KDJ的表现糟糕得让人难以置信。  </p>\n<p>胜率超过50%的技术分析策略虽然多，但出现的频次和分布都非常不均匀。曲线非常不平滑，或者说，夏普率非常低。我们在进行着技术指标的整合的时候，运用了统筹规划的一些数学技巧。  </p>\n<p>在大量的统计结果和有序的规划后，我们获得了一个在回测上近乎完美的技术分析体系，曲线的平滑程度让人心醉，收益之高，让人惊鄂。200%的年化回报，是在有资金管理和风险控制的前提下可以预期的。  </p>\n<p>将所有可得到技术指标进行到冷酷无情，毫无人性的计算机系统统计，毫无偏见的，赤裸裸的数据。加上数学上的统筹规划，无可置疑的客观性。</p>\n<p>技术分析，简直是做绝了。系统上线运行，神勇一如预期，收益的速度和历史回测完全一致。似乎，熬到头了。  </p>\n<p>系统有效了小半年，开始出现难熬的回撤，当然，对于回撤我们是有心理准备的。不久后系统又恢复了盈利，似乎又回归正常的状态中。  </p>\n<p>然而，一次又一次不明原因偏离预期，让我信心产生了动摇。  </p>\n<p>我相信，技术指标类体系，我们近乎一网打尽，在客观性和准确性方面已经做到极限。彼时，我无法再想象还能如何提高系统的有效性。  </p>\n<p>问题出在哪里？到底哪里做得不够好？这问题为何如此难解？或许，这问题有答案吗？这个无数先辈反复琢磨的圣杯，存在吗？  </p>\n<p>是鲁棒性不好吗？学习集和测试集反复互相倒腾，无时不刻担心过度学习的问题。到底是哪里没做好？</p>\n<p>有人误会，认为不需要预测价格，其实只要一个正预期收益的系统就OK了。然而一个正预期收益的系统需要的是概率。而统计能给出的，只是频率而已。概率和历史出现频率，是两码事情。  </p>\n<p>既然所有技术指标都是过去价格或者交易量的汇总分析，所有的技术指标都是对过去历史价格的一种解释。那么从信息的角度来说，技术分析的任意组合不可能突破价格所包含的信息。  </p>\n<p>这里有篇科普文，解释为什么一种叫神经元网络的东西，能够拟合出任意函数：Neural networks and deep   learning。  </p>\n<p>对，神经元网络，无论指标如何玩花活，都是历史价格的函数，他们到底能不能预示未来？或者一定程度上获得置信区间？  </p>\n<p>神经元网络的灵感来自于人类大脑，这一技术已经拥有了非常丰富的技术积累和现成工具。动用自己的编程技能，开始捣鼓了起来。  </p>\n<p>一遍遍调参数，看结果。已经习惯了打击。  </p>\n<p>难道过去的价格，并不包含未来的价格走向吗？<strong>光看这个论点，似乎不至于振聋发聩，然而，世面上几乎所有的技术分析，都是根据历史价格来敲定的。</strong>  </p>\n<p>这是一个多么不一样的世界，在我学习计算机科学技术的时候，书上告诉你的东西，或许不准确，但你实践后，按照书上的代码上机后多半是实践成功的。  </p>\n<p>电视上，杂志上，网络上大家讨论的东西，都是确定的。上编译器确认一下，你就会发现，虽然有大量的偏见，至少不是在争吵着子虚乌有的东西。  </p>\n<p>可如果过去的历史价格，并不是未来价格的一种预言。那所有的相关书籍，无数人讨论得热烈无比的技术，电视上专家的口若悬河，难道完全是扯淡？  </p>\n<p>全世界都在瞎扯淡，就你聪明？我还不至于狂妄自大到这个程度，总觉得问题出在自己这里，神经元网络也不是万能的嘛，换一换它的强劲对手SVM，支持向量机。光听名字就高大上啊。  </p>\n<p>支持向量机作为人工智能另外一个很有前途的领域，被广泛看好。当然深度学习的火热是后来的事情了，当年并没有听说过。  </p>\n<p>感谢开源世界，让我得以方便得使用前人的智慧。  </p>\n<p>一遍一遍又一遍，挑灯夜战已经习以为常，失望，也已经习以为常。  </p>\n<p>模型的维度越来越高，复杂程度已经失控。不变的是，过去的历史价格作为输入。我是有多不愿意承认，过去的价格并不包含对未来的预言。  </p>\n<p>否定这个，就是否定了自己过去那么多不眠夜，那么多废寝忘食，那么多心血，那么多努力，那么多那么多东西。  </p>\n<p>难熬，真的难熬。  </p>\n<p>短暂的逃避后，重新开始思考，在推翻一切之前，让我再回望一下我心血凝结的尸体，回眸一下那曾经妩媚的身影，究竟是倒毙于自身的缺陷，还是所有的一切，终究不过是黄粱一梦。  </p>\n<p>我为何从这条路开始探索下去的？对，我是受了软件的暗示，似乎技术指标蕴藏着奥秘，只要解开，就能获得财务自由。从一开始，我就被引导着。  </p>\n<p>不要听信任何人的指引，我会怎么做？如果我从来不知道技术分析这回事情，我会怎么办？我将如何面对市场？  </p>\n<p>在放下所有，放空自己，摈除所有偏见后，开始思考最本初的一些疑问。  </p>\n<p>下面大量内容引述自果壳网的多篇文章，我之前在知乎的交流中也大量使用。我们且放下市场，做个小小的旅行。  </p>\n<p>说两个段子：  </p>\n<p>“指导员做战前动员，称“只要冲锋足够快，就不会受伤”。你拼尽全力冲锋，可战后却浑身血淋淋地被抬了回来。  </p>\n<p>你说指导员的话不对，指导员却说：“那是因为你冲得不够快，否则就不会受伤了，记着下次冲快点啊。”面对这么流氓的解释，你只能哑口无言。但你已经知道了他是个骗子，原因在于他根本就没有给出冲锋足够快的标准，无论你冲得有多快，只要你受伤了，他永远可以称原因是你不够快，他的说法“永远正确”。”  </p>\n<p>李大娘相信黄大仙，她认为世上万事万物，包括你我的思想都是由一只超级黄鼠狼完全控制着，当然包括我这篇文章的写作。依托这只黄鼠狼，李大娘可以解释一切，下雨是它流鼻涕，打雷是它打喷嚏。你还别跟李大娘较劲，因为你永远都无法证明这个黄鼠狼是不存在的。  </p>\n<p>指导员和李大娘的说法有一个共性，那就是说法本身根本就没有可以否定它的途径，用科学哲学的术语说，就是该说法本身不具有“可证伪性”。  </p>\n<p><strong>如果你数了上五浪后做空失败了，是你对浪的界定出问题了，我们时间拉得更长点你就发现，果然可以解释得通。第三浪最强，可你发现突然转向了，其实你看的是最后一浪了。下三浪还没完怎么就结束了呢？其实三浪早结束了，你数错了。</strong>  </p>\n<p>各位知道我在说什么吗？这种理论永远不会错！怎么说都说得圆。  </p>\n<p>我们再来假设一个场景：</p>\n<p>A、B两人对于太阳升起分别提出了两种观点：<br>A：太阳从东边升起。<br>B：太阳从所有方向升起。</p>\n<p>其中，A是可以被证明是假的，只要我们找到一次太阳不是从东边升起的情况，就可以证明A是错的了。  </p>\n<p>但是B的理论可以说是完美，根本找不到任何方法证明他是错的。</p>\n<p>实际上A和B都没有办法证明他们的理论是正确的。  </p>\n<p>A的理论，完整看是这样的：从人类确立方向开始，太阳都是从东边升起的，从而推知太阳从地球形成到消亡，都会从东边升起。<br>B的完整理论是：从地球形成以来，太阳就可能从任意方向升起，从人类确立方向以来，太阳都是从东边升起的，并且会在未来的某个时间改变。  </p>\n<p>如果A和B要证明自己正确，那么就需要有地球从形成到消亡，所有的太阳升起方位的证据，这是不可能的。  </p>\n<p>大家都有的证据就只有从人类记录太阳升起以来的资料，也就是有限的证据，单靠这些证据，两人都无法证明自己的观点是正确的。  </p>\n<p>都无法证明，两者的理论全部都是不可靠的。  </p>\n<p>一万个例子都无法证明，只用一个真实的反例就足够证伪。前提是，该问题是可以证伪的。<strong>如果一个理论，不可证伪，那压根就没有任何科学价值。  \n</strong><br>太多太多的技术分析流派，宣示的理论，连可证伪性都不具备。这和指导员和李大娘没有任何本质区别，拥有的，<strong>不过是一大堆图形拼凑起来的迷信罢了。</strong>  </p>\n<p>某形态出现后，是庄家入场了，这里暗示着投资者情绪的发酵。这些言论听着都很有可能性。是的，有可能性而已，如何证明这条K线不是庄家买入的呢？如何证明不是情绪的躁动呢？我反正是没办法指出他们错在哪里的，永远有可能。  </p>\n<p>每当他们的技术分析失效时，他们总是会告诉你忽略了什么东西，不管他之前有没有说明过，或许，是他的最新发现呢，系统终于得到修复，呵呵。  </p>\n<p>那我们之前做的统计分析是可证伪的吗？是的，成不成，看多看空都是确定的，没法作弊的。要么盈利，要么亏损，不存在模棱两可。  </p>\n<p>在了解了不可证伪就是耍流氓，就是迷信后，我们再回顾一下，人类的思维方法，<br>人类得出结论分两种方法：演绎法与归纳法。</p>\n<p>我们熟悉的三段论是个好例子：</p>\n<p>A 所有人都会死<br>B 苏格拉底是人<br>C 苏格拉底会死  </p>\n<p>这个推论就是演绎法，我们通过已知的普遍规律和一个事实，能推断出一个确定的结论。这种方法叫做演绎。  </p>\n<p>归纳法不一样</p>\n<p>A 柏拉图最后死了<br>B 苏格拉底最后也死了<br>C 人最后都会死  </p>\n<p>归纳法的出发点不是确定性的规律，而是观察到的现象，我们观察到现象并且从中总结出一些可能的规律。最后形成我们对规律的总结。  </p>\n<p>关于这些哲学问题，推荐阅读 《科学哲学》。  </p>\n<p>休谟的论断虽然古老，但至今仍然是个魔咒。演绎的法则是可靠的，而所有的归纳都是不可靠的。因为归纳法有个终极的缺陷，我们无法得到所有的样本。  </p>\n<p>就算我们获取了历史上的所有样本，我们也无法避免未来太阳突然从西北方向升起，因为一个样本的例外就足够证伪，就算之前的一亿个成功样本，都没办法。  </p>\n<p>之前人们看到的天鹅都是白色的，黑天鹅一词基本等同于“龟毛兔角”，意喻不存在的事情。直到大航海时代，人们在澳洲真的发现了黑色的天鹅。  </p>\n<p>归纳法永远无法摆脱这个宿命，黑天鹅一词也从龟毛兔角的涵义变化为历史上从未发生过的事情的比喻。任何以归纳法作为根基的策略，都逃不出这个宿命。  </p>\n<p>演绎法则是严格可靠的。  </p>\n<p>在粗浅得学习了哲学后，猛然发现我大学里学习的数理逻辑学，原来是那么得有智慧。我忽略了太多东西。哲学，特别是科学哲学，应该是在学习任何技巧前都应该好好过一遍的东西，而之前的我，愚蠢得看到前人的经验就迫不及待得去了解，连对经验应该抱有什么样的态度都不知道，蠢死了。  </p>\n<p>也怪我之前学习的是计算机科学，似乎知识都是可靠的，至少不会太不靠谱，甚至完全不着边际。  </p>\n<p>而一切一切我看到的技术分析，都没有逃离归纳法的诅咒范围。且不论它们自身永世无法脱离归纳法永恒的缺陷，就归纳本身而言，它们都算不上好的归纳。</p>\n<p>摆脱一切我以前相信的东西之后，学习真正的知识，见识到人类智慧的可悲局限的时候，我终于获得了释然，彻底的释放。  </p>\n<p><strong>是的，就算是归纳，这些技术分析都谈不上上档次。  \n</strong><br>居然被骗那么久，只怪自己蠢，自己太心急，急于看出点什么东西。人类的大脑是个模式识别器，而且进化总要求你快速得识别模式。  </p>\n<p>以至于当我看到花花绿绿的技术分析后，总是急于给出自己的模式识别。  </p>\n<p>蠢即是恶，要为自己的愚昧付出代价，无数的日日夜夜就是代价。我一点都不冤枉。  </p>\n<p>自此，脱胎换骨。  </p>\n<p>恨自己没有早些学习哲学，恨自己急于获取可见的知识，而没有深入思考思考这东西。恨自己以为勤奋和刻苦就能有回报。  </p>\n<p>没有眼睛，狂奔在走向毁灭的道路上，是不会有上帝来怜惜的。自己背负因果，没人可以代替。  </p>\n<p>不再纠结于神经元网络或者SVM是不是冤枉了技术分析的能力，从可证伪性和演绎归纳的区别性质上，已经足够洞见差别。  </p>\n<p>重新审视策略，原来多年牛角尖钻错了地方。外加在探索的过程中学习了大量的金融学知识，极大得拓宽了眼界。不再把自己困在单个市场上价格的猜涨猜跌中。事实上，我已经彻底放弃了价格的猜测，本来以为只有猜价格才是获利的唯一方法，这就是不学习的罪恶，无知就是罪恶。  </p>\n<p>重新启程，摆脱思维习惯，以可证伪性为基本条件，严格的演绎作为推论方式，规避归纳法，重新制定策略。  </p>\n<p>天可怜见，走了老大的弯路，总算踏上了正途。  </p>\n<p>当初想要学习和了解哲学方面的知识，并没有带着强烈的目的性。谁曾料想，猛然触及到了那么多时间挣扎深陷的问题之症结所在。犹如在他乡的远足中，偶遇知音。  </p>\n","site":{"data":{}},"excerpt":"","more":"<p>转载自雪球</p>\n<p>今天的市场气氛到达了新的一轮冰点，买？卖？价值投资？技术分析？</p>\n<p>雪球量化投资大V@许哲 讲述了他在追求技术指标路上的思考，最终的结论有些振聋发聩，在此分享给大家！</p>\n<p>作者：许哲</p>\n<p>我不知道诸位是如何接触到金融投机的。不知道你第一笔交易是如何完成的，第一个交易的品种是什么，第一次开仓的依据是何。  </p>\n<p>但有一点是可以肯定的，每个没有放弃在市场里搏杀，坚持不懈的朋友，都经历过很痛苦的阶段。如果你还没经历，请做好心理准备。  </p>\n<p>笔者并非金融专业出身，金融学知识和经济学知识都是大学毕业后才自学的。在学到这些非常必要的知识前，就因缘巧合接触到了金融投机。  </p>\n<p>第一次被神秘复杂的K线图和各种眼花缭乱的技术分析捕获眼球，就犹如被一种魔法诅咒着，从此难以抽身。  </p>\n<p>在了解了基本的常识后，用软件浏览了许多主流的技术指标们，回望过去，比比划划弄弄，似乎并不难。你瞧这里一个信号就很准，那里一个信号如果抓到那就发财了。每一次接触一种新的技术分析方法，就如同打开了一扇窗户，遥想着当年该交易体系的发明者如何叱诧风云，笑傲市场，壕取千金于万里之外，如探囊取物。  </p>\n<p>当然，兴奋完不久后，就会发现这些信号并不是次次百发百中，偶有失手再所难免，总有些例外情况。用肉眼目测了过往的情况，测算测算如果信号准确时的利润，似乎有些瑕疵也是可以接受的。  </p>\n<p>再多接触了几套交易系统之后，发现有两大派别，一种总是告诉你，快要粗大事了！准备好历史机遇。另外一派总是忧心忡忡，这涨得过头了吧，那个跌得已经离谱了，超买超卖好严重啊，赶快赶在市场修正错误前入场。到底谁说得对呢？<br>纸上得来终觉浅，绝知此事要躬行。开个实盘试试！  </p>\n<p>神奇的是，刚刚入场的肥羊，哦，不，是新手们总是能赚到不少钱的。我也不例外，在做肥羊的最初阶段，几周能就获得了翻倍的利润。  </p>\n<p>过了不久，咦？技术指标怎么接连失败。复盘的时候，明明很神奇，很威武的呀。</p>\n<p>肉眼复盘的时候，总发现有些指标在有些特定的时候特别神勇，而恰恰另外的指标会提醒我们时机未到，就好像有许多大臣在给国王提建议，或许，兼听则明，偏听则暗？  </p>\n<p>单个指标总是有缺陷的嘛，人无完人，指标也无万能的，我们要构建自己的交易系统，多个指标取长补短，认真复盘，认真思考，秘密一定就在细节里。  </p>\n<p>艰苦卓越的复盘，指标组合，反复琢磨，反复咀嚼，我不知道有多少人花了多少个不眠夜，苦苦上下而求索。我反正是陷进去了。  </p>\n<p>日复一日，有时间也不看美剧了，游戏也不打了，全世界最最神秘的，最有趣的事情，就是技术分析的有效性。盯住屏幕，反复掂量，反复推敲。  </p>\n<p>推敲推敲再推敲，无数次似乎顿悟来临，无数次希望破灭，人如同着魔一般，偏不信唯独我，不能拥有属于自己的交易系统，独步江湖。天道酬勤，功夫不负有心人，学海无涯苦作舟，反复激励着自己，顽强得度过一个个不眠夜。  </p>\n<p>市面上的交易系统，没有没学过的。  </p>\n<p>什么线都画过，什么多周期共振分析，还买了多屏一起看。  </p>\n<p>上图是网上找来的，不过绝非个案，这样做的交易员比比皆是。  </p>\n<p>艰苦卓绝的奋斗并没有带来让我真正的收获，有的只是一次次希望化成泡影而已。如果说这条路，我因为不够努力，所以没有走通，我想我的生理极限已经不能支持我做下去了。  </p>\n<p>到底有没有用？为什么看着总有效而用着用着总出问题？  </p>\n<p><strong>昨夜西风凋碧树。独上高楼，望尽天涯路。欲寄彩笺兼尺素。山长水阔知何处。</strong>  </p>\n<p>后来我学习了心理学和神经科学的一些知识后，知道人拥有无法克服的自利偏差和后视偏差。自利偏差意味着你一定会朝自己有利的方向产生偏见，<strong>一旦你对某技术指标产生信心后，你会强化它的优势，而忽视它的缺陷。</strong>  </p>\n<p>后视偏差，会造成大量的事后诸葛亮的情境，把未来的信息不自觉得带入进去。这些是人性，人性是客观存在的，和人性斗争是很艰难的事情。  </p>\n<p>《海龟交易法则》还宣扬了一种理念，不是系统不OK，是你的心态不OK。学会冷酷机械得操作，把仓位资金管理做成机器人一般，就能获得成功，打败市场。  </p>\n<p>一群毫无交易经验的年轻人，因为崇拜，言听计从，从而笑傲华尔街。  </p>\n<p><strong>击败人性就击败了市场，战胜自己，就能赢得未来。听上去好有道理，但机械执行好难啊，心里好煎熬啊。</strong>  </p>\n<p>好在，我是码农出身，会写代码（大学期间还拿过全国性比赛的前三名，拿过风投，技术勉强还算靠谱），何不用计算机来克服人性呢？计算机不会有自利偏差和后视偏差（前提是你的程序不能使用未来信息）。况且，组合出来的技术指标组合浩瀚如海，如何能用人力去做这些事情呢？况且做得还不好。  </p>\n<p>海龟交易法则那个时代，可没那么好的IT技术。  </p>\n<p>想到这一点，再次扎入代码中，开始艰苦卓绝地架构，coding，debug，历史回测，分析效果，想办法提高计算效率，如何利用并行计算让能用得上的所有计算设备一起没日没夜得跑起来。如此循环往复，不知疲倦。<br>编程，真是现代人处理信息的必备技能，编程赋予人很大的自由，在处理信息的过程中，不再受制于许多软件的不称心，上限多半在于你的编程技能，而非他人。  </p>\n<p>从满屏幕的技术指标，变回了满屏幕的各种代码，CPU 永远满转。没日没夜得比划果然不如没日没夜得coding来得高效。那我收获了“圣杯”吗？  </p>\n<p>我曾经以为我收获了。此时的我，已经不是一个人在奋斗了，有一群志同道合的小伙伴们和我一起探索着这诱人的谜题，我们为了洞悉那牵扯着千万人的奥秘，无数人魂牵梦绕的圣杯，不知疲倦得做着工作。  </p>\n<p>对几乎所有可行的，有确定性描述的技术体系，进行分析后，我们获得了很多有意思的统计结果。动用了大量的计算资源，弄废了若干可怜的硬盘后，对着统计数据，有些怪样的感受。  </p>\n<p>比较知名的技术指标，MACD 能勉强超过50%的准确率，只是勉强超过而已，如果没有交易成本和流动性问题，冷血得执行该指标提示的方法，能不能赢钱还得靠运气。  </p>\n<p>RSI 的表现极不稳定，胜率总算过半，而KDJ的表现糟糕得让人难以置信。  </p>\n<p>胜率超过50%的技术分析策略虽然多，但出现的频次和分布都非常不均匀。曲线非常不平滑，或者说，夏普率非常低。我们在进行着技术指标的整合的时候，运用了统筹规划的一些数学技巧。  </p>\n<p>在大量的统计结果和有序的规划后，我们获得了一个在回测上近乎完美的技术分析体系，曲线的平滑程度让人心醉，收益之高，让人惊鄂。200%的年化回报，是在有资金管理和风险控制的前提下可以预期的。  </p>\n<p>将所有可得到技术指标进行到冷酷无情，毫无人性的计算机系统统计，毫无偏见的，赤裸裸的数据。加上数学上的统筹规划，无可置疑的客观性。</p>\n<p>技术分析，简直是做绝了。系统上线运行，神勇一如预期，收益的速度和历史回测完全一致。似乎，熬到头了。  </p>\n<p>系统有效了小半年，开始出现难熬的回撤，当然，对于回撤我们是有心理准备的。不久后系统又恢复了盈利，似乎又回归正常的状态中。  </p>\n<p>然而，一次又一次不明原因偏离预期，让我信心产生了动摇。  </p>\n<p>我相信，技术指标类体系，我们近乎一网打尽，在客观性和准确性方面已经做到极限。彼时，我无法再想象还能如何提高系统的有效性。  </p>\n<p>问题出在哪里？到底哪里做得不够好？这问题为何如此难解？或许，这问题有答案吗？这个无数先辈反复琢磨的圣杯，存在吗？  </p>\n<p>是鲁棒性不好吗？学习集和测试集反复互相倒腾，无时不刻担心过度学习的问题。到底是哪里没做好？</p>\n<p>有人误会，认为不需要预测价格，其实只要一个正预期收益的系统就OK了。然而一个正预期收益的系统需要的是概率。而统计能给出的，只是频率而已。概率和历史出现频率，是两码事情。  </p>\n<p>既然所有技术指标都是过去价格或者交易量的汇总分析，所有的技术指标都是对过去历史价格的一种解释。那么从信息的角度来说，技术分析的任意组合不可能突破价格所包含的信息。  </p>\n<p>这里有篇科普文，解释为什么一种叫神经元网络的东西，能够拟合出任意函数：Neural networks and deep   learning。  </p>\n<p>对，神经元网络，无论指标如何玩花活，都是历史价格的函数，他们到底能不能预示未来？或者一定程度上获得置信区间？  </p>\n<p>神经元网络的灵感来自于人类大脑，这一技术已经拥有了非常丰富的技术积累和现成工具。动用自己的编程技能，开始捣鼓了起来。  </p>\n<p>一遍遍调参数，看结果。已经习惯了打击。  </p>\n<p>难道过去的价格，并不包含未来的价格走向吗？<strong>光看这个论点，似乎不至于振聋发聩，然而，世面上几乎所有的技术分析，都是根据历史价格来敲定的。</strong>  </p>\n<p>这是一个多么不一样的世界，在我学习计算机科学技术的时候，书上告诉你的东西，或许不准确，但你实践后，按照书上的代码上机后多半是实践成功的。  </p>\n<p>电视上，杂志上，网络上大家讨论的东西，都是确定的。上编译器确认一下，你就会发现，虽然有大量的偏见，至少不是在争吵着子虚乌有的东西。  </p>\n<p>可如果过去的历史价格，并不是未来价格的一种预言。那所有的相关书籍，无数人讨论得热烈无比的技术，电视上专家的口若悬河，难道完全是扯淡？  </p>\n<p>全世界都在瞎扯淡，就你聪明？我还不至于狂妄自大到这个程度，总觉得问题出在自己这里，神经元网络也不是万能的嘛，换一换它的强劲对手SVM，支持向量机。光听名字就高大上啊。  </p>\n<p>支持向量机作为人工智能另外一个很有前途的领域，被广泛看好。当然深度学习的火热是后来的事情了，当年并没有听说过。  </p>\n<p>感谢开源世界，让我得以方便得使用前人的智慧。  </p>\n<p>一遍一遍又一遍，挑灯夜战已经习以为常，失望，也已经习以为常。  </p>\n<p>模型的维度越来越高，复杂程度已经失控。不变的是，过去的历史价格作为输入。我是有多不愿意承认，过去的价格并不包含对未来的预言。  </p>\n<p>否定这个，就是否定了自己过去那么多不眠夜，那么多废寝忘食，那么多心血，那么多努力，那么多那么多东西。  </p>\n<p>难熬，真的难熬。  </p>\n<p>短暂的逃避后，重新开始思考，在推翻一切之前，让我再回望一下我心血凝结的尸体，回眸一下那曾经妩媚的身影，究竟是倒毙于自身的缺陷，还是所有的一切，终究不过是黄粱一梦。  </p>\n<p>我为何从这条路开始探索下去的？对，我是受了软件的暗示，似乎技术指标蕴藏着奥秘，只要解开，就能获得财务自由。从一开始，我就被引导着。  </p>\n<p>不要听信任何人的指引，我会怎么做？如果我从来不知道技术分析这回事情，我会怎么办？我将如何面对市场？  </p>\n<p>在放下所有，放空自己，摈除所有偏见后，开始思考最本初的一些疑问。  </p>\n<p>下面大量内容引述自果壳网的多篇文章，我之前在知乎的交流中也大量使用。我们且放下市场，做个小小的旅行。  </p>\n<p>说两个段子：  </p>\n<p>“指导员做战前动员，称“只要冲锋足够快，就不会受伤”。你拼尽全力冲锋，可战后却浑身血淋淋地被抬了回来。  </p>\n<p>你说指导员的话不对，指导员却说：“那是因为你冲得不够快，否则就不会受伤了，记着下次冲快点啊。”面对这么流氓的解释，你只能哑口无言。但你已经知道了他是个骗子，原因在于他根本就没有给出冲锋足够快的标准，无论你冲得有多快，只要你受伤了，他永远可以称原因是你不够快，他的说法“永远正确”。”  </p>\n<p>李大娘相信黄大仙，她认为世上万事万物，包括你我的思想都是由一只超级黄鼠狼完全控制着，当然包括我这篇文章的写作。依托这只黄鼠狼，李大娘可以解释一切，下雨是它流鼻涕，打雷是它打喷嚏。你还别跟李大娘较劲，因为你永远都无法证明这个黄鼠狼是不存在的。  </p>\n<p>指导员和李大娘的说法有一个共性，那就是说法本身根本就没有可以否定它的途径，用科学哲学的术语说，就是该说法本身不具有“可证伪性”。  </p>\n<p><strong>如果你数了上五浪后做空失败了，是你对浪的界定出问题了，我们时间拉得更长点你就发现，果然可以解释得通。第三浪最强，可你发现突然转向了，其实你看的是最后一浪了。下三浪还没完怎么就结束了呢？其实三浪早结束了，你数错了。</strong>  </p>\n<p>各位知道我在说什么吗？这种理论永远不会错！怎么说都说得圆。  </p>\n<p>我们再来假设一个场景：</p>\n<p>A、B两人对于太阳升起分别提出了两种观点：<br>A：太阳从东边升起。<br>B：太阳从所有方向升起。</p>\n<p>其中，A是可以被证明是假的，只要我们找到一次太阳不是从东边升起的情况，就可以证明A是错的了。  </p>\n<p>但是B的理论可以说是完美，根本找不到任何方法证明他是错的。</p>\n<p>实际上A和B都没有办法证明他们的理论是正确的。  </p>\n<p>A的理论，完整看是这样的：从人类确立方向开始，太阳都是从东边升起的，从而推知太阳从地球形成到消亡，都会从东边升起。<br>B的完整理论是：从地球形成以来，太阳就可能从任意方向升起，从人类确立方向以来，太阳都是从东边升起的，并且会在未来的某个时间改变。  </p>\n<p>如果A和B要证明自己正确，那么就需要有地球从形成到消亡，所有的太阳升起方位的证据，这是不可能的。  </p>\n<p>大家都有的证据就只有从人类记录太阳升起以来的资料，也就是有限的证据，单靠这些证据，两人都无法证明自己的观点是正确的。  </p>\n<p>都无法证明，两者的理论全部都是不可靠的。  </p>\n<p>一万个例子都无法证明，只用一个真实的反例就足够证伪。前提是，该问题是可以证伪的。<strong>如果一个理论，不可证伪，那压根就没有任何科学价值。  \n</strong><br>太多太多的技术分析流派，宣示的理论，连可证伪性都不具备。这和指导员和李大娘没有任何本质区别，拥有的，<strong>不过是一大堆图形拼凑起来的迷信罢了。</strong>  </p>\n<p>某形态出现后，是庄家入场了，这里暗示着投资者情绪的发酵。这些言论听着都很有可能性。是的，有可能性而已，如何证明这条K线不是庄家买入的呢？如何证明不是情绪的躁动呢？我反正是没办法指出他们错在哪里的，永远有可能。  </p>\n<p>每当他们的技术分析失效时，他们总是会告诉你忽略了什么东西，不管他之前有没有说明过，或许，是他的最新发现呢，系统终于得到修复，呵呵。  </p>\n<p>那我们之前做的统计分析是可证伪的吗？是的，成不成，看多看空都是确定的，没法作弊的。要么盈利，要么亏损，不存在模棱两可。  </p>\n<p>在了解了不可证伪就是耍流氓，就是迷信后，我们再回顾一下，人类的思维方法，<br>人类得出结论分两种方法：演绎法与归纳法。</p>\n<p>我们熟悉的三段论是个好例子：</p>\n<p>A 所有人都会死<br>B 苏格拉底是人<br>C 苏格拉底会死  </p>\n<p>这个推论就是演绎法，我们通过已知的普遍规律和一个事实，能推断出一个确定的结论。这种方法叫做演绎。  </p>\n<p>归纳法不一样</p>\n<p>A 柏拉图最后死了<br>B 苏格拉底最后也死了<br>C 人最后都会死  </p>\n<p>归纳法的出发点不是确定性的规律，而是观察到的现象，我们观察到现象并且从中总结出一些可能的规律。最后形成我们对规律的总结。  </p>\n<p>关于这些哲学问题，推荐阅读 《科学哲学》。  </p>\n<p>休谟的论断虽然古老，但至今仍然是个魔咒。演绎的法则是可靠的，而所有的归纳都是不可靠的。因为归纳法有个终极的缺陷，我们无法得到所有的样本。  </p>\n<p>就算我们获取了历史上的所有样本，我们也无法避免未来太阳突然从西北方向升起，因为一个样本的例外就足够证伪，就算之前的一亿个成功样本，都没办法。  </p>\n<p>之前人们看到的天鹅都是白色的，黑天鹅一词基本等同于“龟毛兔角”，意喻不存在的事情。直到大航海时代，人们在澳洲真的发现了黑色的天鹅。  </p>\n<p>归纳法永远无法摆脱这个宿命，黑天鹅一词也从龟毛兔角的涵义变化为历史上从未发生过的事情的比喻。任何以归纳法作为根基的策略，都逃不出这个宿命。  </p>\n<p>演绎法则是严格可靠的。  </p>\n<p>在粗浅得学习了哲学后，猛然发现我大学里学习的数理逻辑学，原来是那么得有智慧。我忽略了太多东西。哲学，特别是科学哲学，应该是在学习任何技巧前都应该好好过一遍的东西，而之前的我，愚蠢得看到前人的经验就迫不及待得去了解，连对经验应该抱有什么样的态度都不知道，蠢死了。  </p>\n<p>也怪我之前学习的是计算机科学，似乎知识都是可靠的，至少不会太不靠谱，甚至完全不着边际。  </p>\n<p>而一切一切我看到的技术分析，都没有逃离归纳法的诅咒范围。且不论它们自身永世无法脱离归纳法永恒的缺陷，就归纳本身而言，它们都算不上好的归纳。</p>\n<p>摆脱一切我以前相信的东西之后，学习真正的知识，见识到人类智慧的可悲局限的时候，我终于获得了释然，彻底的释放。  </p>\n<p><strong>是的，就算是归纳，这些技术分析都谈不上上档次。  \n</strong><br>居然被骗那么久，只怪自己蠢，自己太心急，急于看出点什么东西。人类的大脑是个模式识别器，而且进化总要求你快速得识别模式。  </p>\n<p>以至于当我看到花花绿绿的技术分析后，总是急于给出自己的模式识别。  </p>\n<p>蠢即是恶，要为自己的愚昧付出代价，无数的日日夜夜就是代价。我一点都不冤枉。  </p>\n<p>自此，脱胎换骨。  </p>\n<p>恨自己没有早些学习哲学，恨自己急于获取可见的知识，而没有深入思考思考这东西。恨自己以为勤奋和刻苦就能有回报。  </p>\n<p>没有眼睛，狂奔在走向毁灭的道路上，是不会有上帝来怜惜的。自己背负因果，没人可以代替。  </p>\n<p>不再纠结于神经元网络或者SVM是不是冤枉了技术分析的能力，从可证伪性和演绎归纳的区别性质上，已经足够洞见差别。  </p>\n<p>重新审视策略，原来多年牛角尖钻错了地方。外加在探索的过程中学习了大量的金融学知识，极大得拓宽了眼界。不再把自己困在单个市场上价格的猜涨猜跌中。事实上，我已经彻底放弃了价格的猜测，本来以为只有猜价格才是获利的唯一方法，这就是不学习的罪恶，无知就是罪恶。  </p>\n<p>重新启程，摆脱思维习惯，以可证伪性为基本条件，严格的演绎作为推论方式，规避归纳法，重新制定策略。  </p>\n<p>天可怜见，走了老大的弯路，总算踏上了正途。  </p>\n<p>当初想要学习和了解哲学方面的知识，并没有带着强烈的目的性。谁曾料想，猛然触及到了那么多时间挣扎深陷的问题之症结所在。犹如在他乡的远足中，偶遇知音。  </p>\n"},{"title":"详解Android利用AIDL实现进程间通信","date":"2016-08-30T09:11:53.000Z","_content":"\n## 什么是AIDL？\nAIDL是 Android Interface definition language的缩写，是Android的一种接口定义语言。通过它我们可以定义在Android上实现进程间通信的接口,在ADT和AS中会自动为我们写好的AIDL文件生成JAVA代码。\n在Android中，为了实现进程间访问需要把复杂对象分解成操作系统可以理解的基本数据类型，在跨过进程边界后再组合成对象，实现组合成对象的代码单调又难于开发，好在Android为我们提供了AIDL处理这些功能。\n\n## 什么场合下用AIDL？\n直接看官方指南:https://developer.android.com/guide/components/aidl.html的这段话：\n\n```\nNote: Using AIDL is necessary only if you allow clients from different applications \nto access your service for IPC and want to handle multithreading in your service. \nIf you do not need to perform concurrent IPC across different applications, you \nshould create your interface by implementing a Binder or, if you want to perform \nIPC, but do not need to handle multithreading, implement your interface using a \nMessenger.\n```\n只有在你允许多个应用程序访问你提供的服务进行进程间通信，并且在提供的服务中涉及到多线程处理的时候才需要使用到AIDL。如果你无需处理多应用并发通信，你应该采用Binder进行进程间通信。如果你实现的进程间通信未涉及多线程处理，你需要采用Messenger进行进程间通信。\n一般适用于为其它应用程序提供公共服务的Service，这种Service即为系统常驻的Service(如：天气服务，日历服务等)。\n\n## 选择AIDL进行进程间通信有什么优缺点?\n优点:\n1.AIDL有自己的独立进程，不会受到其它进程的影响；\n2.可以被其它进程复用，提供公共服务；\n3.具有很高的灵活性。\n4.相比Messenger,可以传输的数据量大。\n缺点:\n1.相对普通服务，占用系统资源较多，使用AIDL进行IPC也相对麻烦。\n\n## AIDL如何使用？\n既然用AIDL的最终目标是进行不同进程间通信，那这里咱们搞两个APP，一个Server,提供一个Service，用来对传入的参数做加法运算，另外一个Client,调用Server提供的Service。\n\n### Server端实现\n1.建立一个工程，命名:AIDLServer\n2.新建AIDL文件,命名:IMyAidlInterface\n{% asset_img Create_AIDL_File.png [图1] %}\n3.生成后如图2，可以看到自动帮我们生成了一个函数basicTypes，示范了我们可以在AIDL里面使用的基本数据类型，这些类型可以当做参数或者函数返回值，这个函数我们没用到，不用理会，我们新增一个自己的函数add,AIDL文件创建到此结束。\n{% asset_img AIDL_File.png [图2] %}\n4.我们前面提到过，ADT和AS会自动为我们写的AIDL文件生成JAVA代码，这篇文章里面我用的AS，我们点击{% asset_img SYNC.png %}，然后在app/build/generated/source/aidl/debug/包名下可以看到自动生成的IMyAidlInterface.java,不过实际上这个文件我们不会去动它。如图3：\n{% asset_img AIDL_JAVA_File.png [图3] %}\n5.创建Service提供服务，AIDL涉及到IPC通信，所以需要使用绑定服务,在这里我们创建了一个内部类MyAidlImpl继承我们前面写的IMyAidlInterface，并实现了add函数，然后在onBind函数里面返回匿名MyAidlImpl实例。\n\n{% codeblock %}\npackage jackleeforce.aidlserver;\nimport android.app.Service;\nimport android.content.Intent;\nimport android.os.IBinder;\nimport android.os.RemoteException;\nimport android.support.annotation.Nullable;\n\npublic class AIDLService extends Service\n{\n\n    public class MyAidlImpl extends IMyAidlInterface.Stub\n    {\n        @Override\n        public int add(int value1, int value2) throws RemoteException {\n            return value1 + value2;\n        }\n\n        @Override\n        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException {\n\n        }\n    }\n\n    @Nullable\n    @Override\n    public IBinder onBind(Intent intent) {\n        return new MyAidlImpl();\n    }\n}\n{% endcodeblock %}\n\n6.注册AIDLService,在AndroidManifest里面加入\n{% codeblock %}\n<service android:name=\"jackleeforce.aidlserver.AIDLService\"\n            android:exported=\"true\">\n</service>\n{% endcodeblock %}\n\nServer端口开发到此结束，实际上就三步，新增AIDL文件，然后创建绑定服务，在服务内实现我们要对外暴露的接口，然后注册服务，大家注意注册服务时我们写的name值，后面要用到，android:exported=\"true\"表示导出这个服务接口。接下来我们实现客户端。\n\n### Client端实现\n1.建立一个工程，命名:AIDLClient\n2.把刚才在AIDLServer工程里面建的IMyAidlInterface.aidl文件拷贝过来，这里注意包名，一定要跟Server端的一致，可以直接从AIDLServer文件夹里面连同AIDL目录一起拷过来，然后在AS里面刷新一下文件就出现了,如图4:\n{% asset_img AIDL_Client_File.png [图4] %}\n3.我们刚才在服务端定义了一个add计算两个数字和的接口，现在在客户端要使用这个接口，为了演示，这里做个简单计算器好了，MainActivity布局文件如下：\n\n{% codeblock %}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:padding=\"16dp\"\n    tools:context=\".MainActivity\">\n\n    <EditText\n        android:id=\"@+id/et_a\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:inputType=\"number\"\n        android:gravity=\"center_horizontal\" />\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"+\" />\n\n    <EditText\n        android:id=\"@+id/et_b\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:inputType=\"number\"\n        android:gravity=\"center_horizontal\" />\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"=\" />\n\n    <EditText\n        android:id=\"@+id/et_result\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:enabled=\"false\"\n        android:gravity=\"center_horizontal\" />\n\n    <Button\n        android:id=\"@+id/calculate\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:onClick=\"onCalculate\"\n        android:text=\"计算\" />\n</LinearLayout>\n{% endcodeblock%}\n\nMainActivity.java代码如下：\n\n{% codeblock %}\npackage jackleeforce.aidlclient;\n\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.ServiceConnection;\nimport android.os.IBinder;\nimport android.os.RemoteException;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\nimport jackleeforce.aidlserver.IMyAidlInterface;\n\n\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener {\n\n    private EditText et_a;\n    private EditText et_b;\n    private EditText et_result;\n    private Button btn_calc;\n    private IMyAidlInterface mService;\n    private AddServiceConnect mServiceConnect;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        initUI();\n\n        connectService();\n\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n\n        releaseService();\n    }\n\n    private void initUI()\n    {\n        et_a = (EditText)findViewById(R.id.et_a);\n        et_b = (EditText)findViewById(R.id.et_b);\n        et_result = (EditText)findViewById(R.id.et_result);\n        btn_calc = (Button)findViewById(R.id.calculate);\n\n        btn_calc.setOnClickListener(this);\n    }\n\n    @Override\n    public void onClick(View v) {\n        switch (v.getId())\n        {\n            case R.id.calculate:\n                calc();\n                break;\n            default:\n                break;\n\n        }\n    }\n\n    private void calc()\n    {\n        int a = Integer.parseInt(et_a.getText().toString());\n        int b = Integer.parseInt(et_b.getText().toString());\n\n        try\n        {\n            int result = mService.add(a, b);\n\n            et_result.setText(String.valueOf(result));\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }\n\n    class AddServiceConnect implements ServiceConnection\n    {\n        @Override\n        public void onServiceConnected(ComponentName name, IBinder service) {\n            mService = IMyAidlInterface.Stub.asInterface(service);\n\n            Toast.makeText(MainActivity.this,\"onServiceConnected\",Toast.LENGTH_LONG).show();\n        }\n\n        @Override\n        public void onServiceDisconnected(ComponentName name) {\n            mService = null;\n\n            Toast.makeText(MainActivity.this,\"onServiceDisconnected\",Toast.LENGTH_LONG).show();\n        }\n    }\n\n    public void connectService()\n    {\n        mServiceConnect = new AddServiceConnect();\n        Intent i = new Intent();\n\n        i.setComponent(new ComponentName(\"jackleeforce.aidlserver\",\"jackleeforce.aidlserver.AIDLService\"));\n        i.setPackage(getPackageName());\n\n        boolean result = getApplicationContext().bindService(i,mServiceConnect, Context.BIND_AUTO_CREATE);\n        if (!result)\n        {\n            Toast.makeText(MainActivity.this,\"bindService failed\",Toast.LENGTH_LONG).show();\n        }\n    }\n\n    public void releaseService()\n    {\n        unbindService(mServiceConnect);\n        mServiceConnect = null;\n    }\n}\n{% endcodeblock %}\n\n可以看到MainActivity起来的时候调用我们实现的connectService去连接服务端提供的服务，咱们看一下上面的connectService函数，第104行创建一个AddServiceConnect对象，从85行可以看到AddServiceConnect是一个内部类，实现了ServiceConnection接口，一看重载的两个方法名字就能明白，这是一个回调接口，当服务成功连接上了会调用onServiceConnected方法，89行我在onServiceConnected方法中，将返回的Binder对象转换成AIDL接口，以后就可以通过这个AIDL接口去调用服务端暴露出来的Service（在服务端实现的add）。当服务端因异常或者主动断开后，会执行onServiceDisConnected方法，表示已经断开连接。\n接下来再回到connectService函数，第105行创建了一个Intent对象，接下来107和108两行代码非常关键，可以说是一个大坑，照着网络上大部分博文学习AIDL，最后无法成功绑定服务就是因为写错，107行设置Intent对象的ComponentName，第一个参数服务端的包名，第二个参数服务端暴露的Service名字,也就是前面实现服务端代码时在AndroidManifest里面注册的Service Name，这里是jackleeforce.aidlserver.AIDLService，由于Andorid 5.0以后不允许使用匿名Intent对象，这里在108行通过setPackage方法设置包名。然后在110行通过bindService函数去绑定服务。\n\n到这里我们Server端与Client端代码都实现完成了，这里总结一下：\n服务端\n1.定义AIDL文件。\n2.定义要暴露的的Service，并在里面实现AIDL文件中声明的方法。\n3.注册Service，明确Service Name，并将Service声明成Export。\n\n客户端\n1.引入AIDL文件。\n2.通过bindService函数去绑定服务端暴露的Service,系统会通过我们指定的Service Name找到这个Service，成功连接了以后会返回一个Binder对象，我们要用Stub.asInterface将这个Binder对象转换成我们需要的AIDL对象，这个AIDL对象的类实现代码就是系统自动为我们引入的AIDL文件生成的JAVA文件。\n3.有了AIDL对象，我们就可以调用里面暴露的接口了。\n\n分别编译运行AIDLServer与AIDLClient,我这里实现的例子中要先运行AIDLServer与AIDLClient，效果如图：\n{% asset_img Result.gif [最终效果] %}\n\n以上就是AIDL的基本使用知识，接下来我将专门写一篇文章讲诉如何通过AIDL传递复杂对象，并通过AIDL模拟实现QQ社交登陆SDK。\n\n本文中的两个工程例子在此：https://github.com/lijiahua/AIDL_Test\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/详解Android利用AIDL实现进程间通信.md","raw":"---\ntitle: 详解Android利用AIDL实现进程间通信\ndate: 2016-08-30 17:11:53\ncategories: Android Development\ntags: Android,AIDL,进程间通信,技术\n\n---\n\n## 什么是AIDL？\nAIDL是 Android Interface definition language的缩写，是Android的一种接口定义语言。通过它我们可以定义在Android上实现进程间通信的接口,在ADT和AS中会自动为我们写好的AIDL文件生成JAVA代码。\n在Android中，为了实现进程间访问需要把复杂对象分解成操作系统可以理解的基本数据类型，在跨过进程边界后再组合成对象，实现组合成对象的代码单调又难于开发，好在Android为我们提供了AIDL处理这些功能。\n\n## 什么场合下用AIDL？\n直接看官方指南:https://developer.android.com/guide/components/aidl.html的这段话：\n\n```\nNote: Using AIDL is necessary only if you allow clients from different applications \nto access your service for IPC and want to handle multithreading in your service. \nIf you do not need to perform concurrent IPC across different applications, you \nshould create your interface by implementing a Binder or, if you want to perform \nIPC, but do not need to handle multithreading, implement your interface using a \nMessenger.\n```\n只有在你允许多个应用程序访问你提供的服务进行进程间通信，并且在提供的服务中涉及到多线程处理的时候才需要使用到AIDL。如果你无需处理多应用并发通信，你应该采用Binder进行进程间通信。如果你实现的进程间通信未涉及多线程处理，你需要采用Messenger进行进程间通信。\n一般适用于为其它应用程序提供公共服务的Service，这种Service即为系统常驻的Service(如：天气服务，日历服务等)。\n\n## 选择AIDL进行进程间通信有什么优缺点?\n优点:\n1.AIDL有自己的独立进程，不会受到其它进程的影响；\n2.可以被其它进程复用，提供公共服务；\n3.具有很高的灵活性。\n4.相比Messenger,可以传输的数据量大。\n缺点:\n1.相对普通服务，占用系统资源较多，使用AIDL进行IPC也相对麻烦。\n\n## AIDL如何使用？\n既然用AIDL的最终目标是进行不同进程间通信，那这里咱们搞两个APP，一个Server,提供一个Service，用来对传入的参数做加法运算，另外一个Client,调用Server提供的Service。\n\n### Server端实现\n1.建立一个工程，命名:AIDLServer\n2.新建AIDL文件,命名:IMyAidlInterface\n{% asset_img Create_AIDL_File.png [图1] %}\n3.生成后如图2，可以看到自动帮我们生成了一个函数basicTypes，示范了我们可以在AIDL里面使用的基本数据类型，这些类型可以当做参数或者函数返回值，这个函数我们没用到，不用理会，我们新增一个自己的函数add,AIDL文件创建到此结束。\n{% asset_img AIDL_File.png [图2] %}\n4.我们前面提到过，ADT和AS会自动为我们写的AIDL文件生成JAVA代码，这篇文章里面我用的AS，我们点击{% asset_img SYNC.png %}，然后在app/build/generated/source/aidl/debug/包名下可以看到自动生成的IMyAidlInterface.java,不过实际上这个文件我们不会去动它。如图3：\n{% asset_img AIDL_JAVA_File.png [图3] %}\n5.创建Service提供服务，AIDL涉及到IPC通信，所以需要使用绑定服务,在这里我们创建了一个内部类MyAidlImpl继承我们前面写的IMyAidlInterface，并实现了add函数，然后在onBind函数里面返回匿名MyAidlImpl实例。\n\n{% codeblock %}\npackage jackleeforce.aidlserver;\nimport android.app.Service;\nimport android.content.Intent;\nimport android.os.IBinder;\nimport android.os.RemoteException;\nimport android.support.annotation.Nullable;\n\npublic class AIDLService extends Service\n{\n\n    public class MyAidlImpl extends IMyAidlInterface.Stub\n    {\n        @Override\n        public int add(int value1, int value2) throws RemoteException {\n            return value1 + value2;\n        }\n\n        @Override\n        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException {\n\n        }\n    }\n\n    @Nullable\n    @Override\n    public IBinder onBind(Intent intent) {\n        return new MyAidlImpl();\n    }\n}\n{% endcodeblock %}\n\n6.注册AIDLService,在AndroidManifest里面加入\n{% codeblock %}\n<service android:name=\"jackleeforce.aidlserver.AIDLService\"\n            android:exported=\"true\">\n</service>\n{% endcodeblock %}\n\nServer端口开发到此结束，实际上就三步，新增AIDL文件，然后创建绑定服务，在服务内实现我们要对外暴露的接口，然后注册服务，大家注意注册服务时我们写的name值，后面要用到，android:exported=\"true\"表示导出这个服务接口。接下来我们实现客户端。\n\n### Client端实现\n1.建立一个工程，命名:AIDLClient\n2.把刚才在AIDLServer工程里面建的IMyAidlInterface.aidl文件拷贝过来，这里注意包名，一定要跟Server端的一致，可以直接从AIDLServer文件夹里面连同AIDL目录一起拷过来，然后在AS里面刷新一下文件就出现了,如图4:\n{% asset_img AIDL_Client_File.png [图4] %}\n3.我们刚才在服务端定义了一个add计算两个数字和的接口，现在在客户端要使用这个接口，为了演示，这里做个简单计算器好了，MainActivity布局文件如下：\n\n{% codeblock %}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:padding=\"16dp\"\n    tools:context=\".MainActivity\">\n\n    <EditText\n        android:id=\"@+id/et_a\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:inputType=\"number\"\n        android:gravity=\"center_horizontal\" />\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"+\" />\n\n    <EditText\n        android:id=\"@+id/et_b\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:inputType=\"number\"\n        android:gravity=\"center_horizontal\" />\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"=\" />\n\n    <EditText\n        android:id=\"@+id/et_result\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:enabled=\"false\"\n        android:gravity=\"center_horizontal\" />\n\n    <Button\n        android:id=\"@+id/calculate\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:onClick=\"onCalculate\"\n        android:text=\"计算\" />\n</LinearLayout>\n{% endcodeblock%}\n\nMainActivity.java代码如下：\n\n{% codeblock %}\npackage jackleeforce.aidlclient;\n\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.ServiceConnection;\nimport android.os.IBinder;\nimport android.os.RemoteException;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\nimport jackleeforce.aidlserver.IMyAidlInterface;\n\n\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener {\n\n    private EditText et_a;\n    private EditText et_b;\n    private EditText et_result;\n    private Button btn_calc;\n    private IMyAidlInterface mService;\n    private AddServiceConnect mServiceConnect;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        initUI();\n\n        connectService();\n\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n\n        releaseService();\n    }\n\n    private void initUI()\n    {\n        et_a = (EditText)findViewById(R.id.et_a);\n        et_b = (EditText)findViewById(R.id.et_b);\n        et_result = (EditText)findViewById(R.id.et_result);\n        btn_calc = (Button)findViewById(R.id.calculate);\n\n        btn_calc.setOnClickListener(this);\n    }\n\n    @Override\n    public void onClick(View v) {\n        switch (v.getId())\n        {\n            case R.id.calculate:\n                calc();\n                break;\n            default:\n                break;\n\n        }\n    }\n\n    private void calc()\n    {\n        int a = Integer.parseInt(et_a.getText().toString());\n        int b = Integer.parseInt(et_b.getText().toString());\n\n        try\n        {\n            int result = mService.add(a, b);\n\n            et_result.setText(String.valueOf(result));\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }\n\n    class AddServiceConnect implements ServiceConnection\n    {\n        @Override\n        public void onServiceConnected(ComponentName name, IBinder service) {\n            mService = IMyAidlInterface.Stub.asInterface(service);\n\n            Toast.makeText(MainActivity.this,\"onServiceConnected\",Toast.LENGTH_LONG).show();\n        }\n\n        @Override\n        public void onServiceDisconnected(ComponentName name) {\n            mService = null;\n\n            Toast.makeText(MainActivity.this,\"onServiceDisconnected\",Toast.LENGTH_LONG).show();\n        }\n    }\n\n    public void connectService()\n    {\n        mServiceConnect = new AddServiceConnect();\n        Intent i = new Intent();\n\n        i.setComponent(new ComponentName(\"jackleeforce.aidlserver\",\"jackleeforce.aidlserver.AIDLService\"));\n        i.setPackage(getPackageName());\n\n        boolean result = getApplicationContext().bindService(i,mServiceConnect, Context.BIND_AUTO_CREATE);\n        if (!result)\n        {\n            Toast.makeText(MainActivity.this,\"bindService failed\",Toast.LENGTH_LONG).show();\n        }\n    }\n\n    public void releaseService()\n    {\n        unbindService(mServiceConnect);\n        mServiceConnect = null;\n    }\n}\n{% endcodeblock %}\n\n可以看到MainActivity起来的时候调用我们实现的connectService去连接服务端提供的服务，咱们看一下上面的connectService函数，第104行创建一个AddServiceConnect对象，从85行可以看到AddServiceConnect是一个内部类，实现了ServiceConnection接口，一看重载的两个方法名字就能明白，这是一个回调接口，当服务成功连接上了会调用onServiceConnected方法，89行我在onServiceConnected方法中，将返回的Binder对象转换成AIDL接口，以后就可以通过这个AIDL接口去调用服务端暴露出来的Service（在服务端实现的add）。当服务端因异常或者主动断开后，会执行onServiceDisConnected方法，表示已经断开连接。\n接下来再回到connectService函数，第105行创建了一个Intent对象，接下来107和108两行代码非常关键，可以说是一个大坑，照着网络上大部分博文学习AIDL，最后无法成功绑定服务就是因为写错，107行设置Intent对象的ComponentName，第一个参数服务端的包名，第二个参数服务端暴露的Service名字,也就是前面实现服务端代码时在AndroidManifest里面注册的Service Name，这里是jackleeforce.aidlserver.AIDLService，由于Andorid 5.0以后不允许使用匿名Intent对象，这里在108行通过setPackage方法设置包名。然后在110行通过bindService函数去绑定服务。\n\n到这里我们Server端与Client端代码都实现完成了，这里总结一下：\n服务端\n1.定义AIDL文件。\n2.定义要暴露的的Service，并在里面实现AIDL文件中声明的方法。\n3.注册Service，明确Service Name，并将Service声明成Export。\n\n客户端\n1.引入AIDL文件。\n2.通过bindService函数去绑定服务端暴露的Service,系统会通过我们指定的Service Name找到这个Service，成功连接了以后会返回一个Binder对象，我们要用Stub.asInterface将这个Binder对象转换成我们需要的AIDL对象，这个AIDL对象的类实现代码就是系统自动为我们引入的AIDL文件生成的JAVA文件。\n3.有了AIDL对象，我们就可以调用里面暴露的接口了。\n\n分别编译运行AIDLServer与AIDLClient,我这里实现的例子中要先运行AIDLServer与AIDLClient，效果如图：\n{% asset_img Result.gif [最终效果] %}\n\n以上就是AIDL的基本使用知识，接下来我将专门写一篇文章讲诉如何通过AIDL传递复杂对象，并通过AIDL模拟实现QQ社交登陆SDK。\n\n本文中的两个工程例子在此：https://github.com/lijiahua/AIDL_Test\n\n\n\n\n\n\n\n\n\n\n\n","slug":"详解Android利用AIDL实现进程间通信","published":1,"updated":"2018-10-12T01:33:54.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrbok4n80002l32v6d64zfwf","content":"<h2 id=\"什么是AIDL？\"><a href=\"#什么是AIDL？\" class=\"headerlink\" title=\"什么是AIDL？\"></a>什么是AIDL？</h2><p>AIDL是 Android Interface definition language的缩写，是Android的一种接口定义语言。通过它我们可以定义在Android上实现进程间通信的接口,在ADT和AS中会自动为我们写好的AIDL文件生成JAVA代码。<br>在Android中，为了实现进程间访问需要把复杂对象分解成操作系统可以理解的基本数据类型，在跨过进程边界后再组合成对象，实现组合成对象的代码单调又难于开发，好在Android为我们提供了AIDL处理这些功能。</p>\n<h2 id=\"什么场合下用AIDL？\"><a href=\"#什么场合下用AIDL？\" class=\"headerlink\" title=\"什么场合下用AIDL？\"></a>什么场合下用AIDL？</h2><p>直接看官方指南:<a href=\"https://developer.android.com/guide/components/aidl.html的这段话：\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/guide/components/aidl.html的这段话：</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Note: Using AIDL is necessary only if you allow clients from different applications </span><br><span class=\"line\">to access your service for IPC and want to handle multithreading in your service. </span><br><span class=\"line\">If you do not need to perform concurrent IPC across different applications, you </span><br><span class=\"line\">should create your interface by implementing a Binder or, if you want to perform </span><br><span class=\"line\">IPC, but do not need to handle multithreading, implement your interface using a </span><br><span class=\"line\">Messenger.</span><br></pre></td></tr></table></figure>\n<p>只有在你允许多个应用程序访问你提供的服务进行进程间通信，并且在提供的服务中涉及到多线程处理的时候才需要使用到AIDL。如果你无需处理多应用并发通信，你应该采用Binder进行进程间通信。如果你实现的进程间通信未涉及多线程处理，你需要采用Messenger进行进程间通信。<br>一般适用于为其它应用程序提供公共服务的Service，这种Service即为系统常驻的Service(如：天气服务，日历服务等)。</p>\n<h2 id=\"选择AIDL进行进程间通信有什么优缺点\"><a href=\"#选择AIDL进行进程间通信有什么优缺点\" class=\"headerlink\" title=\"选择AIDL进行进程间通信有什么优缺点?\"></a>选择AIDL进行进程间通信有什么优缺点?</h2><p>优点:<br>1.AIDL有自己的独立进程，不会受到其它进程的影响；<br>2.可以被其它进程复用，提供公共服务；<br>3.具有很高的灵活性。<br>4.相比Messenger,可以传输的数据量大。<br>缺点:<br>1.相对普通服务，占用系统资源较多，使用AIDL进行IPC也相对麻烦。</p>\n<h2 id=\"AIDL如何使用？\"><a href=\"#AIDL如何使用？\" class=\"headerlink\" title=\"AIDL如何使用？\"></a>AIDL如何使用？</h2><p>既然用AIDL的最终目标是进行不同进程间通信，那这里咱们搞两个APP，一个Server,提供一个Service，用来对传入的参数做加法运算，另外一个Client,调用Server提供的Service。</p>\n<h3 id=\"Server端实现\"><a href=\"#Server端实现\" class=\"headerlink\" title=\"Server端实现\"></a>Server端实现</h3><p>1.建立一个工程，命名:AIDLServer<br>2.新建AIDL文件,命名:IMyAidlInterface<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/Create_AIDL_File.png\" title=\"[图1]\"><br>3.生成后如图2，可以看到自动帮我们生成了一个函数basicTypes，示范了我们可以在AIDL里面使用的基本数据类型，这些类型可以当做参数或者函数返回值，这个函数我们没用到，不用理会，我们新增一个自己的函数add,AIDL文件创建到此结束。<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_File.png\" title=\"[图2]\"><br>4.我们前面提到过，ADT和AS会自动为我们写的AIDL文件生成JAVA代码，这篇文章里面我用的AS，我们点击<img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/SYNC.png\">，然后在app/build/generated/source/aidl/debug/包名下可以看到自动生成的IMyAidlInterface.java,不过实际上这个文件我们不会去动它。如图3：<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_JAVA_File.png\" title=\"[图3]\"><br>5.创建Service提供服务，AIDL涉及到IPC通信，所以需要使用绑定服务,在这里我们创建了一个内部类MyAidlImpl继承我们前面写的IMyAidlInterface，并实现了add函数，然后在onBind函数里面返回匿名MyAidlImpl实例。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package jackleeforce.aidlserver;</span><br><span class=\"line\">import android.app.Service;</span><br><span class=\"line\">import android.content.Intent;</span><br><span class=\"line\">import android.os.IBinder;</span><br><span class=\"line\">import android.os.RemoteException;</span><br><span class=\"line\">import android.support.annotation.Nullable;</span><br><span class=\"line\"></span><br><span class=\"line\">public class AIDLService extends Service</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public class MyAidlImpl extends IMyAidlInterface.Stub</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public int add(int value1, int value2) throws RemoteException &#123;</span><br><span class=\"line\">            return value1 + value2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Nullable</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public IBinder onBind(Intent intent) &#123;</span><br><span class=\"line\">        return new MyAidlImpl();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6.注册AIDLService,在AndroidManifest里面加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;service android:name=&quot;jackleeforce.aidlserver.AIDLService&quot;</span><br><span class=\"line\">            android:exported=&quot;true&quot;&gt;</span><br><span class=\"line\">&lt;/service&gt;</span><br></pre></td></tr></table></figure></p>\n<p>Server端口开发到此结束，实际上就三步，新增AIDL文件，然后创建绑定服务，在服务内实现我们要对外暴露的接口，然后注册服务，大家注意注册服务时我们写的name值，后面要用到，android:exported=”true”表示导出这个服务接口。接下来我们实现客户端。</p>\n<h3 id=\"Client端实现\"><a href=\"#Client端实现\" class=\"headerlink\" title=\"Client端实现\"></a>Client端实现</h3><p>1.建立一个工程，命名:AIDLClient<br>2.把刚才在AIDLServer工程里面建的IMyAidlInterface.aidl文件拷贝过来，这里注意包名，一定要跟Server端的一致，可以直接从AIDLServer文件夹里面连同AIDL目录一起拷过来，然后在AS里面刷新一下文件就出现了,如图4:<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_Client_File.png\" title=\"[图4]\"><br>3.我们刚才在服务端定义了一个add计算两个数字和的接口，现在在客户端要使用这个接口，为了演示，这里做个简单计算器好了，MainActivity布局文件如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:padding=&quot;16dp&quot;</span><br><span class=\"line\">    tools:context=&quot;.MainActivity&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;EditText</span><br><span class=\"line\">        android:id=&quot;@+id/et_a&quot;</span><br><span class=\"line\">        android:layout_width=&quot;0dp&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">        android:inputType=&quot;number&quot;</span><br><span class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;+&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;EditText</span><br><span class=\"line\">        android:id=&quot;@+id/et_b&quot;</span><br><span class=\"line\">        android:layout_width=&quot;0dp&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">        android:inputType=&quot;number&quot;</span><br><span class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;=&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;EditText</span><br><span class=\"line\">        android:id=&quot;@+id/et_result&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">        android:enabled=&quot;false&quot;</span><br><span class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/calculate&quot;</span><br><span class=\"line\">        android:layout_width=&quot;0dp&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">        android:onClick=&quot;onCalculate&quot;</span><br><span class=\"line\">        android:text=&quot;计算&quot; /&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>MainActivity.java代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package jackleeforce.aidlclient;</span><br><span class=\"line\"></span><br><span class=\"line\">import android.content.ComponentName;</span><br><span class=\"line\">import android.content.Context;</span><br><span class=\"line\">import android.content.Intent;</span><br><span class=\"line\">import android.content.ServiceConnection;</span><br><span class=\"line\">import android.os.IBinder;</span><br><span class=\"line\">import android.os.RemoteException;</span><br><span class=\"line\">import android.support.v7.app.AppCompatActivity;</span><br><span class=\"line\">import android.os.Bundle;</span><br><span class=\"line\">import android.view.View;</span><br><span class=\"line\">import android.widget.Button;</span><br><span class=\"line\">import android.widget.EditText;</span><br><span class=\"line\">import android.widget.Toast;</span><br><span class=\"line\">import jackleeforce.aidlserver.IMyAidlInterface;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private EditText et_a;</span><br><span class=\"line\">    private EditText et_b;</span><br><span class=\"line\">    private EditText et_result;</span><br><span class=\"line\">    private Button btn_calc;</span><br><span class=\"line\">    private IMyAidlInterface mService;</span><br><span class=\"line\">    private AddServiceConnect mServiceConnect;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">        initUI();</span><br><span class=\"line\"></span><br><span class=\"line\">        connectService();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onDestroy() &#123;</span><br><span class=\"line\">        super.onDestroy();</span><br><span class=\"line\"></span><br><span class=\"line\">        releaseService();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private void initUI()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        et_a = (EditText)findViewById(R.id.et_a);</span><br><span class=\"line\">        et_b = (EditText)findViewById(R.id.et_b);</span><br><span class=\"line\">        et_result = (EditText)findViewById(R.id.et_result);</span><br><span class=\"line\">        btn_calc = (Button)findViewById(R.id.calculate);</span><br><span class=\"line\"></span><br><span class=\"line\">        btn_calc.setOnClickListener(this);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void onClick(View v) &#123;</span><br><span class=\"line\">        switch (v.getId())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case R.id.calculate:</span><br><span class=\"line\">                calc();</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            default:</span><br><span class=\"line\">                break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private void calc()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int a = Integer.parseInt(et_a.getText().toString());</span><br><span class=\"line\">        int b = Integer.parseInt(et_b.getText().toString());</span><br><span class=\"line\"></span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            int result = mService.add(a, b);</span><br><span class=\"line\"></span><br><span class=\"line\">            et_result.setText(String.valueOf(result));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (Exception e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    class AddServiceConnect implements ServiceConnection</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public void onServiceConnected(ComponentName name, IBinder service) &#123;</span><br><span class=\"line\">            mService = IMyAidlInterface.Stub.asInterface(service);</span><br><span class=\"line\"></span><br><span class=\"line\">            Toast.makeText(MainActivity.this,&quot;onServiceConnected&quot;,Toast.LENGTH_LONG).show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public void onServiceDisconnected(ComponentName name) &#123;</span><br><span class=\"line\">            mService = null;</span><br><span class=\"line\"></span><br><span class=\"line\">            Toast.makeText(MainActivity.this,&quot;onServiceDisconnected&quot;,Toast.LENGTH_LONG).show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void connectService()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mServiceConnect = new AddServiceConnect();</span><br><span class=\"line\">        Intent i = new Intent();</span><br><span class=\"line\"></span><br><span class=\"line\">        i.setComponent(new ComponentName(&quot;jackleeforce.aidlserver&quot;,&quot;jackleeforce.aidlserver.AIDLService&quot;));</span><br><span class=\"line\">        i.setPackage(getPackageName());</span><br><span class=\"line\"></span><br><span class=\"line\">        boolean result = getApplicationContext().bindService(i,mServiceConnect, Context.BIND_AUTO_CREATE);</span><br><span class=\"line\">        if (!result)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Toast.makeText(MainActivity.this,&quot;bindService failed&quot;,Toast.LENGTH_LONG).show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void releaseService()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        unbindService(mServiceConnect);</span><br><span class=\"line\">        mServiceConnect = null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到MainActivity起来的时候调用我们实现的connectService去连接服务端提供的服务，咱们看一下上面的connectService函数，第104行创建一个AddServiceConnect对象，从85行可以看到AddServiceConnect是一个内部类，实现了ServiceConnection接口，一看重载的两个方法名字就能明白，这是一个回调接口，当服务成功连接上了会调用onServiceConnected方法，89行我在onServiceConnected方法中，将返回的Binder对象转换成AIDL接口，以后就可以通过这个AIDL接口去调用服务端暴露出来的Service（在服务端实现的add）。当服务端因异常或者主动断开后，会执行onServiceDisConnected方法，表示已经断开连接。<br>接下来再回到connectService函数，第105行创建了一个Intent对象，接下来107和108两行代码非常关键，可以说是一个大坑，照着网络上大部分博文学习AIDL，最后无法成功绑定服务就是因为写错，107行设置Intent对象的ComponentName，第一个参数服务端的包名，第二个参数服务端暴露的Service名字,也就是前面实现服务端代码时在AndroidManifest里面注册的Service Name，这里是jackleeforce.aidlserver.AIDLService，由于Andorid 5.0以后不允许使用匿名Intent对象，这里在108行通过setPackage方法设置包名。然后在110行通过bindService函数去绑定服务。</p>\n<p>到这里我们Server端与Client端代码都实现完成了，这里总结一下：<br>服务端<br>1.定义AIDL文件。<br>2.定义要暴露的的Service，并在里面实现AIDL文件中声明的方法。<br>3.注册Service，明确Service Name，并将Service声明成Export。</p>\n<p>客户端<br>1.引入AIDL文件。<br>2.通过bindService函数去绑定服务端暴露的Service,系统会通过我们指定的Service Name找到这个Service，成功连接了以后会返回一个Binder对象，我们要用Stub.asInterface将这个Binder对象转换成我们需要的AIDL对象，这个AIDL对象的类实现代码就是系统自动为我们引入的AIDL文件生成的JAVA文件。<br>3.有了AIDL对象，我们就可以调用里面暴露的接口了。</p>\n<p>分别编译运行AIDLServer与AIDLClient,我这里实现的例子中要先运行AIDLServer与AIDLClient，效果如图：<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/Result.gif\" title=\"[最终效果]\"></p>\n<p>以上就是AIDL的基本使用知识，接下来我将专门写一篇文章讲诉如何通过AIDL传递复杂对象，并通过AIDL模拟实现QQ社交登陆SDK。</p>\n<p>本文中的两个工程例子在此：<a href=\"https://github.com/lijiahua/AIDL_Test\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiahua/AIDL_Test</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是AIDL？\"><a href=\"#什么是AIDL？\" class=\"headerlink\" title=\"什么是AIDL？\"></a>什么是AIDL？</h2><p>AIDL是 Android Interface definition language的缩写，是Android的一种接口定义语言。通过它我们可以定义在Android上实现进程间通信的接口,在ADT和AS中会自动为我们写好的AIDL文件生成JAVA代码。<br>在Android中，为了实现进程间访问需要把复杂对象分解成操作系统可以理解的基本数据类型，在跨过进程边界后再组合成对象，实现组合成对象的代码单调又难于开发，好在Android为我们提供了AIDL处理这些功能。</p>\n<h2 id=\"什么场合下用AIDL？\"><a href=\"#什么场合下用AIDL？\" class=\"headerlink\" title=\"什么场合下用AIDL？\"></a>什么场合下用AIDL？</h2><p>直接看官方指南:<a href=\"https://developer.android.com/guide/components/aidl.html的这段话：\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/guide/components/aidl.html的这段话：</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Note: Using AIDL is necessary only if you allow clients from different applications </span><br><span class=\"line\">to access your service for IPC and want to handle multithreading in your service. </span><br><span class=\"line\">If you do not need to perform concurrent IPC across different applications, you </span><br><span class=\"line\">should create your interface by implementing a Binder or, if you want to perform </span><br><span class=\"line\">IPC, but do not need to handle multithreading, implement your interface using a </span><br><span class=\"line\">Messenger.</span><br></pre></td></tr></table></figure>\n<p>只有在你允许多个应用程序访问你提供的服务进行进程间通信，并且在提供的服务中涉及到多线程处理的时候才需要使用到AIDL。如果你无需处理多应用并发通信，你应该采用Binder进行进程间通信。如果你实现的进程间通信未涉及多线程处理，你需要采用Messenger进行进程间通信。<br>一般适用于为其它应用程序提供公共服务的Service，这种Service即为系统常驻的Service(如：天气服务，日历服务等)。</p>\n<h2 id=\"选择AIDL进行进程间通信有什么优缺点\"><a href=\"#选择AIDL进行进程间通信有什么优缺点\" class=\"headerlink\" title=\"选择AIDL进行进程间通信有什么优缺点?\"></a>选择AIDL进行进程间通信有什么优缺点?</h2><p>优点:<br>1.AIDL有自己的独立进程，不会受到其它进程的影响；<br>2.可以被其它进程复用，提供公共服务；<br>3.具有很高的灵活性。<br>4.相比Messenger,可以传输的数据量大。<br>缺点:<br>1.相对普通服务，占用系统资源较多，使用AIDL进行IPC也相对麻烦。</p>\n<h2 id=\"AIDL如何使用？\"><a href=\"#AIDL如何使用？\" class=\"headerlink\" title=\"AIDL如何使用？\"></a>AIDL如何使用？</h2><p>既然用AIDL的最终目标是进行不同进程间通信，那这里咱们搞两个APP，一个Server,提供一个Service，用来对传入的参数做加法运算，另外一个Client,调用Server提供的Service。</p>\n<h3 id=\"Server端实现\"><a href=\"#Server端实现\" class=\"headerlink\" title=\"Server端实现\"></a>Server端实现</h3><p>1.建立一个工程，命名:AIDLServer<br>2.新建AIDL文件,命名:IMyAidlInterface<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/Create_AIDL_File.png\" title=\"[图1]\"><br>3.生成后如图2，可以看到自动帮我们生成了一个函数basicTypes，示范了我们可以在AIDL里面使用的基本数据类型，这些类型可以当做参数或者函数返回值，这个函数我们没用到，不用理会，我们新增一个自己的函数add,AIDL文件创建到此结束。<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_File.png\" title=\"[图2]\"><br>4.我们前面提到过，ADT和AS会自动为我们写的AIDL文件生成JAVA代码，这篇文章里面我用的AS，我们点击<img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/SYNC.png\">，然后在app/build/generated/source/aidl/debug/包名下可以看到自动生成的IMyAidlInterface.java,不过实际上这个文件我们不会去动它。如图3：<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_JAVA_File.png\" title=\"[图3]\"><br>5.创建Service提供服务，AIDL涉及到IPC通信，所以需要使用绑定服务,在这里我们创建了一个内部类MyAidlImpl继承我们前面写的IMyAidlInterface，并实现了add函数，然后在onBind函数里面返回匿名MyAidlImpl实例。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package jackleeforce.aidlserver;</span><br><span class=\"line\">import android.app.Service;</span><br><span class=\"line\">import android.content.Intent;</span><br><span class=\"line\">import android.os.IBinder;</span><br><span class=\"line\">import android.os.RemoteException;</span><br><span class=\"line\">import android.support.annotation.Nullable;</span><br><span class=\"line\"></span><br><span class=\"line\">public class AIDLService extends Service</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public class MyAidlImpl extends IMyAidlInterface.Stub</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public int add(int value1, int value2) throws RemoteException &#123;</span><br><span class=\"line\">            return value1 + value2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Nullable</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public IBinder onBind(Intent intent) &#123;</span><br><span class=\"line\">        return new MyAidlImpl();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6.注册AIDLService,在AndroidManifest里面加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;service android:name=&quot;jackleeforce.aidlserver.AIDLService&quot;</span><br><span class=\"line\">            android:exported=&quot;true&quot;&gt;</span><br><span class=\"line\">&lt;/service&gt;</span><br></pre></td></tr></table></figure></p>\n<p>Server端口开发到此结束，实际上就三步，新增AIDL文件，然后创建绑定服务，在服务内实现我们要对外暴露的接口，然后注册服务，大家注意注册服务时我们写的name值，后面要用到，android:exported=”true”表示导出这个服务接口。接下来我们实现客户端。</p>\n<h3 id=\"Client端实现\"><a href=\"#Client端实现\" class=\"headerlink\" title=\"Client端实现\"></a>Client端实现</h3><p>1.建立一个工程，命名:AIDLClient<br>2.把刚才在AIDLServer工程里面建的IMyAidlInterface.aidl文件拷贝过来，这里注意包名，一定要跟Server端的一致，可以直接从AIDLServer文件夹里面连同AIDL目录一起拷过来，然后在AS里面刷新一下文件就出现了,如图4:<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/AIDL_Client_File.png\" title=\"[图4]\"><br>3.我们刚才在服务端定义了一个add计算两个数字和的接口，现在在客户端要使用这个接口，为了演示，这里做个简单计算器好了，MainActivity布局文件如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:padding=&quot;16dp&quot;</span><br><span class=\"line\">    tools:context=&quot;.MainActivity&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;EditText</span><br><span class=\"line\">        android:id=&quot;@+id/et_a&quot;</span><br><span class=\"line\">        android:layout_width=&quot;0dp&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">        android:inputType=&quot;number&quot;</span><br><span class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;+&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;EditText</span><br><span class=\"line\">        android:id=&quot;@+id/et_b&quot;</span><br><span class=\"line\">        android:layout_width=&quot;0dp&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">        android:inputType=&quot;number&quot;</span><br><span class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;=&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;EditText</span><br><span class=\"line\">        android:id=&quot;@+id/et_result&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">        android:enabled=&quot;false&quot;</span><br><span class=\"line\">        android:gravity=&quot;center_horizontal&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/calculate&quot;</span><br><span class=\"line\">        android:layout_width=&quot;0dp&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">        android:onClick=&quot;onCalculate&quot;</span><br><span class=\"line\">        android:text=&quot;计算&quot; /&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>MainActivity.java代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package jackleeforce.aidlclient;</span><br><span class=\"line\"></span><br><span class=\"line\">import android.content.ComponentName;</span><br><span class=\"line\">import android.content.Context;</span><br><span class=\"line\">import android.content.Intent;</span><br><span class=\"line\">import android.content.ServiceConnection;</span><br><span class=\"line\">import android.os.IBinder;</span><br><span class=\"line\">import android.os.RemoteException;</span><br><span class=\"line\">import android.support.v7.app.AppCompatActivity;</span><br><span class=\"line\">import android.os.Bundle;</span><br><span class=\"line\">import android.view.View;</span><br><span class=\"line\">import android.widget.Button;</span><br><span class=\"line\">import android.widget.EditText;</span><br><span class=\"line\">import android.widget.Toast;</span><br><span class=\"line\">import jackleeforce.aidlserver.IMyAidlInterface;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private EditText et_a;</span><br><span class=\"line\">    private EditText et_b;</span><br><span class=\"line\">    private EditText et_result;</span><br><span class=\"line\">    private Button btn_calc;</span><br><span class=\"line\">    private IMyAidlInterface mService;</span><br><span class=\"line\">    private AddServiceConnect mServiceConnect;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">        initUI();</span><br><span class=\"line\"></span><br><span class=\"line\">        connectService();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onDestroy() &#123;</span><br><span class=\"line\">        super.onDestroy();</span><br><span class=\"line\"></span><br><span class=\"line\">        releaseService();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private void initUI()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        et_a = (EditText)findViewById(R.id.et_a);</span><br><span class=\"line\">        et_b = (EditText)findViewById(R.id.et_b);</span><br><span class=\"line\">        et_result = (EditText)findViewById(R.id.et_result);</span><br><span class=\"line\">        btn_calc = (Button)findViewById(R.id.calculate);</span><br><span class=\"line\"></span><br><span class=\"line\">        btn_calc.setOnClickListener(this);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void onClick(View v) &#123;</span><br><span class=\"line\">        switch (v.getId())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case R.id.calculate:</span><br><span class=\"line\">                calc();</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            default:</span><br><span class=\"line\">                break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private void calc()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int a = Integer.parseInt(et_a.getText().toString());</span><br><span class=\"line\">        int b = Integer.parseInt(et_b.getText().toString());</span><br><span class=\"line\"></span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            int result = mService.add(a, b);</span><br><span class=\"line\"></span><br><span class=\"line\">            et_result.setText(String.valueOf(result));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (Exception e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    class AddServiceConnect implements ServiceConnection</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public void onServiceConnected(ComponentName name, IBinder service) &#123;</span><br><span class=\"line\">            mService = IMyAidlInterface.Stub.asInterface(service);</span><br><span class=\"line\"></span><br><span class=\"line\">            Toast.makeText(MainActivity.this,&quot;onServiceConnected&quot;,Toast.LENGTH_LONG).show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public void onServiceDisconnected(ComponentName name) &#123;</span><br><span class=\"line\">            mService = null;</span><br><span class=\"line\"></span><br><span class=\"line\">            Toast.makeText(MainActivity.this,&quot;onServiceDisconnected&quot;,Toast.LENGTH_LONG).show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void connectService()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mServiceConnect = new AddServiceConnect();</span><br><span class=\"line\">        Intent i = new Intent();</span><br><span class=\"line\"></span><br><span class=\"line\">        i.setComponent(new ComponentName(&quot;jackleeforce.aidlserver&quot;,&quot;jackleeforce.aidlserver.AIDLService&quot;));</span><br><span class=\"line\">        i.setPackage(getPackageName());</span><br><span class=\"line\"></span><br><span class=\"line\">        boolean result = getApplicationContext().bindService(i,mServiceConnect, Context.BIND_AUTO_CREATE);</span><br><span class=\"line\">        if (!result)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Toast.makeText(MainActivity.this,&quot;bindService failed&quot;,Toast.LENGTH_LONG).show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void releaseService()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        unbindService(mServiceConnect);</span><br><span class=\"line\">        mServiceConnect = null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到MainActivity起来的时候调用我们实现的connectService去连接服务端提供的服务，咱们看一下上面的connectService函数，第104行创建一个AddServiceConnect对象，从85行可以看到AddServiceConnect是一个内部类，实现了ServiceConnection接口，一看重载的两个方法名字就能明白，这是一个回调接口，当服务成功连接上了会调用onServiceConnected方法，89行我在onServiceConnected方法中，将返回的Binder对象转换成AIDL接口，以后就可以通过这个AIDL接口去调用服务端暴露出来的Service（在服务端实现的add）。当服务端因异常或者主动断开后，会执行onServiceDisConnected方法，表示已经断开连接。<br>接下来再回到connectService函数，第105行创建了一个Intent对象，接下来107和108两行代码非常关键，可以说是一个大坑，照着网络上大部分博文学习AIDL，最后无法成功绑定服务就是因为写错，107行设置Intent对象的ComponentName，第一个参数服务端的包名，第二个参数服务端暴露的Service名字,也就是前面实现服务端代码时在AndroidManifest里面注册的Service Name，这里是jackleeforce.aidlserver.AIDLService，由于Andorid 5.0以后不允许使用匿名Intent对象，这里在108行通过setPackage方法设置包名。然后在110行通过bindService函数去绑定服务。</p>\n<p>到这里我们Server端与Client端代码都实现完成了，这里总结一下：<br>服务端<br>1.定义AIDL文件。<br>2.定义要暴露的的Service，并在里面实现AIDL文件中声明的方法。<br>3.注册Service，明确Service Name，并将Service声明成Export。</p>\n<p>客户端<br>1.引入AIDL文件。<br>2.通过bindService函数去绑定服务端暴露的Service,系统会通过我们指定的Service Name找到这个Service，成功连接了以后会返回一个Binder对象，我们要用Stub.asInterface将这个Binder对象转换成我们需要的AIDL对象，这个AIDL对象的类实现代码就是系统自动为我们引入的AIDL文件生成的JAVA文件。<br>3.有了AIDL对象，我们就可以调用里面暴露的接口了。</p>\n<p>分别编译运行AIDLServer与AIDLClient,我这里实现的例子中要先运行AIDLServer与AIDLClient，效果如图：<br><img src=\"/2016/08/30/详解Android利用AIDL实现进程间通信/Result.gif\" title=\"[最终效果]\"></p>\n<p>以上就是AIDL的基本使用知识，接下来我将专门写一篇文章讲诉如何通过AIDL传递复杂对象，并通过AIDL模拟实现QQ社交登陆SDK。</p>\n<p>本文中的两个工程例子在此：<a href=\"https://github.com/lijiahua/AIDL_Test\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiahua/AIDL_Test</a></p>\n"},{"title":"（转载）这个时代没有怀才不遇","date":"2018-10-10T06:37:08.000Z","_content":"\n![](https://xqimg.imedao.com/16658d38d02be83fdbe00cf7.jpg)\n\n假期里Boy 的微信读者群好不热闹，大家每天都在讨论各种职场成长的深度问题。前几天有人问道：\n\n总是觉得自己怀才不遇，没人赏识自己，每天只能埋头苦干的人想要飞黄腾达出路在哪里？\n\n今天的文章，我就来聊聊这个话题。在正式开始之前，我先抛出观点：\n\n这个时代已经没有什么怀才不遇。所谓的怀才不遇，只是你的才能还不够罢了。\n\n为了清晰说明这个问题，下面我从三点来分别解释。\n\n**01**\n\n**时代大趋势**\n\n世界正变得越来越扁平。\n\n如果你留意了最近的商业经济新闻，你会发现越来越多的公司都开始强调“无边界组织”。\n\n这个概念最初来源于通用电气的CEO杰克韦尔奇，后来经过互联网时代的发展，逐渐升级变成许多大公司内部推行的一种组织架构革命。\n\n什么叫无边界组织呢？\n\n简单来说，就是企业不再按照传统的职能属性来划分部门，而是将它们糅合在一起，每个员工都可以和拥有不同技能的人在一个单元组织里共同协作，彼此之间没有边界，无障碍交流。\n\n比如产品研发，销售，传播，公关甚至是财务都被放在一起，组成一个团队，共同攻克一个项目目标。等到目标达成，这些人又被打散到其他的单元组织里，为新的项目工作。\n\n像谷歌、亚马逊、阿里巴巴、腾讯等许多互联网公司已经开始推行这种工作模式，并由此延伸出一套内部竞争机制。\n\n他们让公司内部不同的团队共同PK一个项目，然后选出一个最佳方案，最后集中公司资源来帮助它迅速成长。团队里的每个人都对项目的最终结果负责，各自的才能被尽善其用，不存在谁职位高谁就能一言九鼎的情况。\n\n许多我们熟知的互联网产品，例如微信、王者荣耀等就是腾讯内部竞争的产物。而它们的最初构想，都来源于最普通的员工。\n\n这么做的好处，是能够迅速应对外界环境的变化，一旦出现新的竞争对手或市场风向改变，可以灵活迅速地制定对策并执行。你不需要拿着一份计划书从地区汇报到中央，再从中央汇报到全球总部。等到兜一圈下来终于决定做了，黄花菜都凉了。\n\n无边界组织以目标为导向，强调“快、准、狠”。即：快速嗅到风向变化，准确把握市场需求，狠下手来全力以赴。\n\n它并不遵循传统企业的金字塔式结构，不需要层层上报给大老板，也没有诸如总监、经理、主管的层级壁垒，更不会受制于庞大人员规模所带来的效率递减。无边界组织更像是企业内部一个个小的作战单元，可以随时组装，随时打散。\n\n在这种扁平化的管理模式下，作为员工的每一个个体，不用担心自己的才能被埋没。因为这种组织的目的，就是让最有价值的想法能够最快地被接受和执行。\n\n用大白话来说，这是一种“你行你上”的工作模式。它让最优秀的人才，在最短的时间里完成最有挑战的事情。\n\n传统企业是存量思维，一个萝卜一个坑，越往金字塔顶端，机会越少；而扁平化组织是增量思维，它每时每刻都在创造新的机会。\n\n比如现在很流行的众包工作模式，就是扁平化组织的一种应用。客户将项目需求发布在网上，全世界各地拥有相应技能的人聚集在一起，利用网络进行项目沟通与协作。\n\n而每一次众包机会你都可以尝试不同的角色。例如今天你在这个项目做的是营销公关，下次可以去另一个项目做商务拓展，再过段时间去做产品经理也没问题。\n\n只要你的能力足够强，机会总是源源不断。\n\n![](https://xqimg.imedao.com/16658d3c58dbef3fe15020e8.jpg)\n\n**02**\n\n**展示才能的出口越来越多**\n\n我们身边你能展示才能的出口越来越多。\n\n如今除了写微信公众号，还有各种各样的职业社交网站，专业技能论坛等供你展现自己的才能。\n\n比如Linkedin 领英或者脉脉。这些地方每天聚集着各行各业的职场精英人士，你可以花时间去研究一下如何在上面优化自己的职业档案，加入某些主题讨论或者发布职业需求。\n\n比如GitHub, 这里是程序员的天堂。每天都有各路好手在GitHub上交流技术经验，发布项目心得，你在这里能认识许多顶级互联网公司的大牛。\n\n再比如像36Kr、知乎等这种商业科技泛知识类平台，现在也能开通个人专栏。你对某个领域有什么见解，就坚持不懈写下去，只要内容够好就一定能吸引与你志同道合的人。\n\n总之，只要用心去找，你一定能找到可以展现自己才能的出口。\n\n那些只会埋头苦干却不懂展示自己的人，是一定要被淘汰的。因为你需要花更久的时间，被动地让别人去了解你，接受你，赏识你。\n\n但这个世界已经没有那么多时间去等你。\n\n得益于互联网的飞速发展，怀才不再像怀孕，非得时间久了才能看得出来。一个人有没有才能，他说几句话，写几篇文章，发表几个观点就能看得出来。\n\n刘备三顾茅庐的故事，现在基本不可能。除非你真有诸葛亮一般经天纬地之才，值得有人为你苦苦等待。否则，还是主动一点。\n\n我有个朋友，在简历上就会放自己的作品集网站和公众号链接。每次面试的时候，面试官都会问他这是什么。这就打开了场面，接下来他能滔滔不绝和对方聊好久。\n\n你看，主动一点，机会就能多一点。\n\n以上两点，都是外面的变化，给你带来的机遇。这些近在眼前的机会如果还抓不住，那就真的不是怀才不遇的问题了。\n\n![](https://xqimg.imedao.com/16658d3d8f4a7f3feaef1439.jpg)\n\n**03**\n\n**如何让自己脱颖而出**\n\n大家说几个小建议。没有花里胡哨的办法，只有最淳朴的七个字：\n\n会写，会说，敢表现。\n\n之所以说淳朴，是因为每个人都知道，但并不是每个人都能做到。下面我分别来讲。\n\n**a）会写：勤于记录，积少成多**\n\n能够把你的所思所想用逻辑清晰、精炼的文字准确表达出来，这就叫会写。\n\n写作是成本最低的才能展示方法，也是未来每个人都要具备的底层核心能力。写作能力提高了，你的思维和表达能力也能够提升。\n\n那么如何训练呢？最简单的办法，就是写“日志”。\n\n注意，这个日志可不是朋友圈里的美食打卡或心情分享，而是你对时事热点的观察与思考。\n\n比如，为什么范冰冰补缴了8亿罚款就可以不被追究刑事责任？这背后的法律考量是怎样的？税法这么规定对以后的行业发展有什么指导意义？\n\n再比如，特斯拉的CEO 马斯克被迫退出董事会，这会对特斯拉未来的发展产生什么影响？为什么马斯克对特斯拉如此重要？他的接任者该如何处理接下来的烂摊子？\n\n这些问题都是很好的思维锻炼与写作的素材。大家可以把自己的思考从50字100字写起，然后逐渐扩充篇幅，从写几句话，变成慢慢写几段话，最后再扩充成文章。\n\n你写的篇幅越多，经验才会越足，对文字的驾驭能力也会越强。\n\n可能这时有些朋友会问：我很想写，但是文笔不好写不出来怎么办呢？\n\n这时你要去阅读。去找那些你认为写得好的作者的文章，耳濡目染地去感受他的写作思路和手法。时间久了，你写出来的东西就会带有这些人的印记。\n\n打个不恰当的比方，这就好像你看郭敬明的文章多了，你写出来的文字也会“悲伤逆流成河”。参照物的力量都是潜移默化地影响着你。\n\n当积累写到10万字的时候，你的写作能力会有一个质的飞跃。这时，你就拥有了展示自我才能的第一件武器。\n\n**b）会说：放大声量，刻意练习**\n\n能够把自己的观点声情并茂地讲出来，吸引听众的注意，这就是会说。\n\n你有没有发现，口才好的人在职场上往往占尽先机。即使你脑子里有一大套东西，可是讲不出来，一样是白搭。\n\n而那些会说的人，哪怕观点待斟酌，逻辑有问题，可在他的舌灿莲花下，这些瑕疵都能被掩饰过去。听众如果不仔细分析，很容易就被他这么带过去了。\n\n也许你会认为这是忽悠，但会忽悠的人，同样有本事。你可以学其精华，去其糟粕。\n\n怎么去做呢？最简单的方法，就是大声朗读。\n\n你可以把你喜欢的书籍或文章，在家对着镜子大声朗读出来，提高自己的演讲临场感。\n\n这个方法，来源于美国教授斯蒂夫卢卡斯写的《演讲的艺术》。在书中，他用这个简单的办法帮助了超过1000名“演讲恐惧者”克服障碍，流利演说。\n\n![](https://xqimg.imedao.com/16658d3ec4d9fd3fe2d749d3.jpg)\n\n这里的秘诀在于，当你在大声朗读的时候，才能找到属于自己的说话节奏、习惯甚至毛病，这是除你之外其他人不可能知道的。只有通过亲身实践，你才可以找到最适合自己的演讲风格。\n\n更进一步，你还可以大声朗读自己写的作品。这时你会发现，文字写出来和说出来，是完全不同的感觉。这个就留待大家去实践琢磨，你会发现许多意外惊喜。\n\n除此之外，在日常生活中，你可以抓住任何交谈的机会，来锻炼自己的口才。比如拿奇葩说里的议题和朋友讨论，或者就某个新闻话题展开一番“小辩论”。这里并不用得出什么结论，而是在过程中不断练习说话的技巧。\n\n最后完毕了，再做一番简单的复盘，总结一下自己讲话的语气、动作、声量、节奏都有哪些特点，通过朋友的反馈来帮助你更好了解自己，提升讲话的能力。\n\n总之，用刻意练习的方法给自己创造机会多去说，它和写作一样都没有捷径，唯手熟尔。\n\n**c）敢表现：放下脸面，不怕冒头**\n\n上面两点说的都是技巧，最后这一点说的是心态。\n\n这个时代比的不再是谁更有才，而是谁更有胆。如今许多人即使有才也不表现出来，他这不是怀才不遇，而是怀才不敢。\n\n中国人都说枪打出头鸟，可看看我们周围那些闯出一番成绩的人，有哪个不是出头鸟？那些拼了命打压、嘲讽你的人，要么是自己也不敢，要么是害怕你比他还敢。而只有那些做不到的人，才会怂恿其他人也不要做到。\n\n《权力的游戏》里，狮家的主人泰温兰尼斯特有句话说的很对：\n\n“狮子从来不会去问羊的意见。”\n\n![](https://xqimg.imedao.com/16658d40708bf63f7941eb6f.jpg)\n\n你如果真有一身才干，就不要去考虑那些懦弱胆小者的看法，而是去想如何利用大环境、渠道和资源来让自己的才能得到充分展现。\n\n还记得文章最开头说的无边界组织吗？这就是一个很好的征兆。未来社会给予人才的平台只会越来越多，竞争也会越来越激烈，再也不会有“酒香不怕巷子深”。\n\n所以请主动一点，不要像羊群一样永远呆在一个区域。而是运用互联网络、社交媒体等这些时代赋予你的武器，去开拓自己的视野与出口，像狮子一样去找寻猎物。\n\n以上就是今天的内容，最后简单总结一下：\n\n这个时代已经没有什么怀才不遇。\n\n世界正变得越来越扁平，身边能够展示才能的出口也越来越多。想要脱颖而出，最简单的办法就是培养自己写作和说话的能力，最后再加上充分的胆量，不要偏安一隅。\n\n记住，绵羊永远不可能成为狮子。\n\n各位共勉。\n\n作者：张良计\n\n本文来源：张良计（ID:zhang_liangj）\n","source":"_posts/（转载）这个时代没有怀才不遇.md","raw":"---\ntitle: （转载）这个时代没有怀才不遇\ndate: 2018-10-10 14:37:08\ncategories: 财经\ntags: 转载,职业,鸡汤,投资\n---\n\n![](https://xqimg.imedao.com/16658d38d02be83fdbe00cf7.jpg)\n\n假期里Boy 的微信读者群好不热闹，大家每天都在讨论各种职场成长的深度问题。前几天有人问道：\n\n总是觉得自己怀才不遇，没人赏识自己，每天只能埋头苦干的人想要飞黄腾达出路在哪里？\n\n今天的文章，我就来聊聊这个话题。在正式开始之前，我先抛出观点：\n\n这个时代已经没有什么怀才不遇。所谓的怀才不遇，只是你的才能还不够罢了。\n\n为了清晰说明这个问题，下面我从三点来分别解释。\n\n**01**\n\n**时代大趋势**\n\n世界正变得越来越扁平。\n\n如果你留意了最近的商业经济新闻，你会发现越来越多的公司都开始强调“无边界组织”。\n\n这个概念最初来源于通用电气的CEO杰克韦尔奇，后来经过互联网时代的发展，逐渐升级变成许多大公司内部推行的一种组织架构革命。\n\n什么叫无边界组织呢？\n\n简单来说，就是企业不再按照传统的职能属性来划分部门，而是将它们糅合在一起，每个员工都可以和拥有不同技能的人在一个单元组织里共同协作，彼此之间没有边界，无障碍交流。\n\n比如产品研发，销售，传播，公关甚至是财务都被放在一起，组成一个团队，共同攻克一个项目目标。等到目标达成，这些人又被打散到其他的单元组织里，为新的项目工作。\n\n像谷歌、亚马逊、阿里巴巴、腾讯等许多互联网公司已经开始推行这种工作模式，并由此延伸出一套内部竞争机制。\n\n他们让公司内部不同的团队共同PK一个项目，然后选出一个最佳方案，最后集中公司资源来帮助它迅速成长。团队里的每个人都对项目的最终结果负责，各自的才能被尽善其用，不存在谁职位高谁就能一言九鼎的情况。\n\n许多我们熟知的互联网产品，例如微信、王者荣耀等就是腾讯内部竞争的产物。而它们的最初构想，都来源于最普通的员工。\n\n这么做的好处，是能够迅速应对外界环境的变化，一旦出现新的竞争对手或市场风向改变，可以灵活迅速地制定对策并执行。你不需要拿着一份计划书从地区汇报到中央，再从中央汇报到全球总部。等到兜一圈下来终于决定做了，黄花菜都凉了。\n\n无边界组织以目标为导向，强调“快、准、狠”。即：快速嗅到风向变化，准确把握市场需求，狠下手来全力以赴。\n\n它并不遵循传统企业的金字塔式结构，不需要层层上报给大老板，也没有诸如总监、经理、主管的层级壁垒，更不会受制于庞大人员规模所带来的效率递减。无边界组织更像是企业内部一个个小的作战单元，可以随时组装，随时打散。\n\n在这种扁平化的管理模式下，作为员工的每一个个体，不用担心自己的才能被埋没。因为这种组织的目的，就是让最有价值的想法能够最快地被接受和执行。\n\n用大白话来说，这是一种“你行你上”的工作模式。它让最优秀的人才，在最短的时间里完成最有挑战的事情。\n\n传统企业是存量思维，一个萝卜一个坑，越往金字塔顶端，机会越少；而扁平化组织是增量思维，它每时每刻都在创造新的机会。\n\n比如现在很流行的众包工作模式，就是扁平化组织的一种应用。客户将项目需求发布在网上，全世界各地拥有相应技能的人聚集在一起，利用网络进行项目沟通与协作。\n\n而每一次众包机会你都可以尝试不同的角色。例如今天你在这个项目做的是营销公关，下次可以去另一个项目做商务拓展，再过段时间去做产品经理也没问题。\n\n只要你的能力足够强，机会总是源源不断。\n\n![](https://xqimg.imedao.com/16658d3c58dbef3fe15020e8.jpg)\n\n**02**\n\n**展示才能的出口越来越多**\n\n我们身边你能展示才能的出口越来越多。\n\n如今除了写微信公众号，还有各种各样的职业社交网站，专业技能论坛等供你展现自己的才能。\n\n比如Linkedin 领英或者脉脉。这些地方每天聚集着各行各业的职场精英人士，你可以花时间去研究一下如何在上面优化自己的职业档案，加入某些主题讨论或者发布职业需求。\n\n比如GitHub, 这里是程序员的天堂。每天都有各路好手在GitHub上交流技术经验，发布项目心得，你在这里能认识许多顶级互联网公司的大牛。\n\n再比如像36Kr、知乎等这种商业科技泛知识类平台，现在也能开通个人专栏。你对某个领域有什么见解，就坚持不懈写下去，只要内容够好就一定能吸引与你志同道合的人。\n\n总之，只要用心去找，你一定能找到可以展现自己才能的出口。\n\n那些只会埋头苦干却不懂展示自己的人，是一定要被淘汰的。因为你需要花更久的时间，被动地让别人去了解你，接受你，赏识你。\n\n但这个世界已经没有那么多时间去等你。\n\n得益于互联网的飞速发展，怀才不再像怀孕，非得时间久了才能看得出来。一个人有没有才能，他说几句话，写几篇文章，发表几个观点就能看得出来。\n\n刘备三顾茅庐的故事，现在基本不可能。除非你真有诸葛亮一般经天纬地之才，值得有人为你苦苦等待。否则，还是主动一点。\n\n我有个朋友，在简历上就会放自己的作品集网站和公众号链接。每次面试的时候，面试官都会问他这是什么。这就打开了场面，接下来他能滔滔不绝和对方聊好久。\n\n你看，主动一点，机会就能多一点。\n\n以上两点，都是外面的变化，给你带来的机遇。这些近在眼前的机会如果还抓不住，那就真的不是怀才不遇的问题了。\n\n![](https://xqimg.imedao.com/16658d3d8f4a7f3feaef1439.jpg)\n\n**03**\n\n**如何让自己脱颖而出**\n\n大家说几个小建议。没有花里胡哨的办法，只有最淳朴的七个字：\n\n会写，会说，敢表现。\n\n之所以说淳朴，是因为每个人都知道，但并不是每个人都能做到。下面我分别来讲。\n\n**a）会写：勤于记录，积少成多**\n\n能够把你的所思所想用逻辑清晰、精炼的文字准确表达出来，这就叫会写。\n\n写作是成本最低的才能展示方法，也是未来每个人都要具备的底层核心能力。写作能力提高了，你的思维和表达能力也能够提升。\n\n那么如何训练呢？最简单的办法，就是写“日志”。\n\n注意，这个日志可不是朋友圈里的美食打卡或心情分享，而是你对时事热点的观察与思考。\n\n比如，为什么范冰冰补缴了8亿罚款就可以不被追究刑事责任？这背后的法律考量是怎样的？税法这么规定对以后的行业发展有什么指导意义？\n\n再比如，特斯拉的CEO 马斯克被迫退出董事会，这会对特斯拉未来的发展产生什么影响？为什么马斯克对特斯拉如此重要？他的接任者该如何处理接下来的烂摊子？\n\n这些问题都是很好的思维锻炼与写作的素材。大家可以把自己的思考从50字100字写起，然后逐渐扩充篇幅，从写几句话，变成慢慢写几段话，最后再扩充成文章。\n\n你写的篇幅越多，经验才会越足，对文字的驾驭能力也会越强。\n\n可能这时有些朋友会问：我很想写，但是文笔不好写不出来怎么办呢？\n\n这时你要去阅读。去找那些你认为写得好的作者的文章，耳濡目染地去感受他的写作思路和手法。时间久了，你写出来的东西就会带有这些人的印记。\n\n打个不恰当的比方，这就好像你看郭敬明的文章多了，你写出来的文字也会“悲伤逆流成河”。参照物的力量都是潜移默化地影响着你。\n\n当积累写到10万字的时候，你的写作能力会有一个质的飞跃。这时，你就拥有了展示自我才能的第一件武器。\n\n**b）会说：放大声量，刻意练习**\n\n能够把自己的观点声情并茂地讲出来，吸引听众的注意，这就是会说。\n\n你有没有发现，口才好的人在职场上往往占尽先机。即使你脑子里有一大套东西，可是讲不出来，一样是白搭。\n\n而那些会说的人，哪怕观点待斟酌，逻辑有问题，可在他的舌灿莲花下，这些瑕疵都能被掩饰过去。听众如果不仔细分析，很容易就被他这么带过去了。\n\n也许你会认为这是忽悠，但会忽悠的人，同样有本事。你可以学其精华，去其糟粕。\n\n怎么去做呢？最简单的方法，就是大声朗读。\n\n你可以把你喜欢的书籍或文章，在家对着镜子大声朗读出来，提高自己的演讲临场感。\n\n这个方法，来源于美国教授斯蒂夫卢卡斯写的《演讲的艺术》。在书中，他用这个简单的办法帮助了超过1000名“演讲恐惧者”克服障碍，流利演说。\n\n![](https://xqimg.imedao.com/16658d3ec4d9fd3fe2d749d3.jpg)\n\n这里的秘诀在于，当你在大声朗读的时候，才能找到属于自己的说话节奏、习惯甚至毛病，这是除你之外其他人不可能知道的。只有通过亲身实践，你才可以找到最适合自己的演讲风格。\n\n更进一步，你还可以大声朗读自己写的作品。这时你会发现，文字写出来和说出来，是完全不同的感觉。这个就留待大家去实践琢磨，你会发现许多意外惊喜。\n\n除此之外，在日常生活中，你可以抓住任何交谈的机会，来锻炼自己的口才。比如拿奇葩说里的议题和朋友讨论，或者就某个新闻话题展开一番“小辩论”。这里并不用得出什么结论，而是在过程中不断练习说话的技巧。\n\n最后完毕了，再做一番简单的复盘，总结一下自己讲话的语气、动作、声量、节奏都有哪些特点，通过朋友的反馈来帮助你更好了解自己，提升讲话的能力。\n\n总之，用刻意练习的方法给自己创造机会多去说，它和写作一样都没有捷径，唯手熟尔。\n\n**c）敢表现：放下脸面，不怕冒头**\n\n上面两点说的都是技巧，最后这一点说的是心态。\n\n这个时代比的不再是谁更有才，而是谁更有胆。如今许多人即使有才也不表现出来，他这不是怀才不遇，而是怀才不敢。\n\n中国人都说枪打出头鸟，可看看我们周围那些闯出一番成绩的人，有哪个不是出头鸟？那些拼了命打压、嘲讽你的人，要么是自己也不敢，要么是害怕你比他还敢。而只有那些做不到的人，才会怂恿其他人也不要做到。\n\n《权力的游戏》里，狮家的主人泰温兰尼斯特有句话说的很对：\n\n“狮子从来不会去问羊的意见。”\n\n![](https://xqimg.imedao.com/16658d40708bf63f7941eb6f.jpg)\n\n你如果真有一身才干，就不要去考虑那些懦弱胆小者的看法，而是去想如何利用大环境、渠道和资源来让自己的才能得到充分展现。\n\n还记得文章最开头说的无边界组织吗？这就是一个很好的征兆。未来社会给予人才的平台只会越来越多，竞争也会越来越激烈，再也不会有“酒香不怕巷子深”。\n\n所以请主动一点，不要像羊群一样永远呆在一个区域。而是运用互联网络、社交媒体等这些时代赋予你的武器，去开拓自己的视野与出口，像狮子一样去找寻猎物。\n\n以上就是今天的内容，最后简单总结一下：\n\n这个时代已经没有什么怀才不遇。\n\n世界正变得越来越扁平，身边能够展示才能的出口也越来越多。想要脱颖而出，最简单的办法就是培养自己写作和说话的能力，最后再加上充分的胆量，不要偏安一隅。\n\n记住，绵羊永远不可能成为狮子。\n\n各位共勉。\n\n作者：张良计\n\n本文来源：张良计（ID:zhang_liangj）\n","slug":"（转载）这个时代没有怀才不遇","published":1,"updated":"2018-10-12T01:33:33.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrbok4nf0005l32v24zkmenl","content":"<p><img src=\"https://xqimg.imedao.com/16658d38d02be83fdbe00cf7.jpg\" alt=\"\"></p>\n<p>假期里Boy 的微信读者群好不热闹，大家每天都在讨论各种职场成长的深度问题。前几天有人问道：</p>\n<p>总是觉得自己怀才不遇，没人赏识自己，每天只能埋头苦干的人想要飞黄腾达出路在哪里？</p>\n<p>今天的文章，我就来聊聊这个话题。在正式开始之前，我先抛出观点：</p>\n<p>这个时代已经没有什么怀才不遇。所谓的怀才不遇，只是你的才能还不够罢了。</p>\n<p>为了清晰说明这个问题，下面我从三点来分别解释。</p>\n<p><strong>01</strong></p>\n<p><strong>时代大趋势</strong></p>\n<p>世界正变得越来越扁平。</p>\n<p>如果你留意了最近的商业经济新闻，你会发现越来越多的公司都开始强调“无边界组织”。</p>\n<p>这个概念最初来源于通用电气的CEO杰克韦尔奇，后来经过互联网时代的发展，逐渐升级变成许多大公司内部推行的一种组织架构革命。</p>\n<p>什么叫无边界组织呢？</p>\n<p>简单来说，就是企业不再按照传统的职能属性来划分部门，而是将它们糅合在一起，每个员工都可以和拥有不同技能的人在一个单元组织里共同协作，彼此之间没有边界，无障碍交流。</p>\n<p>比如产品研发，销售，传播，公关甚至是财务都被放在一起，组成一个团队，共同攻克一个项目目标。等到目标达成，这些人又被打散到其他的单元组织里，为新的项目工作。</p>\n<p>像谷歌、亚马逊、阿里巴巴、腾讯等许多互联网公司已经开始推行这种工作模式，并由此延伸出一套内部竞争机制。</p>\n<p>他们让公司内部不同的团队共同PK一个项目，然后选出一个最佳方案，最后集中公司资源来帮助它迅速成长。团队里的每个人都对项目的最终结果负责，各自的才能被尽善其用，不存在谁职位高谁就能一言九鼎的情况。</p>\n<p>许多我们熟知的互联网产品，例如微信、王者荣耀等就是腾讯内部竞争的产物。而它们的最初构想，都来源于最普通的员工。</p>\n<p>这么做的好处，是能够迅速应对外界环境的变化，一旦出现新的竞争对手或市场风向改变，可以灵活迅速地制定对策并执行。你不需要拿着一份计划书从地区汇报到中央，再从中央汇报到全球总部。等到兜一圈下来终于决定做了，黄花菜都凉了。</p>\n<p>无边界组织以目标为导向，强调“快、准、狠”。即：快速嗅到风向变化，准确把握市场需求，狠下手来全力以赴。</p>\n<p>它并不遵循传统企业的金字塔式结构，不需要层层上报给大老板，也没有诸如总监、经理、主管的层级壁垒，更不会受制于庞大人员规模所带来的效率递减。无边界组织更像是企业内部一个个小的作战单元，可以随时组装，随时打散。</p>\n<p>在这种扁平化的管理模式下，作为员工的每一个个体，不用担心自己的才能被埋没。因为这种组织的目的，就是让最有价值的想法能够最快地被接受和执行。</p>\n<p>用大白话来说，这是一种“你行你上”的工作模式。它让最优秀的人才，在最短的时间里完成最有挑战的事情。</p>\n<p>传统企业是存量思维，一个萝卜一个坑，越往金字塔顶端，机会越少；而扁平化组织是增量思维，它每时每刻都在创造新的机会。</p>\n<p>比如现在很流行的众包工作模式，就是扁平化组织的一种应用。客户将项目需求发布在网上，全世界各地拥有相应技能的人聚集在一起，利用网络进行项目沟通与协作。</p>\n<p>而每一次众包机会你都可以尝试不同的角色。例如今天你在这个项目做的是营销公关，下次可以去另一个项目做商务拓展，再过段时间去做产品经理也没问题。</p>\n<p>只要你的能力足够强，机会总是源源不断。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3c58dbef3fe15020e8.jpg\" alt=\"\"></p>\n<p><strong>02</strong></p>\n<p><strong>展示才能的出口越来越多</strong></p>\n<p>我们身边你能展示才能的出口越来越多。</p>\n<p>如今除了写微信公众号，还有各种各样的职业社交网站，专业技能论坛等供你展现自己的才能。</p>\n<p>比如Linkedin 领英或者脉脉。这些地方每天聚集着各行各业的职场精英人士，你可以花时间去研究一下如何在上面优化自己的职业档案，加入某些主题讨论或者发布职业需求。</p>\n<p>比如GitHub, 这里是程序员的天堂。每天都有各路好手在GitHub上交流技术经验，发布项目心得，你在这里能认识许多顶级互联网公司的大牛。</p>\n<p>再比如像36Kr、知乎等这种商业科技泛知识类平台，现在也能开通个人专栏。你对某个领域有什么见解，就坚持不懈写下去，只要内容够好就一定能吸引与你志同道合的人。</p>\n<p>总之，只要用心去找，你一定能找到可以展现自己才能的出口。</p>\n<p>那些只会埋头苦干却不懂展示自己的人，是一定要被淘汰的。因为你需要花更久的时间，被动地让别人去了解你，接受你，赏识你。</p>\n<p>但这个世界已经没有那么多时间去等你。</p>\n<p>得益于互联网的飞速发展，怀才不再像怀孕，非得时间久了才能看得出来。一个人有没有才能，他说几句话，写几篇文章，发表几个观点就能看得出来。</p>\n<p>刘备三顾茅庐的故事，现在基本不可能。除非你真有诸葛亮一般经天纬地之才，值得有人为你苦苦等待。否则，还是主动一点。</p>\n<p>我有个朋友，在简历上就会放自己的作品集网站和公众号链接。每次面试的时候，面试官都会问他这是什么。这就打开了场面，接下来他能滔滔不绝和对方聊好久。</p>\n<p>你看，主动一点，机会就能多一点。</p>\n<p>以上两点，都是外面的变化，给你带来的机遇。这些近在眼前的机会如果还抓不住，那就真的不是怀才不遇的问题了。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3d8f4a7f3feaef1439.jpg\" alt=\"\"></p>\n<p><strong>03</strong></p>\n<p><strong>如何让自己脱颖而出</strong></p>\n<p>大家说几个小建议。没有花里胡哨的办法，只有最淳朴的七个字：</p>\n<p>会写，会说，敢表现。</p>\n<p>之所以说淳朴，是因为每个人都知道，但并不是每个人都能做到。下面我分别来讲。</p>\n<p><strong>a）会写：勤于记录，积少成多</strong></p>\n<p>能够把你的所思所想用逻辑清晰、精炼的文字准确表达出来，这就叫会写。</p>\n<p>写作是成本最低的才能展示方法，也是未来每个人都要具备的底层核心能力。写作能力提高了，你的思维和表达能力也能够提升。</p>\n<p>那么如何训练呢？最简单的办法，就是写“日志”。</p>\n<p>注意，这个日志可不是朋友圈里的美食打卡或心情分享，而是你对时事热点的观察与思考。</p>\n<p>比如，为什么范冰冰补缴了8亿罚款就可以不被追究刑事责任？这背后的法律考量是怎样的？税法这么规定对以后的行业发展有什么指导意义？</p>\n<p>再比如，特斯拉的CEO 马斯克被迫退出董事会，这会对特斯拉未来的发展产生什么影响？为什么马斯克对特斯拉如此重要？他的接任者该如何处理接下来的烂摊子？</p>\n<p>这些问题都是很好的思维锻炼与写作的素材。大家可以把自己的思考从50字100字写起，然后逐渐扩充篇幅，从写几句话，变成慢慢写几段话，最后再扩充成文章。</p>\n<p>你写的篇幅越多，经验才会越足，对文字的驾驭能力也会越强。</p>\n<p>可能这时有些朋友会问：我很想写，但是文笔不好写不出来怎么办呢？</p>\n<p>这时你要去阅读。去找那些你认为写得好的作者的文章，耳濡目染地去感受他的写作思路和手法。时间久了，你写出来的东西就会带有这些人的印记。</p>\n<p>打个不恰当的比方，这就好像你看郭敬明的文章多了，你写出来的文字也会“悲伤逆流成河”。参照物的力量都是潜移默化地影响着你。</p>\n<p>当积累写到10万字的时候，你的写作能力会有一个质的飞跃。这时，你就拥有了展示自我才能的第一件武器。</p>\n<p><strong>b）会说：放大声量，刻意练习</strong></p>\n<p>能够把自己的观点声情并茂地讲出来，吸引听众的注意，这就是会说。</p>\n<p>你有没有发现，口才好的人在职场上往往占尽先机。即使你脑子里有一大套东西，可是讲不出来，一样是白搭。</p>\n<p>而那些会说的人，哪怕观点待斟酌，逻辑有问题，可在他的舌灿莲花下，这些瑕疵都能被掩饰过去。听众如果不仔细分析，很容易就被他这么带过去了。</p>\n<p>也许你会认为这是忽悠，但会忽悠的人，同样有本事。你可以学其精华，去其糟粕。</p>\n<p>怎么去做呢？最简单的方法，就是大声朗读。</p>\n<p>你可以把你喜欢的书籍或文章，在家对着镜子大声朗读出来，提高自己的演讲临场感。</p>\n<p>这个方法，来源于美国教授斯蒂夫卢卡斯写的《演讲的艺术》。在书中，他用这个简单的办法帮助了超过1000名“演讲恐惧者”克服障碍，流利演说。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3ec4d9fd3fe2d749d3.jpg\" alt=\"\"></p>\n<p>这里的秘诀在于，当你在大声朗读的时候，才能找到属于自己的说话节奏、习惯甚至毛病，这是除你之外其他人不可能知道的。只有通过亲身实践，你才可以找到最适合自己的演讲风格。</p>\n<p>更进一步，你还可以大声朗读自己写的作品。这时你会发现，文字写出来和说出来，是完全不同的感觉。这个就留待大家去实践琢磨，你会发现许多意外惊喜。</p>\n<p>除此之外，在日常生活中，你可以抓住任何交谈的机会，来锻炼自己的口才。比如拿奇葩说里的议题和朋友讨论，或者就某个新闻话题展开一番“小辩论”。这里并不用得出什么结论，而是在过程中不断练习说话的技巧。</p>\n<p>最后完毕了，再做一番简单的复盘，总结一下自己讲话的语气、动作、声量、节奏都有哪些特点，通过朋友的反馈来帮助你更好了解自己，提升讲话的能力。</p>\n<p>总之，用刻意练习的方法给自己创造机会多去说，它和写作一样都没有捷径，唯手熟尔。</p>\n<p><strong>c）敢表现：放下脸面，不怕冒头</strong></p>\n<p>上面两点说的都是技巧，最后这一点说的是心态。</p>\n<p>这个时代比的不再是谁更有才，而是谁更有胆。如今许多人即使有才也不表现出来，他这不是怀才不遇，而是怀才不敢。</p>\n<p>中国人都说枪打出头鸟，可看看我们周围那些闯出一番成绩的人，有哪个不是出头鸟？那些拼了命打压、嘲讽你的人，要么是自己也不敢，要么是害怕你比他还敢。而只有那些做不到的人，才会怂恿其他人也不要做到。</p>\n<p>《权力的游戏》里，狮家的主人泰温兰尼斯特有句话说的很对：</p>\n<p>“狮子从来不会去问羊的意见。”</p>\n<p><img src=\"https://xqimg.imedao.com/16658d40708bf63f7941eb6f.jpg\" alt=\"\"></p>\n<p>你如果真有一身才干，就不要去考虑那些懦弱胆小者的看法，而是去想如何利用大环境、渠道和资源来让自己的才能得到充分展现。</p>\n<p>还记得文章最开头说的无边界组织吗？这就是一个很好的征兆。未来社会给予人才的平台只会越来越多，竞争也会越来越激烈，再也不会有“酒香不怕巷子深”。</p>\n<p>所以请主动一点，不要像羊群一样永远呆在一个区域。而是运用互联网络、社交媒体等这些时代赋予你的武器，去开拓自己的视野与出口，像狮子一样去找寻猎物。</p>\n<p>以上就是今天的内容，最后简单总结一下：</p>\n<p>这个时代已经没有什么怀才不遇。</p>\n<p>世界正变得越来越扁平，身边能够展示才能的出口也越来越多。想要脱颖而出，最简单的办法就是培养自己写作和说话的能力，最后再加上充分的胆量，不要偏安一隅。</p>\n<p>记住，绵羊永远不可能成为狮子。</p>\n<p>各位共勉。</p>\n<p>作者：张良计</p>\n<p>本文来源：张良计（ID:zhang_liangj）</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://xqimg.imedao.com/16658d38d02be83fdbe00cf7.jpg\" alt=\"\"></p>\n<p>假期里Boy 的微信读者群好不热闹，大家每天都在讨论各种职场成长的深度问题。前几天有人问道：</p>\n<p>总是觉得自己怀才不遇，没人赏识自己，每天只能埋头苦干的人想要飞黄腾达出路在哪里？</p>\n<p>今天的文章，我就来聊聊这个话题。在正式开始之前，我先抛出观点：</p>\n<p>这个时代已经没有什么怀才不遇。所谓的怀才不遇，只是你的才能还不够罢了。</p>\n<p>为了清晰说明这个问题，下面我从三点来分别解释。</p>\n<p><strong>01</strong></p>\n<p><strong>时代大趋势</strong></p>\n<p>世界正变得越来越扁平。</p>\n<p>如果你留意了最近的商业经济新闻，你会发现越来越多的公司都开始强调“无边界组织”。</p>\n<p>这个概念最初来源于通用电气的CEO杰克韦尔奇，后来经过互联网时代的发展，逐渐升级变成许多大公司内部推行的一种组织架构革命。</p>\n<p>什么叫无边界组织呢？</p>\n<p>简单来说，就是企业不再按照传统的职能属性来划分部门，而是将它们糅合在一起，每个员工都可以和拥有不同技能的人在一个单元组织里共同协作，彼此之间没有边界，无障碍交流。</p>\n<p>比如产品研发，销售，传播，公关甚至是财务都被放在一起，组成一个团队，共同攻克一个项目目标。等到目标达成，这些人又被打散到其他的单元组织里，为新的项目工作。</p>\n<p>像谷歌、亚马逊、阿里巴巴、腾讯等许多互联网公司已经开始推行这种工作模式，并由此延伸出一套内部竞争机制。</p>\n<p>他们让公司内部不同的团队共同PK一个项目，然后选出一个最佳方案，最后集中公司资源来帮助它迅速成长。团队里的每个人都对项目的最终结果负责，各自的才能被尽善其用，不存在谁职位高谁就能一言九鼎的情况。</p>\n<p>许多我们熟知的互联网产品，例如微信、王者荣耀等就是腾讯内部竞争的产物。而它们的最初构想，都来源于最普通的员工。</p>\n<p>这么做的好处，是能够迅速应对外界环境的变化，一旦出现新的竞争对手或市场风向改变，可以灵活迅速地制定对策并执行。你不需要拿着一份计划书从地区汇报到中央，再从中央汇报到全球总部。等到兜一圈下来终于决定做了，黄花菜都凉了。</p>\n<p>无边界组织以目标为导向，强调“快、准、狠”。即：快速嗅到风向变化，准确把握市场需求，狠下手来全力以赴。</p>\n<p>它并不遵循传统企业的金字塔式结构，不需要层层上报给大老板，也没有诸如总监、经理、主管的层级壁垒，更不会受制于庞大人员规模所带来的效率递减。无边界组织更像是企业内部一个个小的作战单元，可以随时组装，随时打散。</p>\n<p>在这种扁平化的管理模式下，作为员工的每一个个体，不用担心自己的才能被埋没。因为这种组织的目的，就是让最有价值的想法能够最快地被接受和执行。</p>\n<p>用大白话来说，这是一种“你行你上”的工作模式。它让最优秀的人才，在最短的时间里完成最有挑战的事情。</p>\n<p>传统企业是存量思维，一个萝卜一个坑，越往金字塔顶端，机会越少；而扁平化组织是增量思维，它每时每刻都在创造新的机会。</p>\n<p>比如现在很流行的众包工作模式，就是扁平化组织的一种应用。客户将项目需求发布在网上，全世界各地拥有相应技能的人聚集在一起，利用网络进行项目沟通与协作。</p>\n<p>而每一次众包机会你都可以尝试不同的角色。例如今天你在这个项目做的是营销公关，下次可以去另一个项目做商务拓展，再过段时间去做产品经理也没问题。</p>\n<p>只要你的能力足够强，机会总是源源不断。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3c58dbef3fe15020e8.jpg\" alt=\"\"></p>\n<p><strong>02</strong></p>\n<p><strong>展示才能的出口越来越多</strong></p>\n<p>我们身边你能展示才能的出口越来越多。</p>\n<p>如今除了写微信公众号，还有各种各样的职业社交网站，专业技能论坛等供你展现自己的才能。</p>\n<p>比如Linkedin 领英或者脉脉。这些地方每天聚集着各行各业的职场精英人士，你可以花时间去研究一下如何在上面优化自己的职业档案，加入某些主题讨论或者发布职业需求。</p>\n<p>比如GitHub, 这里是程序员的天堂。每天都有各路好手在GitHub上交流技术经验，发布项目心得，你在这里能认识许多顶级互联网公司的大牛。</p>\n<p>再比如像36Kr、知乎等这种商业科技泛知识类平台，现在也能开通个人专栏。你对某个领域有什么见解，就坚持不懈写下去，只要内容够好就一定能吸引与你志同道合的人。</p>\n<p>总之，只要用心去找，你一定能找到可以展现自己才能的出口。</p>\n<p>那些只会埋头苦干却不懂展示自己的人，是一定要被淘汰的。因为你需要花更久的时间，被动地让别人去了解你，接受你，赏识你。</p>\n<p>但这个世界已经没有那么多时间去等你。</p>\n<p>得益于互联网的飞速发展，怀才不再像怀孕，非得时间久了才能看得出来。一个人有没有才能，他说几句话，写几篇文章，发表几个观点就能看得出来。</p>\n<p>刘备三顾茅庐的故事，现在基本不可能。除非你真有诸葛亮一般经天纬地之才，值得有人为你苦苦等待。否则，还是主动一点。</p>\n<p>我有个朋友，在简历上就会放自己的作品集网站和公众号链接。每次面试的时候，面试官都会问他这是什么。这就打开了场面，接下来他能滔滔不绝和对方聊好久。</p>\n<p>你看，主动一点，机会就能多一点。</p>\n<p>以上两点，都是外面的变化，给你带来的机遇。这些近在眼前的机会如果还抓不住，那就真的不是怀才不遇的问题了。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3d8f4a7f3feaef1439.jpg\" alt=\"\"></p>\n<p><strong>03</strong></p>\n<p><strong>如何让自己脱颖而出</strong></p>\n<p>大家说几个小建议。没有花里胡哨的办法，只有最淳朴的七个字：</p>\n<p>会写，会说，敢表现。</p>\n<p>之所以说淳朴，是因为每个人都知道，但并不是每个人都能做到。下面我分别来讲。</p>\n<p><strong>a）会写：勤于记录，积少成多</strong></p>\n<p>能够把你的所思所想用逻辑清晰、精炼的文字准确表达出来，这就叫会写。</p>\n<p>写作是成本最低的才能展示方法，也是未来每个人都要具备的底层核心能力。写作能力提高了，你的思维和表达能力也能够提升。</p>\n<p>那么如何训练呢？最简单的办法，就是写“日志”。</p>\n<p>注意，这个日志可不是朋友圈里的美食打卡或心情分享，而是你对时事热点的观察与思考。</p>\n<p>比如，为什么范冰冰补缴了8亿罚款就可以不被追究刑事责任？这背后的法律考量是怎样的？税法这么规定对以后的行业发展有什么指导意义？</p>\n<p>再比如，特斯拉的CEO 马斯克被迫退出董事会，这会对特斯拉未来的发展产生什么影响？为什么马斯克对特斯拉如此重要？他的接任者该如何处理接下来的烂摊子？</p>\n<p>这些问题都是很好的思维锻炼与写作的素材。大家可以把自己的思考从50字100字写起，然后逐渐扩充篇幅，从写几句话，变成慢慢写几段话，最后再扩充成文章。</p>\n<p>你写的篇幅越多，经验才会越足，对文字的驾驭能力也会越强。</p>\n<p>可能这时有些朋友会问：我很想写，但是文笔不好写不出来怎么办呢？</p>\n<p>这时你要去阅读。去找那些你认为写得好的作者的文章，耳濡目染地去感受他的写作思路和手法。时间久了，你写出来的东西就会带有这些人的印记。</p>\n<p>打个不恰当的比方，这就好像你看郭敬明的文章多了，你写出来的文字也会“悲伤逆流成河”。参照物的力量都是潜移默化地影响着你。</p>\n<p>当积累写到10万字的时候，你的写作能力会有一个质的飞跃。这时，你就拥有了展示自我才能的第一件武器。</p>\n<p><strong>b）会说：放大声量，刻意练习</strong></p>\n<p>能够把自己的观点声情并茂地讲出来，吸引听众的注意，这就是会说。</p>\n<p>你有没有发现，口才好的人在职场上往往占尽先机。即使你脑子里有一大套东西，可是讲不出来，一样是白搭。</p>\n<p>而那些会说的人，哪怕观点待斟酌，逻辑有问题，可在他的舌灿莲花下，这些瑕疵都能被掩饰过去。听众如果不仔细分析，很容易就被他这么带过去了。</p>\n<p>也许你会认为这是忽悠，但会忽悠的人，同样有本事。你可以学其精华，去其糟粕。</p>\n<p>怎么去做呢？最简单的方法，就是大声朗读。</p>\n<p>你可以把你喜欢的书籍或文章，在家对着镜子大声朗读出来，提高自己的演讲临场感。</p>\n<p>这个方法，来源于美国教授斯蒂夫卢卡斯写的《演讲的艺术》。在书中，他用这个简单的办法帮助了超过1000名“演讲恐惧者”克服障碍，流利演说。</p>\n<p><img src=\"https://xqimg.imedao.com/16658d3ec4d9fd3fe2d749d3.jpg\" alt=\"\"></p>\n<p>这里的秘诀在于，当你在大声朗读的时候，才能找到属于自己的说话节奏、习惯甚至毛病，这是除你之外其他人不可能知道的。只有通过亲身实践，你才可以找到最适合自己的演讲风格。</p>\n<p>更进一步，你还可以大声朗读自己写的作品。这时你会发现，文字写出来和说出来，是完全不同的感觉。这个就留待大家去实践琢磨，你会发现许多意外惊喜。</p>\n<p>除此之外，在日常生活中，你可以抓住任何交谈的机会，来锻炼自己的口才。比如拿奇葩说里的议题和朋友讨论，或者就某个新闻话题展开一番“小辩论”。这里并不用得出什么结论，而是在过程中不断练习说话的技巧。</p>\n<p>最后完毕了，再做一番简单的复盘，总结一下自己讲话的语气、动作、声量、节奏都有哪些特点，通过朋友的反馈来帮助你更好了解自己，提升讲话的能力。</p>\n<p>总之，用刻意练习的方法给自己创造机会多去说，它和写作一样都没有捷径，唯手熟尔。</p>\n<p><strong>c）敢表现：放下脸面，不怕冒头</strong></p>\n<p>上面两点说的都是技巧，最后这一点说的是心态。</p>\n<p>这个时代比的不再是谁更有才，而是谁更有胆。如今许多人即使有才也不表现出来，他这不是怀才不遇，而是怀才不敢。</p>\n<p>中国人都说枪打出头鸟，可看看我们周围那些闯出一番成绩的人，有哪个不是出头鸟？那些拼了命打压、嘲讽你的人，要么是自己也不敢，要么是害怕你比他还敢。而只有那些做不到的人，才会怂恿其他人也不要做到。</p>\n<p>《权力的游戏》里，狮家的主人泰温兰尼斯特有句话说的很对：</p>\n<p>“狮子从来不会去问羊的意见。”</p>\n<p><img src=\"https://xqimg.imedao.com/16658d40708bf63f7941eb6f.jpg\" alt=\"\"></p>\n<p>你如果真有一身才干，就不要去考虑那些懦弱胆小者的看法，而是去想如何利用大环境、渠道和资源来让自己的才能得到充分展现。</p>\n<p>还记得文章最开头说的无边界组织吗？这就是一个很好的征兆。未来社会给予人才的平台只会越来越多，竞争也会越来越激烈，再也不会有“酒香不怕巷子深”。</p>\n<p>所以请主动一点，不要像羊群一样永远呆在一个区域。而是运用互联网络、社交媒体等这些时代赋予你的武器，去开拓自己的视野与出口，像狮子一样去找寻猎物。</p>\n<p>以上就是今天的内容，最后简单总结一下：</p>\n<p>这个时代已经没有什么怀才不遇。</p>\n<p>世界正变得越来越扁平，身边能够展示才能的出口也越来越多。想要脱颖而出，最简单的办法就是培养自己写作和说话的能力，最后再加上充分的胆量，不要偏安一隅。</p>\n<p>记住，绵羊永远不可能成为狮子。</p>\n<p>各位共勉。</p>\n<p>作者：张良计</p>\n<p>本文来源：张良计（ID:zhang_liangj）</p>\n"},{"title":"机器学习极简入门课-学习笔记","date":"2019-01-25T06:43:31.000Z","_content":"","source":"_posts/机器学习极简入门课-学习笔记.md","raw":"---\ntitle: 机器学习极简入门课-学习笔记\ndate: 2019-01-25 14:43:31\ntags:\n---\n","slug":"机器学习极简入门课-学习笔记","published":1,"updated":"2019-01-25T06:47:21.475Z","_id":"cjrboowl20000lf2v453zndip","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/Create_AIDL_File.png","slug":"Create_AIDL_File.png","post":"cjrbok4n80002l32v6d64zfwf","modified":0,"renderable":0},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_JAVA_File.png","slug":"AIDL_JAVA_File.png","post":"cjrbok4n80002l32v6d64zfwf","modified":0,"renderable":0},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_Client_File.png","slug":"AIDL_Client_File.png","post":"cjrbok4n80002l32v6d64zfwf","modified":0,"renderable":0},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/AIDL_File.png","slug":"AIDL_File.png","post":"cjrbok4n80002l32v6d64zfwf","modified":0,"renderable":0},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/Result.gif","slug":"Result.gif","post":"cjrbok4n80002l32v6d64zfwf","modified":0,"renderable":0},{"_id":"source/_posts/详解Android利用AIDL实现进程间通信/SYNC.png","slug":"SYNC.png","post":"cjrbok4n80002l32v6d64zfwf","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjrbok4mx0000l32v62j4qe0t","category_id":"cjrbok4nc0003l32vy7jf9lra","_id":"cjrbok4nq000al32vg38x7cdf"},{"post_id":"cjrbok4n80002l32v6d64zfwf","category_id":"cjrbok4no0007l32v5x4jm8c2","_id":"cjrbok4nw000el32vlpnxjd88"},{"post_id":"cjrbok4nf0005l32v24zkmenl","category_id":"cjrbok4nc0003l32vy7jf9lra","_id":"cjrbok4nw000gl32v8yn33c0u"}],"PostTag":[{"post_id":"cjrbok4mx0000l32v62j4qe0t","tag_id":"cjrbok4ne0004l32vi4s8kn7c","_id":"cjrbok4nq0009l32vy502m4rs"},{"post_id":"cjrbok4n80002l32v6d64zfwf","tag_id":"cjrbok4np0008l32vxfjk7kfy","_id":"cjrbok4nu000dl32vv3h1r82y"},{"post_id":"cjrbok4nf0005l32v24zkmenl","tag_id":"cjrbok4nq000cl32vfbffuh1f","_id":"cjrbok4nw000fl32v41zb8pwv"}],"Tag":[{"name":"转载,投资,技术,财经","_id":"cjrbok4ne0004l32vi4s8kn7c"},{"name":"Android,AIDL,进程间通信,技术","_id":"cjrbok4np0008l32vxfjk7kfy"},{"name":"转载,职业,鸡汤,投资","_id":"cjrbok4nq000cl32vfbffuh1f"}]}}